var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/EventGenerator.html",[0,0.187,1,3.295]],["body/classes/EventGenerator.html",[0,0.099,1,2.807,2,1.291,3,0.041,4,0.056,5,0.116,6,6.454,7,1.882,8,1.359,9,3.315,10,3.315,11,2.807,12,2.49,13,3.757,14,3.243,15,3.757,16,3.757,17,4.224,18,3.315,19,3.757,20,1.657,21,1.3,22,2.634,23,2.075,24,3.757,25,0.19,26,4.049,27,4.958,28,3.811,29,3.757,30,4.183,31,1.792,32,5.571,33,6.312,34,3.757,35,1.456,36,3.405,37,5.91,38,5.91,39,4.71,40,5.216,41,5.216,42,5.216,43,0.598,44,0.009,45,1.639,46,0.828,47,1.488,48,3.025,49,3.667,50,3.757,51,3.667,52,1.881,53,3.757,54,3.757,55,3.757,56,2.258,57,3.757,58,2.49,59,5.395,60,5.395,61,5.395,62,3.757,63,4.761,64,3.757,65,3.757,66,4.71,67,3.757,68,3.025,69,3.757,70,3.315,71,5.684,72,1.826,73,5.684,74,5.395,75,1.378,76,2.337,77,3.315,78,3.757,79,1.379,80,2.807,81,3.757,82,0.976,83,3.025,84,3.757,85,4.837,86,3.025,87,3.757,88,2.337,89,5.554,90,6.312,91,4.71,92,2.071,93,5.395,94,3.757,95,8.163,96,2.337,97,5.082,98,4.343,99,5.395,100,1.464,101,1.214,102,1.002,103,7.606,104,6.899,105,5.333,106,6.312,107,3.757,108,2.337,109,4.837,110,2.504,111,1.997,112,4.032,113,4.761,114,2.337,115,3.757,116,5.855,117,6.82,118,4.837,119,2.337,120,5.395,121,3.923,122,5.395,123,3.398,124,4.032,125,3.575,126,4.717,127,1.217,128,3.757,129,2.337,130,3.757,131,2.337,132,5.395,133,2.337,134,2.337,135,6.915,136,2.337,137,2.337,138,2.337,139,2.337,140,2.337,141,2.337,142,3.315,143,2.337,144,2.337,145,2.337,146,2.337,147,2.337,148,2.337,149,0.254,150,1.345,151,2.49,152,1.747,153,1.156,154,4.837,155,2.711,156,0.082,157,1.882,158,2.152,159,5.91,160,2.337,161,2.591,162,2.337,163,2.337,164,2.337,165,6.312,166,1.269,167,4.71,168,2.337,169,2.337,170,2.337,171,3.784,172,1.729,173,1.684,174,1.684,175,1.684,176,4.157,177,4.157,178,2.337,179,2.337,180,4.71,181,4.343,182,2.337,183,2.807,184,2.337,185,2.337,186,2.337,187,3.757,188,2.337,189,2.337,190,2.337,191,1.639,192,2.337,193,2.337,194,2.337,195,2.337,196,2.337,197,5.395,198,3.757,199,2.337,200,0.836,201,0.931,202,2.337,203,0.718,204,2.337,205,2.337,206,1.497,207,2.337,208,2.807,209,1.639,210,2.337,211,2.337,212,2.337,213,2.337,214,2.337,215,2.337,216,2.337,217,2.337,218,2.337,219,2.337,220,2.337,221,1.242,222,4.71,223,2.337,224,1.242,225,2.337,226,1.156,227,2.337,228,0.004,229,0.004]],["title/classes/FakeFileList.html",[0,0.187,151,2.922]],["body/classes/FakeFileList.html",[0,0.308,2,2.712,3,0.086,4,0.118,5,0.162,8,1.664,14,4.647,20,1.993,21,1.155,25,0.684,35,2.515,43,0.65,44,0.009,46,1.082,47,0.895,52,1.639,72,1.814,75,1.463,92,2.039,98,5.224,100,1.801,101,1.492,102,1.232,109,6.282,110,3.863,151,4.3,156,0.107,171,3.863,181,6.782,228,0.006,229,0.006,230,7.547,231,4.332,232,1.843,233,0.832,234,4.332,235,4.332,236,4.332,237,4.908,238,4.332,239,3.324,240,5.421,241,3.579,242,4.368,243,1.337,244,4.908,245,4.908,246,6.488,247,6.488,248,3.9,249,5.224,250,5.224,251,5.726,252,4.849,253,1.402,254,4.908,255,6.488,256,4.908,257,3.734,258,1.809,259,6.488,260,4.908,261,6.488,262,4.849,263,8.04,264,6.488,265,4.908,266,6.488,267,4.908,268,4.908,269,4.908,270,4.908,271,4.3,272,3.9,273,4.908,274,4.908,275,4.908,276,4.908,277,4.908,278,4.908,279,6.488,280,4.908,281,4.908,282,4.908,283,4.908,284,4.908]],["title/interfaces/GridOptions.html",[233,0.747,285,3.295]],["body/interfaces/GridOptions.html",[3,0.098,4,0.134,5,0.098,8,1.201,21,1.255,25,0.453,43,0.718,44,0.009,72,1.958,102,1.543,111,2.967,155,3.212,156,0.169,203,1.068,206,2.81,228,0.007,229,0.007,233,1.195,241,2.584,285,5.269,286,1.996,287,0.879,288,4.494,289,1.875,290,6.883,291,5.269,292,4.057,293,6.222,294,6.222,295,7.545,296,6.222,297,4.943,298,6.883,299,5.676,300,6.883,301,5.676,302,4.672,303,5.269,304,3.895,305,5.676,306,4.057,307,7.164,308,6.536,309,7.164,310,2.357,311,5.775,312,5.775,313,3.516,314,3.516,315,2.357,316,2.105,317,1.895,318,4.171,319,3.914,320,3.355,321,4.926,322,4.926,323,4.494,324,4.171,325,2.289]],["title/interfaces/IBaseNode.html",[233,0.747,326,3.091]],["body/interfaces/IBaseNode.html",[3,0.114,4,0.157,5,0.114,21,1.382,25,0.53,43,0.696,44,0.009,72,1.473,101,1.76,102,1.316,121,3.967,156,0.169,203,1.698,228,0.008,229,0.008,233,1.404,286,2.336,287,1.028,310,1.737,325,3.397,326,6.01,327,2.679,328,4.881,329,3.233,330,4.889,331,2.928,332,4.329,333,3.926,334,4.881,335,4.58]],["title/interfaces/IDateFormatOptions.html",[233,0.747,336,3.091]],["body/interfaces/IDateFormatOptions.html",[0,0.131,3,0.054,4,0.074,5,0.054,8,0.665,21,0.831,22,2.165,25,0.251,28,1.706,31,1.968,43,0.724,44,0.009,46,1.622,47,1.026,49,1.641,52,1.877,56,4.26,82,1.212,102,1.285,149,0.334,156,0.161,158,1.957,166,0.536,201,2.11,203,1.629,206,2.825,221,1.641,228,0.005,229,0.005,233,0.523,243,0.841,248,2.806,249,2.486,286,1.104,306,3.239,315,1.304,317,1.585,329,2.367,331,1.165,336,4.399,337,0.747,338,2.046,339,2.165,340,5.453,341,5.06,342,2.232,343,5.946,344,5.297,345,5.188,346,5.946,347,6.698,348,6.255,349,1.961,350,5.036,351,4.12,352,3.466,353,2.686,354,2.94,355,3.273,356,5.036,357,3.11,358,4.466,359,4.878,360,2.165,361,3.11,362,0.821,363,1.945,364,2.031,365,2.307,366,1.582,367,1.197,368,2.94,369,0.505,370,3.001,371,1.266,372,1.777,373,3.273,374,2.94,375,0.208,376,2.031,377,2.307,378,1.343,379,4.725,380,2.307,381,0.597,382,2.046,383,2.046,384,2.307,385,2.486,386,1.302,387,2.725,388,2.307,389,2.307,390,4.532,391,2.486,392,2.806,393,1.429,394,2.307,395,2.165,396,2.046,397,2.307,398,2.307,399,1.641,400,2.307,401,2.165,402,2.307,403,2.307,404,1.641,405,2.046,406,5.036,407,2.165,408,3.489,409,3.489,410,3.489,411,0.68,412,1.476,413,1.304,414,3.094,415,2.725,416,2.486,417,2.392,418,1.197,419,1.856,420,2.165,421,2.307,422,1.104,423,2.725,424,3.723,425,1.165,426,2.725,427,5.537,428,3.952,429,2.307,430,2.307,431,1.945,432,1.945,433,2.486,434,2.486,435,2.486,436,1.856,437,2.307,438,1.81,439,2.307,440,2.725,441,2.046,442,1.266,443,2.486,444,2.486,445,2.725,446,2.486,447,2.307,448,2.725,449,2.486,450,2.725,451,1.641,452,2.725,453,2.307,454,2.579,455,2.486,456,2.046,457,3.489,458,4.12,459,1.706,460,2.165,461,2.725,462,6.255,463,3.611,464,4.12,465,2.725,466,2.725,467,2.725,468,2.725,469,2.725,470,2.725,471,2.725,472,2.725,473,2.725,474,2.725,475,2.725,476,2.806,477,2.165,478,2.307,479,4.12,480,2.307,481,2.486,482,2.725,483,2.725,484,4.967,485,2.725,486,4.967,487,2.725,488,2.725,489,2.307,490,2.725,491,2.725,492,2.725,493,2.725,494,1.777,495,2.725,496,2.725,497,2.725,498,2.725,499,4.12,500,4.967,501,4.12,502,4.967,503,4.12,504,4.12,505,2.725,506,2.725,507,2.392,508,2.725,509,4.532,510,2.725,511,2.486,512,2.725,513,2.725,514,2.725,515,2.725,516,2.725,517,2.725,518,2.725,519,4.12,520,2.725,521,2.725,522,4.967,523,2.725,524,2.725]],["title/interfaces/IDropEvent.html",[112,3.295,233,0.747]],["body/interfaces/IDropEvent.html",[3,0.112,4,0.154,5,0.155,8,1.381,17,3.944,18,6.78,21,1.367,23,4.244,25,0.521,43,0.691,44,0.009,109,5.765,110,3.412,112,5.741,113,7.52,149,0.303,151,5.091,152,4.797,156,0.168,228,0.008,229,0.008,233,1.088,251,6.78,286,2.295,331,2.898,525,5.664,526,5.168,527,8.521,528,7.682,529,7.682,530,7.682,531,5.741]],["title/interfaces/IDropdownOption.html",[233,0.747,532,3.091]],["body/interfaces/IDropdownOption.html",[0,0.214,3,0.089,4,0.122,5,0.089,8,1.091,21,1.179,25,0.411,31,2.164,43,0.62,44,0.009,47,1.588,52,1.143,72,1.665,102,1.123,121,3.067,149,0.348,156,0.171,161,1.596,166,0.88,203,1.665,226,2.507,228,0.007,229,0.007,232,1.285,233,0.859,286,1.812,287,0.798,289,2.082,310,2.082,315,3.117,317,2.25,331,1.911,342,3.168,362,1.348,364,3.405,369,0.663,375,0.342,378,2.204,381,0.848,386,1.848,411,1.117,422,1.812,436,3.046,532,5.696,533,3.787,534,3.501,535,3.787,536,5.843,537,3.417,538,6.909,539,5.847,540,4.173,541,4.173,542,2.596,543,2.139,544,5.334,545,2.423,546,2.078,547,3.067,548,4.472,549,2.423,550,4.472,551,4.472,552,4.08,553,2.916,554,3.982,555,4.08,556,3.787,557,4.08,558,4.08,559,3.787,560,4.08,561,3.787,562,1.636,563,4.08,564,4.08]],["title/interfaces/IFilterModel.html",[233,0.747,565,3.295]],["body/interfaces/IFilterModel.html",[3,0.1,4,0.137,5,0.1,8,1.228,21,1.272,25,0.463,43,0.753,44,0.009,47,1.567,72,1.901,102,1.212,127,1.846,155,3.284,156,0.125,203,1.745,228,0.007,229,0.007,233,0.968,286,2.041,287,0.899,310,2.076,315,3.018,325,2.34,340,4.917,342,2.729,364,3.665,419,4.918,424,4.313,425,2.945,565,5.343,566,5.037,567,4.595,568,6.425,569,4.111,570,7.149,571,7.149,572,8.183,573,7.149,574,7.149]],["title/interfaces/IFlatNodeObject.html",[233,0.747,333,2.65]],["body/interfaces/IFlatNodeObject.html",[3,0.116,4,0.159,5,0.116,21,1.391,25,0.536,43,0.657,44,0.009,72,1.877,101,1.356,121,3.058,156,0.171,203,1.495,228,0.008,229,0.008,233,1.411,286,2.362,287,1.04,310,2.213,325,2.709,326,6.032,327,2.709,328,4.937,329,2.492,330,4.922,331,3.139,332,4.378,333,4.697,334,6.429,335,6.032]],["title/interfaces/IGridDataEntry.html",[233,0.747,313,2.777]],["body/interfaces/IGridDataEntry.html",[3,0.106,4,0.145,5,0.106,8,1.299,21,1.318,25,0.49,43,0.507,44,0.009,72,1.932,111,3.935,155,3.474,156,0.175,203,1.531,206,2.406,228,0.007,229,0.007,233,1.255,241,3.427,285,4.512,286,2.159,287,0.951,288,4.861,289,1.969,290,5.96,291,4.512,292,3.474,293,5.328,294,5.328,295,6.533,296,5.328,297,4.233,298,5.96,299,4.861,300,5.96,301,4.861,302,4.001,303,4.512,304,3.335,305,4.861,306,3.474,307,5.328,308,4.861,309,5.328,310,2.129,311,4.512,312,4.512,313,4.663,314,4.663,315,3.125,316,2.792,317,2.514,318,5.532,319,5.191,320,4.449,321,6.533,322,6.533,323,5.96,324,6.238,325,2.476,342,2.887,575,4.233]],["title/interfaces/IKey.html",[154,3.091,233,0.747]],["body/interfaces/IKey.html",[0,0.091,3,0.038,4,0.052,5,0.038,8,0.463,14,1.292,21,0.625,25,0.175,26,4.202,43,0.374,44,0.009,71,4.539,72,1.004,73,4.539,85,1.507,101,1.874,111,2.73,118,3.601,121,4.228,126,2.623,127,2.047,150,1.237,152,1.606,154,6.364,156,0.124,203,1.162,208,6.813,209,6.392,228,0.003,229,0.003,232,0.545,233,0.595,286,0.769,304,1.188,315,2.705,317,0.73,325,2.491,331,0.811,342,1.679,457,4.539,576,1.731,577,3.926,578,4.23,579,3.402,580,4.557,581,1.731,582,3.582,583,1.292,584,4.89,585,3.098,586,3.098,587,5.36,588,3.098,589,2.826,590,4.539,591,3.098,592,3.098,593,5.36,594,3.098,595,3.098,596,3.098,597,3.098,598,3.098,599,3.098,600,5.36,601,3.098,602,3.098,603,3.098,604,3.098,605,5.36,606,3.098,607,3.098,608,5.36,609,3.098,610,2.826,611,3.098,612,3.098,613,5.36,614,2.826,615,5.36,616,3.098,617,3.098,618,5.36,619,3.098,620,3.098,621,5.36,622,3.098,623,3.098,624,5.36,625,3.098,626,3.098,627,5.36,628,3.098,629,3.098,630,4.89,631,3.098,632,2.623,633,3.098,634,3.098,635,4.89,636,3.098,637,3.098,638,3.098,639,3.098,640,4.89,641,3.098,642,3.098,643,5.36,644,3.098,645,3.098,646,5.36,647,3.098,648,3.098,649,4.539,650,3.098,651,3.098,652,5.36,653,3.098,654,2.826,655,1.606,656,1.731,657,1.731,658,3.838,659,1.606,660,4.135,661,1.897,662,4.533,663,1.731,664,4.135,665,1.897,666,4.533,667,1.897,668,2.949,669,1.731,670,4.533,671,1.731,672,4.533,673,1.731,674,4.533,675,1.897]],["title/interfaces/IKeyModifier.html",[118,3.091,233,0.747]],["body/interfaces/IKeyModifier.html",[0,0.092,3,0.038,4,0.052,5,0.038,8,0.465,14,1.3,21,0.628,25,0.176,26,4.203,43,0.182,44,0.009,71,4.551,72,0.488,73,4.551,85,1.516,101,1.875,111,1.875,118,3.981,121,4.222,126,3.852,127,2.048,150,1.244,152,1.616,154,6.367,156,0.124,203,0.675,208,6.796,209,6.377,228,0.004,229,0.004,232,0.548,233,0.598,286,0.773,304,1.195,315,2.397,317,0.734,325,2.498,331,1.33,342,1.687,457,4.551,576,1.741,577,3.942,578,4.801,579,3.861,580,5.172,581,1.741,582,3.597,583,1.3,584,4.903,585,3.113,586,3.113,587,5.375,588,3.113,589,2.84,590,4.551,591,3.113,592,3.113,593,5.375,594,3.113,595,3.113,596,3.113,597,3.113,598,3.113,599,3.113,600,5.375,601,3.113,602,3.113,603,3.113,604,3.113,605,5.375,606,3.113,607,3.113,608,5.375,609,3.113,610,2.84,611,3.113,612,3.113,613,5.375,614,2.84,615,5.375,616,3.113,617,3.113,618,5.375,619,3.113,620,3.113,621,5.375,622,3.113,623,3.113,624,5.375,625,3.113,626,3.113,627,5.375,628,3.113,629,3.113,630,4.903,631,3.113,632,2.636,633,3.113,634,3.113,635,4.903,636,3.113,637,3.113,638,3.113,639,3.113,640,4.903,641,3.113,642,3.113,643,5.375,644,3.113,645,3.113,646,5.375,647,3.113,648,3.113,649,4.551,650,3.113,651,3.113,652,5.375,653,3.113,654,2.84,655,1.616,656,1.741,657,1.741,658,3.852,659,1.616,660,4.15,661,1.908,662,4.548,663,1.741,664,4.15,665,1.908,666,4.548,667,1.908,668,2.961,669,1.741,670,4.548,671,1.741,672,4.548,673,1.741,674,4.548,675,1.908]],["title/interfaces/IRegexLike.html",[233,0.747,676,3.295]],["body/interfaces/IRegexLike.html",[3,0.097,4,0.133,5,0.097,21,1.248,23,3.875,25,0.449,43,0.702,44,0.009,45,3.882,47,1.555,52,1.884,149,0.261,156,0.186,158,2.332,161,1.743,203,1.472,221,3.728,224,2.943,228,0.007,229,0.007,233,0.939,250,6.516,286,1.98,287,0.872,310,2.047,393,3.746,399,2.943,425,3.053,579,3.328,583,4.216,676,5.753,677,2.719,678,3.487,679,4.137,680,5.647,681,3.487,682,5.647,683,5.241,684,5.241,685,5.241,686,4.137,687,4.457,688,6.723,689,6.19,690,4.886,691,4.886,692,4.457,693,4.886,694,4.457,695,4.457,696,4.457,697,3.882,698,4.886,699,6.19,700,4.886,701,6.19,702,6.19,703,4.137,704,4.886,705,4.886,706,4.886,707,4.886,708,4.886]],["title/interfaces/ISecondFormatOptions.html",[233,0.747,709,3.295]],["body/interfaces/ISecondFormatOptions.html",[0,0.271,3,0.084,4,0.116,5,0.084,8,1.036,21,1.14,25,0.391,31,1.87,43,0.405,44,0.009,49,2.56,52,1.086,72,1.624,82,1.993,102,1.086,149,0.362,153,3.169,156,0.167,158,1.914,166,1.113,172,1.768,173,1.722,174,1.722,175,1.722,201,1.193,206,3.342,228,0.006,229,0.006,233,0.816,243,1.311,248,2.894,286,1.722,292,2.771,306,3.687,329,2.416,337,1.165,340,4.035,341,4.534,342,3.064,344,6.14,345,4.534,352,4.539,353,3.687,354,4.035,355,4.492,359,5.295,361,3.539,362,1.281,367,1.867,369,0.432,371,1.975,372,2.771,375,0.325,381,0.82,382,3.192,383,3.192,386,1.343,394,3.599,395,3.377,396,3.192,397,3.599,398,3.599,399,2.56,400,3.599,401,3.377,402,3.599,403,3.599,404,2.56,405,3.192,406,5.971,407,3.377,408,4.788,409,4.788,410,4.788,411,1.061,417,3.282,419,2.894,421,3.599,422,1.722,424,2.66,425,2.416,438,1.867,459,2.66,460,3.377,489,3.599,507,3.282,542,2.467,709,5.38,710,3.377,711,3.599,712,3.033,713,2.627,714,2.033,715,4.788,716,3.599,717,3.877,718,7.25,719,4.25,720,4.25,721,4.25,722,2.16,723,2.229,724,4.25,725,4.25,726,2.16,727,3.377,728,2.033,729,2.033,730,2.771,731,4.25,732,4.25,733,2.095,734,4.25,735,4.25,736,4.25,737,4.25,738,4.25,739,4.25,740,4.25,741,4.25,742,4.25,743,6.353,744,4.25,745,4.25,746,5.654,747,4.25,748,3.877,749,4.25]],["title/interfaces/ISelectionDiff.html",[233,0.747,750,3.55]],["body/interfaces/ISelectionDiff.html",[3,0.116,4,0.159,5,0.116,8,1.422,21,1.391,25,0.536,43,0.657,44,0.009,110,4.572,156,0.144,228,0.008,229,0.008,233,1.12,240,6.032,257,4.497,286,2.362,287,1.04,317,2.243,342,3.159,750,6.292,751,5.83,752,4.318,753,5.83,754,6.606,755,6.606,756,7.592,757,5.899,758,6.292]],["title/interfaces/ISnackBarAlert.html",[233,0.747,759,2.777]],["body/interfaces/ISnackBarAlert.html",[0,0.236,2,2.544,3,0.128,4,0.073,5,0.053,21,0.82,25,0.246,36,2.202,43,0.703,44,0.009,46,0.668,51,1.612,52,1.588,72,1.508,79,2.937,82,1.446,102,1.418,149,0.293,153,2.754,156,0.168,158,1.872,166,1.223,171,4.183,200,1.084,201,1.912,203,1.684,206,2.665,221,3.305,224,1.612,228,0.005,229,0.005,233,0.781,239,2.359,243,1.254,257,2.65,286,1.084,287,0.477,304,2.544,317,2.27,329,1.737,331,1.144,357,3.888,371,1.243,372,1.745,375,0.205,378,3.062,381,0.796,386,1.553,393,2.132,418,1.785,425,1.144,451,1.612,463,1.745,476,1.823,537,1.888,569,3.366,713,1.888,714,1.28,728,1.28,729,1.28,757,2.01,759,3.916,760,1.612,761,1.745,762,5.754,763,4.431,764,5.662,765,5.412,766,5.052,767,5.216,768,2.852,769,2.058,770,3.229,771,2.544,772,4.12,773,3.229,774,2.768,775,3.229,776,3.229,777,3.052,778,3.052,779,3.229,780,2.754,781,2.448,782,3.052,783,4.808,784,3.818,785,5.284,786,3.904,787,3.229,788,3.052,789,3.229,790,3.229,791,3.916,792,4.359,793,2.01,794,1.524,795,3.229,796,1.404,797,3.229,798,3.229,799,4.359,800,2.126,801,2.01,802,2.01,803,3.204,804,2.126,805,4.935,806,1.36,807,2.126,808,1.45,809,2.126,810,1.404,811,1.404,812,1.209,813,2.126,814,3.229,815,2.126,816,2.126,817,2.126,818,3.229,819,2.126,820,2.01,821,1.823,822,2.01,823,2.126,824,2.126,825,2.126,826,2.126,827,2.126,828,2.126,829,2.126,830,2.126,831,1.745,832,4.211,833,4.05,834,4.433,835,4.431,836,2.768,837,1.91,838,2.01,839,2.01,840,1.91,841,2.01,842,2.01,843,4.431,844,4.848,845,2.9,846,2.126,847,1.91,848,2.01,849,2.01,850,2.9,851,2.9,852,1.745,853,1.91,854,2.01,855,2.126,856,2.126,857,1.612,858,2.126,859,2.126,860,2.126,861,3.229,862,2.126,863,2.126,864,2.126,865,2.126,866,2.126,867,2.126,868,2.126,869,2.126,870,2.126,871,2.126,872,1.91,873,3.229,874,2.126,875,3.229,876,1.604,877,3.229,878,2.126,879,1.554,880,3.904,881,2.126,882,2.126,883,2.126,884,3.229,885,2.126,886,2.126,887,2.126,888,2.126,889,2.126,890,3.904,891,2.01,892,2.126,893,2.126,894,2.126,895,2.126,896,3.229,897,2.126,898,2.126,899,2.126,900,2.126,901,2.126]],["title/interfaces/ISnackBarOptions.html",[233,0.747,850,2.777]],["body/interfaces/ISnackBarOptions.html",[0,0.244,2,1.779,3,0.134,4,0.077,5,0.056,8,0.693,21,0.857,25,0.261,36,1.54,43,0.705,44,0.009,46,0.709,51,1.711,52,1.624,72,1.302,79,2.741,82,1.499,102,1.221,149,0.302,153,2.855,156,0.171,158,1.915,166,1.251,171,4.247,200,1.151,201,1.944,203,1.617,206,2.87,221,3.406,224,1.711,228,0.005,229,0.005,233,0.817,239,2.468,243,1.312,257,1.853,286,1.151,287,0.507,304,1.779,317,1.96,329,1.817,331,1.817,357,3.978,371,1.32,372,1.853,375,0.217,378,3.132,381,0.82,386,1.61,393,2.23,418,1.248,425,1.214,451,1.711,463,1.853,476,1.935,537,1.32,569,3.443,713,1.976,714,1.359,728,1.359,729,1.359,757,3.193,759,3.636,760,1.711,761,1.853,762,5.603,763,3.193,764,5.603,765,5.049,766,4.988,767,4.947,768,2.468,769,1.595,770,2.257,771,1.779,772,3.193,773,2.257,774,1.935,775,2.257,776,2.257,777,2.134,778,2.134,779,2.257,780,2.383,781,1.711,782,2.134,783,4.876,784,3.692,785,5.049,786,4.048,787,2.257,788,2.134,789,2.257,790,2.257,791,3.636,792,4.493,793,2.134,794,1.595,795,3.378,796,1.49,797,3.378,798,3.378,799,4.493,800,2.257,801,2.134,802,2.134,803,3.322,804,2.257,805,5.049,806,1.444,807,2.257,808,1.54,809,2.257,810,1.49,811,1.49,812,1.283,813,2.257,814,3.378,815,2.257,816,2.257,817,2.257,818,3.378,819,2.257,820,2.134,821,1.935,822,2.134,823,2.257,824,2.257,825,2.257,826,2.257,827,2.257,828,2.257,829,2.257,830,2.257,831,1.853,832,4.701,833,4.295,834,4.701,835,4.772,836,2.896,837,2.028,838,2.134,839,2.134,840,2.028,841,2.134,842,2.134,843,4.547,844,5.086,845,3.034,846,2.257,847,2.028,848,2.134,849,2.134,850,3.636,851,3.034,852,1.853,853,2.028,854,2.134,855,2.257,856,2.257,857,1.711,858,2.257,859,2.257,860,2.257,861,3.378,862,2.257,863,2.257,864,2.257,865,2.257,866,2.257,867,2.257,868,2.257,869,2.257,870,2.257,871,2.257,872,2.028,873,3.378,874,2.257,875,3.378,876,1.678,877,3.378,878,2.257,879,1.649,880,4.048,881,2.257,882,2.257,883,2.257,884,3.378,885,2.257,886,2.257,887,2.257,888,2.257,889,2.257,890,4.048,891,2.134,892,2.257,893,2.257,894,2.257,895,2.257,896,3.378,897,2.257,898,2.257,899,2.257,900,2.257,901,2.257]],["title/interfaces/ISortModel.html",[233,0.747,902,3.55]],["body/interfaces/ISortModel.html",[3,0.104,4,0.143,5,0.104,8,1.282,12,4.866,17,3.399,21,1.307,25,0.484,43,0.698,44,0.009,102,1.245,149,0.281,155,3.429,156,0.16,191,5.148,203,1.662,228,0.007,229,0.007,233,1.01,286,2.131,287,0.938,310,2.117,325,2.443,358,5.759,567,5.912,902,5.912,903,5.258,904,6.741,905,7.343,906,5.473,907,4.8,908,8.308,909,7.332,910,6.48,911,5.825,912,6.48,913,7.343,914,7.343,915,5.258]],["title/interfaces/ISuggestValue.html",[233,0.747,916,2.777]],["body/interfaces/ISuggestValue.html",[3,0.09,4,0.124,5,0.09,8,1.109,21,1.192,25,0.418,31,1.739,43,0.716,44,0.009,47,1.221,72,1.678,79,3.073,102,1.465,111,4.187,149,0.243,153,3.312,156,0.146,166,1.163,203,1.685,228,0.007,229,0.007,233,0.873,241,4.043,286,1.842,287,0.811,302,4.438,310,2.298,314,4.218,315,2.175,324,5.887,331,2.526,342,3.202,357,3.699,381,0.857,386,1.867,432,4.218,507,4.289,531,5.004,547,2.384,549,2.463,575,5.524,752,3.699,916,4.218,917,4.546,918,5.004,919,5.217,920,4.449,921,8.37,922,6.103,923,7.387,924,6.696,925,4.695,926,5.391,927,3.699,928,6.696,929,5.004,930,5.004,931,5.909,932,6.696,933,3.854,934,6.696,935,5.004,936,3.414,937,1.891,938,1.705,939,2.053,940,3.096,941,2.639,942,1.943,943,5.151,944,5.151,945,5.151,946,5.151]],["title/interfaces/ISuggestValueData.html",[233,0.747,947,3.295]],["body/interfaces/ISuggestValueData.html",[3,0.115,4,0.157,5,0.115,8,1.41,21,1.384,25,0.532,43,0.551,44,0.009,102,1.319,111,4.134,149,0.309,156,0.17,228,0.008,229,0.008,233,1.111,241,3.971,286,2.343,287,1.032,325,3.402,329,3.412,331,2.934,342,3.72,575,5.454,916,5.224,918,5.812,947,5.812,948,5.783,949,6.553]],["title/interfaces/ISuggestValues.html",[233,0.747,950,3.295]],["body/interfaces/ISuggestValues.html",[3,0.111,4,0.152,5,0.111,8,1.36,21,1.355,25,0.513,43,0.639,44,0.009,47,1.388,72,1.842,102,1.437,149,0.298,156,0.166,228,0.008,229,0.008,233,1.071,241,3.523,271,5.84,272,4.574,286,2.26,287,0.995,317,2.584,329,3.323,342,3.64,941,3.899,947,6.335,950,5.687,951,5.576,952,5.687,953,7.61,954,4.204,955,6.716,956,6.127,957,5.687,958,6.319]],["title/interfaces/ITreeNode.html",[233,0.747,330,2.777]],["body/interfaces/ITreeNode.html",[3,0.117,4,0.16,5,0.117,21,1.398,25,0.541,43,0.56,44,0.009,72,1.502,101,1.368,102,1.331,121,3.083,156,0.171,203,1.502,228,0.008,229,0.008,233,1.416,286,2.382,287,1.049,310,1.771,325,2.731,326,6.048,327,2.731,328,4.977,329,2.512,330,5.542,331,3.15,332,5.716,333,4.003,334,4.977,335,4.67]],["title/interfaces/IVisibleDiff.html",[233,0.747,959,3.55]],["body/interfaces/IVisibleDiff.html",[0,0.198,3,0.082,4,0.112,5,0.082,21,1.117,25,0.379,43,0.527,44,0.009,52,1.416,68,3.761,149,0.384,153,2.311,155,2.689,156,0.102,158,1.885,161,1.977,166,0.812,172,2.603,173,2.535,174,2.535,175,2.535,201,2.062,203,1.513,206,2.502,228,0.006,229,0.006,233,0.792,286,1.671,287,0.736,289,1.242,310,1.885,313,2.943,325,1.916,362,1.242,364,2.731,367,1.811,375,0.315,386,1.303,414,3.096,422,1.671,428,3.954,537,1.916,542,3.217,554,3.773,569,3.979,713,1.916,911,5.315,920,2.483,927,2.581,959,6.103,960,4.123,961,3.761,962,6.699,963,3.761,964,3.276,965,3.761,966,5.54,967,3.438,968,4.123,969,4.123,970,4.971,971,3.276,972,4.672,973,4.672,974,4.672,975,5.299,976,7.09,977,7.09,978,5.398,979,6.278,980,6.278,981,4.672,982,7.09,983,4.672,984,4.672,985,4.672,986,8.144,987,5.54,988,4.672,989,4.672,990,4.672,991,4.672,992,4.672,993,4.672,994,4.672,995,1.435,996,4.672,997,4.672,998,6.278,999,4.123,1000,4.672,1001,4.672,1002,3.761,1003,4.672,1004,4.672,1005,4.123,1006,4.672,1007,4.672,1008,4.672,1009,4.672,1010,4.672,1011,4.672,1012,4.672,1013,4.672,1014,4.672,1015,4.672,1016,4.672,1017,6.278,1018,4.672,1019,6.278,1020,3.276,1021,2.483,1022,4.672,1023,4.672,1024,4.672,1025,6.278,1026,4.672,1027,4.672,1028,4.672,1029,4.672,1030,3.491,1031,4.672,1032,4.672,1033,4.123,1034,4.672,1035,4.672,1036,4.672,1037,4.672,1038,4.123,1039,4.672,1040,4.672,1041,4.672,1042,4.672,1043,4.672]],["title/interfaces/IVisibleModel.html",[233,0.747,970,3.091]],["body/interfaces/IVisibleModel.html",[3,0.116,4,0.159,5,0.116,21,1.392,25,0.537,43,0.723,44,0.009,155,3.808,156,0.144,203,1.703,228,0.008,229,0.008,233,1.122,286,2.366,287,1.042,310,2.368,325,2.713,537,3.53,569,4.116,920,4.575,962,6.93,970,5.485,1044,5.839]],["title/directives/KeyboardShortcutDirective.html",[369,0.396,1045,1.918]],["body/directives/KeyboardShortcutDirective.html",[0,0.224,3,0.093,4,0.127,5,0.093,8,1.14,17,4.098,20,2.095,25,0.43,31,1.959,43,0.669,44,0.009,52,1.701,75,1.465,92,1.73,100,1.69,101,1.4,102,1.156,121,3.904,124,6.411,127,1.195,149,0.25,156,0.116,161,1.668,166,0.92,200,1.895,201,1.69,203,1.304,228,0.007,229,0.007,253,1.948,258,1.902,262,5.096,369,0.715,375,0.358,411,1.503,583,3.185,630,4.266,722,3.059,1045,2.966,1046,1.167,1047,6.907,1048,6.907,1049,4.676,1050,6.82,1051,7.541,1052,3.494,1053,6.82,1054,6.82,1055,6.82,1056,7.541,1057,3.494,1058,7.541,1059,6.018,1060,6.82,1061,6.82,1062,5.298,1063,3.864,1064,5.298,1065,6.018,1066,6.82,1067,6.82,1068,6.82,1069,4.099,1070,6.82,1071,6.82,1072,6.82,1073,4.676,1074,5.096,1075,5.298,1076,5.298,1077,5.298,1078,6.82,1079,6.82,1080,6.82,1081,5.298,1082,5.298,1083,5.298,1084,5.298,1085,5.298]],["title/modules/KeyboardShortcutModule.html",[1086,1.497,1087,3.091]],["body/modules/KeyboardShortcutModule.html",[0,0.28,3,0.116,4,0.159,5,0.116,44,0.009,149,0.368,156,0.144,228,0.008,229,0.008,375,0.446,995,2.029,1045,4.011,1047,5.319,1048,5.319,1087,6.304,1088,2.08,1089,2.461,1090,5.83,1091,5.83,1092,5.83,1093,2.654,1094,1.98,1095,6.606,1096,2.723,1097,2.723,1098,2.723,1099,4.937,1100,6.606]],["title/injectables/QueuedAnnouncer.html",[794,1.459,1101,3.55]],["body/injectables/QueuedAnnouncer.html",[0,0.247,3,0.102,4,0.14,5,0.102,20,2.23,25,0.475,43,0.61,44,0.009,52,1.319,75,1.261,92,1.483,100,1.798,101,1.49,102,1.23,149,0.389,156,0.128,161,1.841,174,2.091,200,2.595,201,1.955,203,1.579,228,0.007,229,0.007,243,1.592,258,1.631,362,1.555,363,4.571,367,2.266,375,0.395,441,3.875,451,3.108,771,3.23,772,3.875,794,2.402,852,3.365,1101,5.843,1102,3.108,1103,6.965,1104,6.965,1105,5.16,1106,7.257,1107,5.846,1108,7.284,1109,5.846,1110,7.257,1111,7.257,1112,5.846,1113,5.16,1114,5.846,1115,3.682,1116,5.846,1117,5.846,1118,5.16,1119,5.846,1120,7.892,1121,5.846,1122,5.846,1123,5.846,1124,5.846,1125,5.846,1126,3.514,1127,4.362,1128,4.707,1129,2.266,1130,5.16,1131,5.16,1132,5.846,1133,4.369,1134,5.846,1135,5.846,1136,5.846,1137,5.846,1138,5.846,1139,5.846]],["title/classes/TreeUtils.html",[0,0.187,1140,3.295]],["body/classes/TreeUtils.html",[0,0.198,2,2.584,3,0.082,4,0.112,5,0.082,20,1.93,21,1.118,25,0.38,26,4.218,43,0.699,44,0.009,46,1.031,47,0.853,52,1.838,72,1.877,75,1.446,92,2.066,100,2.018,101,1.76,102,1.381,121,3.853,149,0.334,156,0.137,158,1.671,161,1.473,166,1.232,203,1.357,224,2.486,228,0.006,229,0.006,287,1.332,310,1.671,327,3.47,329,2.861,330,5.455,332,4.164,333,5.289,334,5.668,335,6.208,1074,3.495,1140,4.695,1141,3.495,1142,7.094,1143,7.094,1144,6.283,1145,7.094,1146,7.094,1147,6.283,1148,6.283,1149,7.094,1150,6.283,1151,6.283,1152,6.283,1153,6.283,1154,4.677,1155,4.677,1156,4.677,1157,6.283,1158,7.094,1159,6.693,1160,4.677,1161,4.677,1162,4.677,1163,4.677,1164,4.677,1165,6.283,1166,4.677,1167,6.37,1168,6.283,1169,4.677,1170,4.128,1171,4.128,1172,3.766,1173,5.544,1174,6.283,1175,6.283,1176,4.677,1177,4.677,1178,4.128,1179,4.677,1180,4.677,1181,4.128,1182,5.058,1183,5.058,1184,3.495]],["title/directives/UiAutoAccessibleLabelDirective.html",[369,0.396,1185,1.918]],["body/directives/UiAutoAccessibleLabelDirective.html",[0,0.235,3,0.097,4,0.133,5,0.097,25,0.451,31,1.825,43,0.59,44,0.009,75,1.221,79,2.83,80,4.149,86,4.47,100,1.375,101,1.14,102,1.307,149,0.331,156,0.168,158,1.868,172,2.83,173,2.897,174,1.985,175,1.985,203,1.344,228,0.007,229,0.007,243,1.913,253,2.007,292,3.195,310,1.476,317,1.885,349,1.934,369,0.692,370,4.083,375,0.375,392,3.337,404,2.951,411,1.548,414,3.679,417,4.282,432,3.497,442,3.322,537,3.322,579,3.337,730,3.195,769,2.326,1046,1.223,1099,4.149,1185,3.056,1186,5.76,1187,5.746,1188,6.151,1189,5.76,1190,4.47,1191,6.151,1192,5.551,1193,7.026,1194,3.195,1195,3.337,1196,3.195,1197,5.657,1198,5.25,1199,7.026,1200,4.47,1201,3.679,1202,4.899,1203,3.893,1204,4.47,1205,4.899,1206,4.899,1207,4.899,1208,4.899,1209,4.899,1210,4.47,1211,6.2,1212,4.47,1213,4.149,1214,4.899,1215,4.47,1216,7.026,1217,2.655,1218,5.551,1219,5.551,1220,5.551,1221,5.551,1222,5.551]],["title/modules/UiAutoAccessibleLabelModule.html",[1086,1.497,1223,2.65]],["body/modules/UiAutoAccessibleLabelModule.html",[0,0.275,3,0.114,4,0.156,5,0.114,44,0.009,149,0.365,156,0.142,228,0.008,229,0.008,375,0.439,381,0.832,995,1.997,1088,2.047,1089,2.437,1093,2.628,1094,1.949,1096,2.697,1097,2.697,1098,2.697,1185,4.004,1186,4.858,1187,5.479,1188,5.796,1189,4.858,1223,5.387,1224,5.737,1225,5.737,1226,5.737,1227,6.5,1228,6.5]],["title/directives/UiAutofocusDirective.html",[369,0.396,1229,1.918]],["body/directives/UiAutofocusDirective.html",[0,0.171,3,0.071,4,0.097,5,0.071,8,0.867,17,2.625,20,1.742,21,1.009,25,0.327,31,1.849,35,2.198,43,0.672,44,0.009,46,0.888,47,0.735,49,4.411,52,1.279,75,1.418,92,1.806,100,1.625,101,1.347,102,1.272,127,0.909,149,0.336,156,0.124,158,1.745,161,2.518,172,1.479,173,1.441,174,1.441,175,1.441,201,1.928,228,0.006,229,0.006,232,1.438,243,1.097,253,1.62,258,1.986,310,2.171,332,2.67,337,2.008,361,3.132,362,1.071,363,2.538,365,3.011,367,1.562,368,3.571,369,0.639,370,2.711,373,3.976,375,0.272,386,1.83,411,1.249,419,3.943,420,4.6,422,2.683,424,2.226,429,3.011,430,3.011,431,2.538,432,2.538,433,3.244,434,3.244,435,3.244,436,2.422,437,3.011,438,1.562,439,3.011,453,3.011,454,2.226,456,4.348,463,2.319,477,2.825,478,3.011,723,1.865,727,4.6,752,3.132,876,1.975,975,3.011,1046,0.888,1115,2.538,1126,3.408,1129,3.48,1194,2.319,1229,2.466,1230,6.682,1231,3.556,1232,5.67,1233,4.902,1234,4.565,1235,5.67,1236,4.565,1237,3.361,1238,7.783,1239,7.12,1240,6.438,1241,6.283,1242,6.56,1243,5.67,1244,6.56,1245,6.56,1246,4.973,1247,4.029,1248,5.67,1249,5.608,1250,5.67,1251,4.6,1252,4.029,1253,5.67,1254,5.67,1255,4.029,1256,4.029,1257,3.976,1258,4.029,1259,6.283,1260,4.029,1261,5.67,1262,4.029,1263,4.029,1264,5.67,1265,4.029,1266,5.67,1267,4.029,1268,3.556,1269,4.029,1270,2.064,1271,3.556,1272,4.029,1273,5.004,1274,4.029,1275,4.029,1276,4.029,1277,4.029,1278,3.244,1279,4.132,1280,4.029,1281,4.029,1282,4.029,1283,3.556,1284,4.029,1285,4.029,1286,4.029,1287,4.029,1288,4.029,1289,4.029]],["title/modules/UiAutofocusModule.html",[1086,1.497,1290,3.091]],["body/modules/UiAutofocusModule.html",[0,0.28,3,0.116,4,0.159,5,0.116,44,0.009,149,0.368,156,0.144,228,0.008,229,0.008,337,1.599,375,0.446,381,0.845,995,2.029,1088,2.08,1089,2.461,1093,2.654,1094,1.98,1096,2.723,1097,2.723,1098,2.723,1229,4.011,1230,5.319,1290,6.304,1291,5.83,1292,5.83,1293,5.83,1294,6.606,1295,6.606]],["title/components/UiButtonProgressBarComponent.html",[82,1.145,1296,1.918]],["body/components/UiButtonProgressBarComponent.html",[0,0.157,3,0.065,4,0.089,5,0.065,20,1.639,21,0.95,25,0.3,44,0.009,46,1.6,47,1.456,56,2.223,58,2.452,75,1.314,79,1.959,82,1.625,92,0.938,101,1.695,127,0.834,149,0.295,156,0.081,166,1.434,228,0.005,229,0.005,232,1.353,258,1.032,289,2.247,316,2.012,327,2.566,337,1.887,349,1.289,362,0.984,369,0.332,375,0.25,376,1.609,378,1.609,381,1.17,411,2.034,412,1.769,413,1.562,418,2.068,442,2.188,534,1.434,542,1.895,543,2.02,545,1.769,546,1.517,562,2.211,677,2.068,714,1.562,726,1.659,728,2.253,729,2.253,733,1.609,769,3.002,780,3.592,796,1.712,806,2.393,808,2.552,810,2.47,811,2.47,812,1.475,876,1.859,933,2.129,937,1.959,938,1.766,939,1.475,941,3.206,942,1.395,967,1.562,1020,2.594,1045,1.609,1046,0.815,1129,2.068,1185,1.609,1217,2.552,1229,1.609,1279,2.33,1296,2.98,1297,2.044,1298,1.83,1299,3.726,1300,6.279,1301,3.265,1302,6.258,1303,5.335,1304,6.258,1305,4.147,1306,4.388,1307,3.699,1308,5.515,1309,3.699,1310,4.296,1311,3.699,1312,3.987,1313,3.699,1314,4.296,1315,3.699,1316,3.699,1317,3.265,1318,1.895,1319,3.265,1320,2.978,1321,2.978,1322,3.699,1323,2.978,1324,2.044,1325,2.33,1326,2.33,1327,2.978,1328,1.895,1329,2.188,1330,3.51,1331,1.895,1332,1.895,1333,1.609,1334,2.734,1335,1.609,1336,1.712,1337,1.895,1338,1.609,1339,1.895,1340,1.659,1341,1.895,1342,1.659,1343,1.895,1344,1.659,1345,1.895,1346,1.659,1347,1.895,1348,1.895,1349,1.769,1350,1.895,1351,1.769,1352,1.712,1353,1.895,1354,1.895,1355,1.562,1356,1.895,1357,1.609,1358,1.895,1359,1.609,1360,1.895,1361,1.895,1362,1.609,1363,1.895,1364,1.83,1365,1.895,1366,2.734,1367,1.609,1368,1.83,1369,1.609,1370,1.895,1371,1.609,1372,1.83,1373,1.895,1374,1.562,1375,1.83,1376,1.562,1377,1.895,1378,1.609,1379,1.83,1380,1.895,1381,1.609,1382,1.83,1383,1.895,1384,1.609,1385,1.83,1386,1.895,1387,1.609,1388,1.83,1389,1.895,1390,1.609,1391,1.83,1392,1.895,1393,1.562,1394,1.83,1395,1.434,1396,1.609,1397,1.609,1398,1.659,1399,1.895,1400,1.609,1401,1.895,1402,1.609,1403,4.267,1404,3.889,1405,3.276,1406,3.276,1407,3.276,1408,3.388,1409,1.609,1410,1.895,1411,1.609,1412,3.109,1413,2.639,1414,3.592,1415,2.639,1416,1.712,1417,1.562,1418,1.769,1419,1.895,1420,1.609,1421,1.83,1422,1.609,1423,1.659,1424,1.895]],["title/components/UiButtonProgressSpinnerComponent.html",[82,1.145,1333,1.918]],["body/components/UiButtonProgressSpinnerComponent.html",[0,0.145,3,0.06,4,0.082,5,0.06,20,1.55,21,0.898,25,0.278,44,0.009,46,1.678,47,1.425,56,2.059,75,1.28,79,1.852,82,1.555,92,0.869,101,1.666,127,0.773,149,0.282,156,0.075,166,1.409,228,0.005,229,0.005,232,1.279,258,0.955,289,2.213,316,1.903,327,2.456,337,1.843,349,1.193,362,0.911,369,0.308,375,0.231,376,1.49,381,1.172,411,2.025,412,1.638,413,1.446,418,1.955,442,3.02,534,1.328,542,1.755,543,1.933,545,1.638,546,1.405,562,2.132,677,1.955,714,1.446,723,1.586,726,1.536,728,2.13,729,2.13,733,1.49,769,3.016,796,1.586,806,2.262,808,2.412,810,2.335,811,2.335,812,1.365,876,2.301,933,2.903,937,1.852,938,1.67,939,1.365,941,3.384,942,1.292,967,1.446,1045,1.49,1046,0.755,1129,1.955,1185,1.49,1217,2.412,1229,1.49,1279,2.157,1296,1.49,1297,1.892,1298,1.694,1299,3.687,1300,6.131,1305,3.968,1306,4.198,1308,4.061,1310,4.061,1312,4.936,1314,4.061,1318,1.755,1319,3.023,1320,2.758,1321,2.758,1323,2.758,1324,2.787,1325,4.16,1326,3.177,1328,1.755,1329,2.069,1330,3.384,1331,1.755,1332,1.755,1333,2.873,1334,2.585,1335,1.49,1336,1.586,1337,1.755,1338,1.49,1339,1.755,1340,1.536,1341,1.755,1342,1.536,1343,1.755,1344,1.536,1345,1.755,1346,1.536,1347,1.755,1348,1.755,1349,1.638,1350,1.755,1351,1.638,1352,1.586,1353,1.755,1354,1.755,1355,1.446,1356,1.755,1357,1.49,1358,1.755,1359,1.49,1360,1.755,1361,1.755,1362,1.49,1363,1.755,1364,1.694,1365,1.755,1366,2.585,1367,1.49,1368,1.694,1369,1.49,1370,1.755,1371,1.49,1372,1.694,1373,1.755,1374,1.446,1375,1.694,1376,1.446,1377,1.755,1378,1.49,1379,1.694,1380,1.755,1381,1.49,1382,1.694,1383,1.755,1384,1.49,1385,1.694,1386,1.755,1387,1.49,1388,1.694,1389,1.755,1390,1.49,1391,1.694,1392,1.755,1393,1.446,1394,1.694,1395,1.328,1396,1.49,1397,1.49,1398,1.536,1399,1.755,1400,1.49,1401,1.755,1402,1.49,1403,4.23,1404,3.815,1405,3.159,1406,3.159,1407,3.159,1408,3.267,1409,1.49,1410,1.755,1411,1.49,1412,3.567,1413,2.495,1414,3.483,1415,2.495,1416,1.586,1417,1.446,1418,1.638,1419,1.755,1420,1.49,1421,1.694,1422,1.49,1423,1.536,1424,1.755,1425,2.758,1426,5.284,1427,4.452,1428,5.284,1429,3.023,1430,3.425,1431,3.425,1432,3.425,1433,3.023,1434,3.425,1435,2.56,1436,3.425,1437,5.284,1438,3.425,1439,3.425,1440,3.425,1441,6.214,1442,3.425,1443,3.023,1444,3.425,1445,3.425,1446,5.829,1447,3.425,1448,5.829,1449,2.903,1450,3.425,1451,3.425,1452,3.425,1453,4.452,1454,4.061,1455,3.77]],["title/directives/UiClickOutsideDirective.html",[369,0.396,1355,1.861]],["body/directives/UiClickOutsideDirective.html",[0,0.273,3,0.113,4,0.174,5,0.085,8,1.048,12,3.226,17,3.814,23,2.689,36,4.206,43,0.542,44,0.009,48,3.919,49,2.587,75,0.846,105,4.524,127,1.098,149,0.378,150,3.713,156,0.168,158,1.716,161,1.533,166,0.846,172,2.369,173,2.307,174,2.307,175,2.307,201,1.599,228,0.006,229,0.006,232,1.235,243,1.757,272,2.926,337,1.561,352,4.257,353,2.801,362,1.716,364,2.117,366,2.494,367,1.887,369,0.72,370,3.086,371,1.996,375,0.328,386,2.149,399,3.429,411,1.422,438,2.501,451,2.587,494,2.801,541,3.066,543,2.083,562,1.571,649,3.638,722,2.894,794,2.136,852,2.801,1030,3.638,1046,1.073,1052,3.948,1057,2.494,1126,2.926,1127,2.926,1129,3.194,1233,4.854,1355,2.724,1456,4.822,1457,3.919,1458,6.205,1459,5.759,1460,7.076,1461,4.867,1462,5.195,1463,3.638,1464,2.501,1465,5.195,1466,4.296,1467,4.822,1468,1.94,1469,4.296,1470,4.296,1471,4.296,1472,4.296,1473,4.296,1474,3.919,1475,4.296,1476,4.296,1477,4.296,1478,4.296,1479,4.296,1480,4.296,1481,3.638,1482,5.694,1483,3.919,1484,4.296,1485,5.694,1486,4.296,1487,4.296,1488,4.296,1489,4.822,1490,4.296,1491,3.878,1492,2.494,1493,3.638,1494,4.296,1495,4.296,1496,4.296,1497,3.919,1498,4.296,1499,2.494,1500,4.296,1501,4.296,1502,4.296,1503,4.296,1504,4.296,1505,4.296]],["title/modules/UiClickOutsideModule.html",[1086,1.497,1506,3.091]],["body/modules/UiClickOutsideModule.html",[0,0.278,3,0.115,4,0.158,5,0.115,36,3.972,44,0.009,149,0.367,156,0.143,228,0.008,229,0.008,337,1.591,375,0.444,381,0.841,995,2.02,1088,2.07,1089,2.454,1093,2.646,1094,1.971,1096,2.715,1097,2.715,1098,2.715,1355,3.891,1456,4.913,1506,6.298,1507,5.801,1508,5.801,1509,5.801,1510,6.574,1511,6.574]],["title/injectables/UiClickOutsideService.html",[794,1.459,1489,3.295]],["body/injectables/UiClickOutsideService.html",[0,0.272,3,0.112,4,0.192,5,0.085,8,1.04,12,3.203,17,3.945,21,1.143,23,3.548,25,0.392,36,4.167,43,0.54,44,0.009,48,3.891,49,2.569,75,0.84,105,3.389,149,0.377,150,4.422,156,0.168,158,1.708,161,1.522,166,0.84,172,2.358,173,2.296,174,2.296,175,2.296,201,1.591,228,0.006,229,0.006,232,1.226,243,1.749,272,2.905,337,1.554,352,4.245,353,3.695,362,1.708,364,2.102,366,2.476,367,1.873,369,0.718,370,3.071,371,1.982,375,0.326,386,2.143,399,3.413,411,1.065,438,2.489,451,2.569,494,2.781,541,4.045,543,2.073,562,1.56,649,4.799,722,2.88,794,2.126,852,2.781,1030,4.799,1052,3.29,1102,2.569,1126,3.86,1127,3.86,1129,2.979,1233,4.045,1355,2.04,1456,4.799,1457,3.891,1458,5.17,1459,4.799,1460,6.782,1462,3.891,1463,3.612,1464,2.489,1465,5.17,1466,4.265,1467,4.799,1468,1.926,1469,4.265,1470,4.265,1471,4.265,1472,4.265,1473,4.265,1474,3.891,1475,4.265,1476,4.265,1477,4.265,1478,4.265,1479,4.265,1480,4.265,1481,3.612,1482,5.667,1483,3.891,1484,5.667,1485,6.782,1486,5.667,1487,5.667,1488,5.667,1489,5.389,1490,5.667,1491,3.86,1492,2.476,1493,3.612,1494,4.265,1495,4.265,1496,4.265,1497,3.891,1498,4.265,1499,2.476,1500,4.265,1501,4.265,1502,4.265,1503,4.265,1504,4.265,1505,4.265,1512,4.833]],["title/directives/UiClipboardDirective.html",[369,0.396,1357,1.918]],["body/directives/UiClipboardDirective.html",[0,0.222,3,0.092,4,0.126,5,0.092,8,1.127,12,4.486,17,3.67,25,0.425,31,1.758,43,0.63,44,0.009,75,1.303,127,1.181,149,0.319,156,0.148,166,1.377,191,3.672,201,1.298,224,2.784,228,0.007,229,0.007,232,1.717,253,1.933,337,1.919,349,2.929,369,0.712,370,3.237,375,0.353,386,2.092,396,4.486,411,1.491,543,2.421,562,1.691,590,5.058,722,3.364,927,3.739,1046,1.154,1052,4.062,1057,3.468,1063,4.384,1118,4.622,1129,3.259,1233,4.263,1237,3.843,1257,5.259,1270,2.683,1357,2.944,1513,6.383,1514,4.622,1515,5.973,1516,7.114,1517,8.408,1518,7.5,1519,7.5,1520,5.237,1521,5.973,1522,5.973,1523,5.237,1524,7.928,1525,5.237,1526,6.768,1527,5.237,1528,5.237,1529,5.237,1530,6.768,1531,5.237,1532,6.768,1533,5.237,1534,5.237,1535,5.237,1536,5.237,1537,5.237,1538,5.237]],["title/modules/UiClipboardModule.html",[1086,1.497,1539,3.295]],["body/modules/UiClipboardModule.html",[0,0.28,3,0.116,4,0.159,5,0.116,44,0.009,149,0.368,156,0.144,228,0.008,229,0.008,337,1.599,375,0.446,381,0.845,995,2.029,1088,2.08,1089,2.461,1093,2.654,1094,1.98,1096,2.723,1097,2.723,1098,2.723,1357,4.011,1513,5.319,1539,6.719,1540,5.83,1541,5.83,1542,5.83,1543,6.606,1544,6.606]],["title/directives/UiContentLoaderDirective.html",[369,0.396,1359,1.918]],["body/directives/UiContentLoaderDirective.html",[0,0.19,3,0.079,4,0.147,5,0.079,20,1.877,25,0.364,31,2.09,35,2.368,43,0.584,44,0.009,47,1.467,52,1.378,75,1.493,92,1.891,100,1.513,101,1.254,102,1.036,127,1.012,149,0.368,156,0.098,158,1.193,166,1.061,201,2.129,228,0.006,229,0.006,232,1.549,243,1.663,253,1.745,258,2.079,310,2.074,325,1.84,337,2.099,349,3.176,362,1.193,364,2.657,367,1.739,369,0.549,375,0.303,411,1.346,422,1.604,424,2.479,425,1.692,438,2.368,454,2.479,542,3.13,543,2.242,562,2.407,712,3.847,784,3.688,854,4.603,1046,0.989,1237,3.558,1270,3.82,1312,3.353,1318,2.299,1335,2.657,1359,2.657,1412,2.435,1435,3.353,1464,2.368,1545,5.463,1546,3.146,1547,4.87,1548,7.102,1549,6.003,1550,6.945,1551,6.945,1552,6.945,1553,6.945,1554,4.486,1555,5.572,1556,6.129,1557,4.941,1558,4.486,1559,6.108,1560,6.108,1561,4.486,1562,4.486,1563,4.486,1564,4.486,1565,4.486,1566,4.486,1567,4.486,1568,4.486,1569,5.39,1570,2.973,1571,3.353,1572,4.486,1573,4.486,1574,3.959,1575,4.486,1576,3.959,1577,3.959,1578,4.486,1579,4.486,1580,4.486,1581,4.486,1582,4.486,1583,4.486,1584,7.456,1585,4.486,1586,4.486,1587,4.486,1588,4.486,1589,6.108,1590,4.486,1591,4.486,1592,3.146,1593,4.486,1594,3.959,1595,4.486,1596,4.486,1597,4.486,1598,4.486,1599,4.486,1600,4.486,1601,4.486,1602,4.486,1603,4.486,1604,4.486,1605,4.486,1606,4.486,1607,4.486,1608,4.486,1609,4.486,1610,4.486]],["title/modules/UiContentLoaderModule.html",[1086,1.497,1611,3.091]],["body/modules/UiContentLoaderModule.html",[0,0.263,3,0.109,4,0.149,5,0.109,44,0.009,149,0.407,156,0.136,228,0.007,229,0.007,337,1.506,349,2.938,375,0.42,381,0.796,995,1.912,1088,1.959,1089,2.374,1093,2.56,1094,1.865,1096,2.627,1097,2.627,1098,2.627,1318,3.188,1335,3.819,1359,3.983,1412,2.48,1468,2.48,1545,3.919,1570,4.124,1571,4.65,1611,6.329,1612,5.491,1613,5.491,1614,5.491,1615,5.491,1616,3.49,1617,6.071,1618,5.491,1619,2.791]],["title/components/UiContentSpinnerComponent.html",[82,1.145,1335,1.918]],["body/components/UiContentSpinnerComponent.html",[0,0.149,3,0.062,4,0.085,5,0.062,20,1.581,21,0.916,25,0.286,35,1.995,43,0.296,44,0.009,46,1.569,47,1.436,52,1.372,56,2.116,58,2.333,72,0.794,75,1.368,79,1.89,82,1.58,92,0.893,101,1.676,127,0.794,149,0.316,156,0.077,158,1.369,166,1.368,228,0.005,229,0.005,232,1.305,258,0.982,289,2.225,316,1.941,327,2.495,337,1.944,349,3.133,362,0.936,367,1.365,369,0.316,375,0.238,376,1.531,378,1.531,379,2.468,381,1.163,411,2.029,412,1.683,413,1.486,418,1.995,438,1.995,442,2.111,534,1.365,542,1.804,543,1.964,545,1.683,546,1.444,562,2.16,677,1.995,713,1.444,714,1.486,726,1.579,728,2.173,729,2.173,733,1.531,769,2.797,796,1.629,806,2.308,808,2.461,810,2.382,811,2.382,812,1.403,933,2.962,937,1.89,938,1.704,939,1.403,942,1.328,967,1.486,1045,1.531,1046,0.776,1129,1.995,1185,1.531,1195,2.116,1217,2.461,1229,1.531,1279,3.241,1296,1.531,1297,1.945,1298,1.741,1299,3.15,1305,4.032,1306,4.265,1308,4.143,1310,4.143,1314,4.143,1318,1.804,1320,2.834,1321,2.834,1323,2.834,1324,1.945,1325,3.241,1326,3.241,1328,1.804,1329,2.111,1330,3.429,1331,1.804,1332,1.804,1333,1.531,1334,2.637,1335,2.911,1336,1.629,1337,1.804,1338,1.531,1339,1.804,1340,1.579,1341,1.804,1342,1.579,1343,1.804,1344,1.579,1345,1.804,1346,1.579,1347,1.804,1348,1.804,1349,1.683,1350,1.804,1351,1.683,1352,1.629,1353,1.804,1354,1.804,1355,1.486,1356,1.804,1357,1.531,1358,1.804,1359,1.531,1360,1.804,1361,1.804,1362,1.531,1363,1.804,1364,1.741,1365,1.804,1366,2.637,1367,1.531,1368,1.741,1369,1.531,1370,1.804,1371,1.531,1372,1.741,1373,1.804,1374,1.486,1375,1.741,1376,1.486,1377,1.804,1378,1.531,1379,1.741,1380,1.804,1381,1.531,1382,1.741,1383,1.804,1384,1.531,1385,1.741,1386,1.804,1387,1.531,1388,1.741,1389,1.804,1390,1.531,1391,1.741,1392,1.804,1393,1.486,1394,1.741,1395,1.365,1396,1.531,1397,1.531,1398,1.579,1399,1.804,1400,1.531,1401,1.804,1402,1.531,1403,4.243,1404,3.842,1405,3.2,1406,3.2,1407,3.2,1408,3.31,1409,1.531,1410,1.804,1411,1.531,1412,3.336,1413,2.546,1414,3.522,1415,2.546,1416,1.629,1417,1.486,1418,1.683,1419,1.804,1420,1.531,1421,1.741,1422,1.531,1423,1.579,1424,1.804,1425,2.834,1426,5.368,1427,4.542,1429,3.106,1433,4.542,1435,2.631,1437,6.284,1449,2.026,1453,4.542,1620,7.089,1621,4.546,1622,3.609,1623,5.146,1624,6.083,1625,6.083,1626,3.52,1627,3.52,1628,5.146,1629,3.52,1630,5.146,1631,5.146,1632,7.437,1633,5.146,1634,3.52,1635,3.52,1636,3.52,1637,3.52,1638,3.52,1639,3.52,1640,3.52]],["title/directives/UiDateFormatDirective.html",[369,0.396,413,1.861]],["body/directives/UiDateFormatDirective.html",[0,0.123,3,0.051,4,0.07,5,0.051,8,0.626,22,2.039,25,0.236,28,1.607,31,2.056,35,1.729,43,0.708,44,0.009,46,1.341,47,0.989,49,1.546,52,1.855,56,4.584,75,1.252,82,0.755,92,0.738,100,0.721,101,0.597,102,0.92,127,0.656,149,0.326,156,0.157,158,1.917,166,0.505,201,2.089,203,1.612,206,2.616,221,1.546,228,0.004,229,0.004,233,0.493,243,0.792,248,3.657,249,3.592,253,1.274,258,0.811,306,2.567,315,1.883,317,0.988,329,2.612,331,1.097,336,3.805,337,1.8,338,4.93,339,2.039,340,5.584,341,4.987,342,1.391,343,5.37,344,4.055,345,5.178,346,5.37,347,6.468,348,4.789,349,1.89,350,5.387,351,2.567,352,2.464,353,1.674,354,1.832,355,2.039,356,4.055,357,2.998,358,4.589,359,5.324,360,2.039,361,2.998,362,0.773,363,1.832,364,1.94,365,2.174,366,1.49,367,1.128,368,2.81,369,0.546,370,2.91,371,1.193,372,1.674,373,3.128,374,2.81,375,0.196,376,1.94,377,2.174,378,1.265,379,5.215,380,2.174,381,0.694,382,1.928,383,1.928,384,2.174,385,2.342,386,1.244,387,2.567,388,2.174,389,2.174,390,4.369,391,2.342,392,2.681,393,1.346,394,3.334,395,3.128,396,2.956,397,2.174,398,2.174,399,2.371,400,3.334,401,3.128,402,3.334,403,3.334,404,2.371,405,2.956,406,5.559,407,3.128,408,4.055,409,3.334,410,4.547,411,0.983,412,2.133,413,1.883,414,4.032,415,3.937,416,3.592,417,2.78,418,1.729,419,2.681,420,3.805,421,4.055,422,1.04,423,2.567,424,3.983,425,2.047,426,2.567,427,5.37,428,3.832,429,2.174,430,2.174,431,1.832,432,1.832,433,2.342,434,2.342,435,2.342,436,1.748,437,2.174,438,1.729,439,2.174,440,2.567,441,1.928,442,1.193,443,2.342,444,2.342,445,2.567,446,2.342,447,2.174,448,2.567,449,2.342,450,2.567,451,1.546,452,2.567,453,2.174,454,2.464,455,2.342,456,2.956,457,4.055,458,4.789,459,1.607,460,2.039,461,2.567,462,6.111,463,3.501,464,3.937,465,2.567,466,2.567,467,2.567,468,2.567,469,2.567,470,2.567,471,2.567,472,2.567,473,2.567,474,2.567,475,2.567,476,2.681,477,2.039,478,2.174,479,3.937,480,2.174,481,2.342,482,2.567,483,2.567,484,4.789,485,2.567,486,4.789,487,2.567,488,2.567,489,2.174,490,2.567,491,2.567,492,2.567,493,2.567,494,1.674,495,2.567,496,2.567,497,2.567,498,2.567,499,3.937,500,4.789,501,3.937,502,4.789,503,3.937,504,3.937,505,2.567,506,2.567,507,2.286,508,2.567,509,4.369,510,2.567,511,2.342,512,2.567,513,2.567,514,2.567,515,2.567,516,2.567,517,2.567,518,2.567,519,3.937,520,2.567,521,2.567,522,4.789,523,2.567,524,2.567,1046,0.641,1641,2.909,1642,4.461,1643,2.909,1644,2.909,1645,2.909,1646,2.909,1647,2.909,1648,2.909]],["title/modules/UiDateFormatModule.html",[1086,1.497,1649,3.295]],["body/modules/UiDateFormatModule.html",[0,0.28,3,0.116,4,0.159,5,0.116,44,0.009,149,0.368,156,0.144,228,0.008,229,0.008,337,1.599,338,4.378,375,0.446,381,0.845,413,3.893,995,2.029,1088,2.08,1089,2.461,1093,2.654,1094,1.98,1096,2.723,1097,2.723,1098,2.723,1649,6.719,1650,5.83,1651,5.83,1652,5.83,1653,6.606,1654,6.606]],["title/directives/UiDragAndDropFileDirective.html",[369,0.396,1362,1.918]],["body/directives/UiDragAndDropFileDirective.html",[0,0.118,3,0.049,4,0.067,5,0.149,8,1.465,17,3.926,25,0.226,27,2.084,28,2.386,30,5.939,31,1.768,36,2.065,40,6.475,41,6.647,42,5.252,43,0.658,44,0.009,46,1.165,47,1.241,52,1.767,75,1.4,100,1.595,101,1.322,102,1.091,109,4.173,111,4.091,127,0.629,149,0.204,150,2.485,156,0.094,158,2.115,161,1.664,166,0.75,171,3.422,181,2.245,183,5.855,191,1.956,200,2.694,201,1.759,203,0.826,228,0.004,229,0.004,232,1.095,234,3.811,243,0.759,253,1.7,258,0.778,310,1.405,329,2.903,332,2.862,337,1.973,354,2.72,369,0.534,370,2.065,374,2.72,375,0.188,386,1.66,411,0.952,425,1.993,459,3.762,511,2.245,543,1.706,549,3.68,562,0.9,722,2.37,723,1.999,752,3.288,879,2.708,920,3.422,923,3.811,927,2.386,1020,1.956,1046,0.615,1052,3.049,1057,2.213,1059,3.811,1063,3.298,1065,5.252,1073,2.461,1129,2.983,1195,1.676,1257,4.173,1271,3.811,1278,4.255,1362,1.879,1458,5.482,1521,3.811,1547,3.706,1622,3.028,1655,6.578,1656,6.563,1657,2.461,1658,4.319,1659,3.706,1660,4.319,1661,5.285,1662,5.285,1663,6.437,1664,5.088,1665,5.285,1666,5.285,1667,4.319,1668,7.532,1669,7.101,1670,2.789,1671,5.252,1672,5.252,1673,2.789,1674,4.319,1675,2.789,1676,2.596,1677,2.789,1678,4.319,1679,2.789,1680,4.319,1681,2.789,1682,2.386,1683,2.789,1684,4.319,1685,2.789,1686,2.789,1687,4.173,1688,8.151,1689,2.789,1690,3.811,1691,4.319,1692,4.319,1693,2.72,1694,2.789,1695,2.789,1696,2.789,1697,4.319,1698,3.477,1699,3.477,1700,2.245,1701,2.789,1702,2.789,1703,2.789,1704,2.789,1705,2.084,1706,1.956,1707,4.319,1708,2.789,1709,6.809,1710,2.789,1711,2.245,1712,2.789,1713,2.789,1714,2.789,1715,1.956,1716,4.664,1717,2.789,1718,4.319,1719,2.461,1720,2.789,1721,2.461,1722,2.789,1723,2.789,1724,2.461,1725,4.319,1726,2.789,1727,2.789,1728,7.532,1729,2.789,1730,2.789,1731,2.789,1732,6.437,1733,2.789,1734,2.789,1735,2.789,1736,2.789,1737,2.789,1738,2.789,1739,2.789,1740,2.789,1741,2.789,1742,2.789,1743,2.789,1744,2.789,1745,5.951,1746,2.789,1747,2.789,1748,2.789,1749,2.789,1750,2.789,1751,2.789,1752,2.789,1753,2.789,1754,2.789,1755,2.789,1756,2.789,1757,2.789,1758,2.789,1759,2.789,1760,2.789,1761,4.319,1762,2.789,1763,2.789,1764,2.789,1765,2.789,1766,2.789,1767,2.789,1768,2.789,1769,2.789,1770,4.319,1771,2.789,1772,2.789,1773,2.789,1774,2.789,1775,2.084,1776,4.319,1777,4.319,1778,2.789,1779,2.789,1780,2.789,1781,2.789]],["title/modules/UiDragAndDropModule.html",[1086,1.497,1782,3.295]],["body/modules/UiDragAndDropModule.html",[0,0.277,3,0.114,4,0.157,5,0.114,30,5.494,44,0.009,149,0.366,156,0.143,228,0.008,229,0.008,337,1.583,375,0.442,381,0.837,995,2.01,1088,2.06,1089,2.447,1093,2.638,1094,1.961,1096,2.707,1097,2.707,1098,2.707,1362,4.007,1655,6.195,1656,5.267,1782,6.706,1783,5.773,1784,5.773,1785,5.773,1786,6.542,1787,6.542]],["title/directives/UiFormatDirective.html",[369,0.396,376,1.918]],["body/directives/UiFormatDirective.html",[0,0.258,3,0.107,4,0.146,5,0.107,20,2.287,25,0.495,43,0.512,44,0.009,49,3.238,75,1.396,92,1.888,100,1.509,101,1.251,102,1.033,149,0.351,156,0.133,166,1.293,228,0.007,229,0.007,232,1.888,243,2.027,258,2.076,362,1.62,369,0.668,370,4.004,374,5.273,375,0.411,376,3.238,459,4.744,460,4.271,509,5.993,543,2.595,562,2.703,1046,1.342,1464,3.116,1492,3.121,1499,3.121,1547,5.636,1549,6.741,1705,6.007,1706,5.219,1788,6.741,1789,5.376,1790,6.092,1791,6.092,1792,6.092,1793,6.092,1794,5.993,1795,6.092,1796,6.092,1797,6.092]],["title/directives/UiGridColumnDirective.html",[369,0.396,967,1.861]],["body/directives/UiGridColumnDirective.html",[0,0.114,3,0.047,4,0.065,5,0.047,8,1.258,21,1.04,25,0.219,26,2.395,28,3.501,31,2.143,35,1.631,43,0.699,44,0.009,46,1.762,47,1.476,52,1.637,72,1.318,75,1.514,92,1.779,100,1.282,101,1.062,102,0.877,111,3.728,127,1.167,149,0.317,155,3.363,156,0.092,158,1.554,161,2.114,166,1.015,172,0.99,173,0.964,174,0.964,175,0.964,200,2.778,201,1.282,203,1.578,221,2.236,226,2.081,228,0.004,229,0.004,232,1.067,253,1.202,258,1.443,287,1.367,289,2.351,302,4.45,310,2.127,314,4.57,315,2.467,316,1.951,317,2.532,325,1.725,329,1.587,358,4.45,362,0.717,369,0.603,375,0.182,381,0.538,386,1.956,411,0.927,422,2.401,534,2.603,543,1.67,546,1.725,549,2.474,553,2.977,554,4.669,556,2.015,562,0.871,568,4.736,569,3.354,583,1.621,726,1.209,771,2.324,784,2.081,836,1.621,904,5.698,909,4.565,911,6.24,915,2.38,927,2.324,952,3.144,966,3.713,967,2.467,975,2.015,978,3.429,1002,2.171,1021,2.75,1046,0.594,1052,2.156,1251,4.708,1257,2.95,1324,4.471,1329,1.106,1364,2.081,1393,1.776,1395,2.005,1423,1.887,1464,2.005,1547,3.627,1698,3.387,1700,2.171,1711,2.171,1798,5.468,1799,2.38,1800,5.173,1801,5.173,1802,8.093,1803,5.173,1804,5.173,1805,6.337,1806,5.102,1807,5.173,1808,2.697,1809,2.697,1810,3.144,1811,3.713,1812,2.697,1813,4.207,1814,3.713,1815,2.697,1816,3.387,1817,3.387,1818,4.207,1819,4.207,1820,5.173,1821,2.697,1822,2.788,1823,5.173,1824,2.697,1825,3.713,1826,4.207,1827,2.697,1828,4.207,1829,2.697,1830,2.697,1831,3.713,1832,2.697,1833,2.697,1834,2.697,1835,4.207,1836,5.173,1837,4.207,1838,2.697,1839,4.207,1840,2.697,1841,4.207,1842,2.697,1843,2.697,1844,2.697,1845,2.697,1846,2.697,1847,2.697,1848,2.697,1849,2.697,1850,2.171,1851,2.171,1852,2.697,1853,1.49,1854,3.387,1855,3.387,1856,2.697,1857,2.697,1858,2.38,1859,2.697,1860,2.38,1861,2.697,1862,2.38,1863,2.697,1864,2.697,1865,2.697,1866,2.697,1867,2.697,1868,2.697,1869,2.697,1870,2.697,1871,4.207,1872,1.787,1873,2.697,1874,4.207,1875,5.173,1876,2.697,1877,4.207,1878,2.697,1879,5.173,1880,2.697,1881,2.697,1882,2.697,1883,2.697,1884,1.787,1885,1.787,1886,2.697,1887,2.38,1888,2.697,1889,2.697,1890,4.207,1891,2.697,1892,2.697,1893,2.697,1894,2.697,1895,2.697,1896,2.697,1897,2.697,1898,2.38,1899,2.38,1900,2.697,1901,2.697]],["title/components/UiGridCustomPaginatorComponent.html",[82,1.145,1338,1.918]],["body/components/UiGridCustomPaginatorComponent.html",[0,0.244,3,0.046,4,0.063,5,0.046,21,0.734,25,0.213,30,1.742,35,1.599,43,0.526,44,0.009,46,0.909,47,0.752,52,1.148,58,1.742,72,1.148,75,1.154,79,2.551,82,1.322,100,0.651,101,1.584,102,1.126,127,0.93,149,0.24,156,0.09,166,0.457,172,1.869,173,1.82,174,1.82,175,2.061,203,0.973,228,0.004,229,0.004,239,3.404,242,2.479,243,1.123,253,1.178,287,1.094,289,2.361,316,1.556,317,0.893,320,4.889,327,2.087,331,1.92,349,1.437,368,4.375,369,0.236,371,1.078,375,0.177,376,1.143,378,2.724,381,1.133,411,2.006,412,1.257,413,1.11,418,1.599,425,0.991,431,1.656,442,3.696,456,3.82,507,1.347,534,1.019,537,3.033,540,3.205,545,1.257,546,1.078,547,2.898,569,1.257,668,1.742,677,1.599,714,1.11,723,1.909,726,1.179,728,1.741,729,1.741,730,1.513,733,1.143,758,2.116,769,2.798,781,2.192,794,1.365,796,1.217,806,1.85,808,1.972,810,1.909,811,1.909,812,1.048,876,2.315,907,2.812,920,1.397,927,3.67,933,2.373,937,1.514,938,1.365,939,2.648,942,3.237,967,1.11,1045,1.143,1046,0.579,1069,1.58,1129,1.973,1185,1.143,1194,2.373,1195,1.58,1217,1.972,1229,1.143,1296,1.143,1297,1.452,1298,1.3,1299,2.725,1324,4.447,1325,1.656,1328,1.347,1329,1.691,1330,2.953,1331,1.347,1332,1.347,1333,1.143,1334,2.113,1335,1.143,1336,1.217,1337,1.347,1338,2.507,1339,1.347,1340,1.179,1341,1.347,1342,1.179,1343,1.347,1344,1.179,1345,1.347,1346,1.179,1347,1.347,1348,1.347,1349,1.257,1350,1.347,1351,1.257,1352,2.668,1353,1.347,1354,1.347,1355,1.11,1356,1.347,1357,1.143,1358,1.347,1359,1.143,1360,1.347,1361,1.347,1362,1.143,1363,1.347,1364,1.3,1365,1.347,1366,2.113,1367,1.143,1368,1.3,1369,1.143,1370,1.347,1371,1.143,1372,1.3,1373,1.347,1374,1.11,1375,1.3,1376,1.11,1377,1.347,1378,1.143,1379,1.3,1380,1.347,1381,1.143,1382,1.3,1383,1.347,1384,1.143,1385,1.3,1386,1.347,1387,1.143,1388,1.3,1389,1.347,1390,1.143,1391,1.3,1392,1.347,1393,1.11,1394,1.3,1395,1.019,1396,1.143,1397,1.143,1398,2.283,1399,1.347,1400,1.143,1401,1.347,1402,1.143,1403,4.085,1404,3.537,1405,2.756,1406,2.756,1407,2.756,1408,2.851,1409,1.143,1410,1.347,1411,1.143,1412,2.769,1413,2.04,1414,3.097,1415,2.04,1416,1.217,1417,1.11,1418,1.257,1419,1.347,1420,1.143,1421,1.3,1422,1.143,1423,1.179,1424,1.347,1449,3.317,1455,1.964,1622,2.892,1902,3.998,1903,4.871,1904,2.116,1905,4.491,1906,7.964,1907,4.491,1908,3.64,1909,4.491,1910,4.097,1911,4.097,1912,6.348,1913,2.629,1914,5.192,1915,5.086,1916,2.629,1917,4.124,1918,4.491,1919,2.629,1920,2.629,1921,3.32,1922,2.629,1923,2.629,1924,1.843,1925,3.64,1926,2.32,1927,2.116,1928,2.32,1929,3.64,1930,2.116,1931,2.32,1932,2.32,1933,2.32,1934,2.32,1935,2.32,1936,2.32,1937,2.32,1938,4.124,1939,5.086,1940,4.124,1941,4.124,1942,4.124,1943,4.124,1944,4.124,1945,4.889,1946,4.124,1947,3.803,1948,4.491,1949,6.277,1950,5.192,1951,4.124,1952,4.491,1953,2.32,1954,2.629,1955,4.097,1956,4.124,1957,5.763,1958,3.64,1959,2.629,1960,4.124,1961,2.629,1962,2.32,1963,2.629,1964,2.629,1965,2.629,1966,1.843,1967,4.491,1968,2.32,1969,1.656,1970,2.629,1971,4.15,1972,2.116,1973,3.63,1974,3.205,1975,2.116,1976,1.964,1977,4.124,1978,2.629,1979,2.629,1980,4.124,1981,4.124,1982,3.32,1983,4.124,1984,2.629,1985,1.964,1986,2.629]],["title/modules/UiGridCustomPaginatorModule.html",[1086,1.497,1987,3.091]],["body/modules/UiGridCustomPaginatorModule.html",[0,0.265,3,0.11,4,0.15,5,0.11,44,0.009,149,0.415,156,0.137,228,0.008,229,0.008,287,0.986,289,2.163,375,0.422,381,0.801,942,3.068,995,1.923,1088,1.971,1089,2.383,1093,2.57,1094,1.877,1096,2.637,1097,2.637,1098,2.637,1196,3.603,1338,3.986,1468,2.495,1616,3.503,1619,2.808,1902,3.603,1903,4.39,1987,6.237,1988,5.525,1989,5.525,1990,5.525,1991,6.26,1992,5.016,1993,3.763,1994,6.093,1995,4.679,1996,4.767,1997,6.26]],["title/directives/UiGridDropdownFilterDirective.html",[369,0.396,546,1.808]],["body/directives/UiGridDropdownFilterDirective.html",[0,0.192,3,0.079,4,0.109,5,0.079,8,0.974,20,1.888,25,0.367,31,2.095,35,2.382,43,0.678,44,0.009,46,0.997,47,1.569,52,1.021,72,1.021,75,1.459,92,1.559,100,1.522,101,1.262,102,1.042,121,2.095,127,1.021,149,0.329,156,0.163,161,1.935,166,0.786,203,1.334,226,3.04,228,0.006,229,0.006,232,1.559,233,0.767,253,1.755,258,1.714,287,1.34,289,2.368,310,2.146,315,2.946,317,1.537,331,1.707,342,2.165,362,1.204,364,3.653,369,0.672,375,0.305,378,2.673,381,0.893,386,1.714,411,1.354,422,1.619,436,3.694,532,5.888,533,6.362,534,3.55,535,3.383,536,5.658,537,2.52,538,3.995,539,3.995,540,2.851,541,2.851,542,2.319,543,2.252,544,4.948,545,2.939,546,2.52,547,3.622,548,6.157,549,2.939,550,6.157,551,3.995,552,5.617,553,4.015,554,4.961,555,3.644,556,3.383,557,3.644,558,3.644,559,4.592,560,4.948,561,3.383,562,1.461,563,3.644,564,3.644,1046,0.997,1194,2.605,1850,3.644,1851,3.644,1998,5.423,1999,3.995,2000,4.526,2001,4.526,2002,3.995,2003,6.145,2004,4.526,2005,3.995]],["title/directives/UiGridExpandedRowDirective.html",[369,0.396,1367,1.918]],["body/directives/UiGridExpandedRowDirective.html",[0,0.276,3,0.114,4,0.157,5,0.114,8,1.404,26,3.019,44,0.009,127,1.471,149,0.307,153,3.226,156,0.169,161,2.053,226,3.836,228,0.008,229,0.008,287,1.027,289,2.201,316,3.231,369,0.769,375,0.44,381,0.992,386,1.819,411,1.709,784,3.836,1046,1.437,1329,2.674,1367,3.373,1368,3.836,1369,3.806,1798,4.107,1853,3.603,1885,4.322,2006,5.755]],["title/directives/UiGridFooterDirective.html",[369,0.396,1371,1.918]],["body/directives/UiGridFooterDirective.html",[0,0.181,3,0.075,4,0.103,5,0.075,8,0.922,17,1.983,25,0.594,28,2.366,31,2.112,35,2.294,43,0.707,44,0.009,46,1.611,47,1.511,52,0.966,72,1.94,75,1.494,92,1.501,100,1.466,101,1.215,102,1.003,123,4.998,127,0.966,149,0.32,156,0.129,166,0.744,183,3.201,200,2.615,201,1.061,206,2.914,226,2.927,228,0.006,229,0.006,232,1.501,241,2.739,242,4.888,243,1.166,253,1.69,258,1.65,271,3.922,287,1.354,289,2.323,310,1.574,315,2.498,320,5.214,367,1.66,369,0.657,375,0.289,381,0.757,386,1.891,411,1.304,422,2.116,454,2.366,543,2.188,549,3.67,562,1.383,722,2.654,876,2.362,954,3.269,1020,5.38,1046,0.944,1052,3.032,1057,3.032,1063,3.473,1203,3.003,1237,3.473,1270,2.195,1371,2.574,1372,2.927,1887,5.983,1939,6.772,1945,4.888,1969,2.698,2007,7.591,2008,3.78,2009,7.177,2010,6.779,2011,7.673,2012,6.779,2013,6.779,2014,4.283,2015,4.283,2016,4.283,2017,5.917,2018,5.917,2019,4.283,2020,4.283,2021,5.222,2022,4.283,2023,4.283,2024,4.283,2025,4.283,2026,3.003,2027,5.222,2028,4.283,2029,4.283,2030,4.283,2031,4.283,2032,4.283,2033,3.78,2034,3.201,2035,7.312,2036,4.283,2037,4.283,2038,4.283,2039,4.283,2040,4.283,2041,4.283]],["title/directives/UiGridHeaderButtonDirective.html",[369,0.396,1374,1.861]],["body/directives/UiGridHeaderButtonDirective.html",[0,0.248,3,0.102,4,0.141,5,0.102,8,1.26,25,0.475,26,2.71,31,2.051,43,0.713,44,0.009,46,1.29,47,1.068,75,1.262,127,1.321,149,0.276,153,2.896,156,0.159,161,2.487,226,3.593,228,0.007,229,0.007,253,2.075,287,1.243,289,2.258,310,1.557,369,0.742,375,0.395,381,0.929,386,1.633,411,1.601,554,5.103,752,4.013,768,4.433,769,2.934,784,3.593,1046,1.29,1251,5.79,1329,2.401,1374,3.067,1375,3.593,1376,3.703,1853,3.235,1885,3.88,2042,6.358,2043,4.105,2044,5.79,2045,5.429,2046,5.855,2047,5.855]],["title/directives/UiGridHeaderDirective.html",[369,0.396,1378,1.918]],["body/directives/UiGridHeaderDirective.html",[0,0.196,3,0.081,4,0.111,5,0.081,8,0.995,17,2.886,25,0.375,31,2.155,43,0.697,44,0.009,46,1.554,47,1.437,72,1.406,75,1.411,123,3.927,127,1.043,149,0.356,153,3.899,156,0.136,166,1.083,200,2.229,201,1.146,203,1.192,226,3.084,228,0.006,229,0.006,232,1.581,242,3.747,253,1.781,287,1.307,289,2.336,310,1.23,364,2.712,369,0.678,375,0.421,381,0.903,386,2.198,411,1.374,543,2.277,562,1.493,565,3.456,567,5.02,722,3.164,768,2.369,954,3.444,971,3.242,1046,1.019,1052,3.868,1057,3.194,1063,4.038,1198,4.659,1374,3.187,1376,3.328,1378,2.712,1379,3.084,1395,3.489,1659,4.946,1682,4.171,1715,3.242,2042,6.682,2044,3.242,2045,3.456,2048,4.081,2049,7.053,2050,7.053,2051,6.225,2052,7.053,2053,6.225,2054,4.624,2055,6.234,2056,4.624,2057,5.502,2058,5.502,2059,5.502,2060,6.234,2061,4.624,2062,4.624,2063,4.624,2064,4.624,2065,5.02,2066,5.502,2067,4.624,2068,3.456,2069,4.624,2070,4.624,2071,4.624,2072,4.624,2073,4.624,2074,4.624,2075,7.053,2076,7.053,2077,4.624,2078,4.624,2079,4.624,2080,4.624]],["title/injectables/UiGridIntl.html",[794,1.459,2081,3.55]],["body/injectables/UiGridIntl.html",[0,0.096,3,0.039,4,0.054,5,0.039,8,1.514,11,2.729,20,1.122,21,0.65,25,0.183,43,0.692,44,0.009,46,1.889,47,1.563,52,1.192,72,1.87,75,1.5,79,1.341,92,0.572,97,2.94,100,1.687,101,1.398,102,0.78,123,2.3,149,0.217,156,0.08,166,0.918,171,3.841,172,0.829,173,0.807,174,1.645,175,0.807,203,1.627,226,1.807,228,0.004,229,0.004,232,0.572,271,4.662,272,4.093,287,1.364,289,1.223,303,4.643,310,1.223,315,2.623,316,2.19,319,4.775,320,5.19,329,2.467,357,2.92,358,4.513,362,0.6,364,2.702,375,0.152,386,0.629,393,1.691,395,2.561,417,3.86,424,2.018,425,2.19,456,2.42,507,3.702,532,2.561,534,2.865,536,4.071,537,2.548,541,2.3,543,1.179,547,3.256,549,2.528,553,2.102,554,3.177,562,0.729,569,1.747,578,2.729,580,2.94,752,4.479,766,4.158,768,1.871,769,1.75,771,2.92,788,2.42,794,1.209,876,0.786,879,3.702,904,5.4,910,6.009,911,5.516,930,3.95,931,4.06,941,2.357,942,1.994,954,2.92,978,4.513,995,1.122,1021,2.81,1094,0.677,1102,1.2,1127,2.195,1128,6.255,1191,2.561,1194,1.299,1210,2.94,1249,2.729,1352,2.447,1376,1.542,1395,2.801,1464,1.783,1491,1.357,1676,3.734,1682,3.207,1687,2.561,1806,2.94,1810,2.729,1822,4.513,1854,1.817,1855,1.817,1860,6.208,1862,6.208,1982,2.94,2044,2.561,2051,3.223,2081,2.94,2082,6.473,2083,1.992,2084,3.223,2085,3.223,2086,4.6,2087,4.6,2088,4.06,2089,4.6,2090,4.6,2091,4.6,2092,4.6,2093,4.6,2094,4.6,2095,4.6,2096,4.6,2097,4.6,2098,4.06,2099,4.6,2100,4.6,2101,4.6,2102,4.6,2103,4.06,2104,4.6,2105,4.06,2106,4.6,2107,4.06,2108,4.06,2109,4.6,2110,4.6,2111,3.652,2112,3.652,2113,6.809,2114,2.257,2115,2.94,2116,3.223,2117,3.652,2118,2.257,2119,2.257,2120,2.94,2121,3.223,2122,2.94,2123,2.257,2124,2.257,2125,2.257,2126,2.257,2127,6.065,2128,7.226,2129,7.226,2130,2.257,2131,2.257,2132,4.6,2133,2.257,2134,2.257,2135,3.652,2136,3.652,2137,3.223,2138,2.257,2139,3.223,2140,3.223,2141,3.652,2142,2.257,2143,5.806,2144,2.257,2145,3.223,2146,2.257,2147,3.652,2148,2.257,2149,2.257,2150,3.652,2151,2.257,2152,3.329,2153,3.652,2154,2.257,2155,3.652,2156,2.257,2157,6.213,2158,2.257,2159,2.257,2160,2.257,2161,2.257,2162,3.223,2163,3.652,2164,2.257,2165,2.257,2166,3.652,2167,2.257,2168,2.561,2169,2.257,2170,2.257,2171,3.223,2172,3.652,2173,2.257,2174,3.652,2175,2.257,2176,3.652,2177,2.257,2178,3.652,2179,5.286,2180,2.257,2181,2.257,2182,2.257,2183,3.652,2184,1.817]],["title/directives/UiGridLoadingDirective.html",[369,0.396,1381,1.918]],["body/directives/UiGridLoadingDirective.html",[0,0.278,3,0.115,4,0.158,5,0.115,21,1.386,25,0.533,26,3.604,43,0.551,44,0.009,75,1.14,102,1.32,127,1.48,149,0.309,156,0.143,161,2.451,228,0.008,229,0.008,287,1.226,289,2.283,369,0.699,375,0.443,381,0.996,411,1.715,784,4.106,941,3.989,1046,1.446,1069,3.945,1329,3.404,1381,3.386,1382,3.851,1798,4.903,1853,3.626,1885,5.16,2185,5.792,2186,6.563]],["title/modules/UiGridModule.html",[1086,1.497,2187,3.091]],["body/modules/UiGridModule.html",[0,0.162,3,0.067,4,0.092,5,0.067,44,0.009,149,0.43,156,0.083,228,0.005,229,0.005,287,0.602,289,2.337,316,2.061,375,0.258,381,0.489,534,1.483,546,3.487,780,1.892,925,2.682,936,3.621,937,1.404,938,1.266,942,2.061,967,3.59,968,6.752,969,3.375,995,1.175,1021,2.904,1088,1.204,1089,1.721,1093,1.855,1094,1.147,1096,1.904,1097,1.904,1098,1.904,1115,2.409,1196,2.201,1223,4.599,1318,1.959,1336,3.936,1367,3.698,1369,1.664,1371,3.698,1374,3.59,1376,1.615,1378,3.698,1381,3.698,1384,3.698,1387,3.698,1390,3.698,1393,3.59,1395,1.483,1422,1.664,1423,1.715,1468,1.524,1616,2.529,1619,2.451,1854,4.399,1855,4.399,1903,2.682,1927,3.079,1987,5.365,1992,3.621,1993,2.299,1994,4.399,1995,2.858,1996,3.442,2068,2.858,2082,2.858,2187,6.526,2188,3.375,2189,3.375,2190,3.375,2191,3.375,2192,5.365,2193,5.365,2194,4.599,2195,5.365,2196,5.365,2197,3.824,2198,5.464,2199,4.084,2200,2.299,2201,4.822,2202,3.375,2203,3.442,2204,2.409,2205,5.464,2206,3.824,2207,5.464,2208,4.399,2209,2.858,2210,3.375,2211,2.299,2212,3.824,2213,3.824,2214,3.824,2215,3.824,2216,3.824,2217,6.375,2218,3.824,2219,2.858,2220,3.824,2221,2.682,2222,3.824,2223,3.824,2224,3.824,2225,5.464,2226,3.824,2227,3.824]],["title/directives/UiGridNoContentDirective.html",[369,0.396,1384,1.918]],["body/directives/UiGridNoContentDirective.html",[0,0.278,3,0.115,4,0.158,5,0.115,21,1.386,25,0.533,26,3.604,43,0.551,44,0.009,75,1.14,102,1.32,127,1.48,149,0.309,156,0.143,161,2.451,228,0.008,229,0.008,287,1.226,289,2.283,349,2.712,369,0.699,375,0.443,381,0.996,411,1.715,784,4.106,1046,1.446,1069,3.945,1329,3.404,1384,3.386,1385,3.851,1798,4.903,1853,3.626,1885,5.16,2228,5.792,2229,6.563]],["title/directives/UiGridRowActionDirective.html",[369,0.396,1387,1.918]],["body/directives/UiGridRowActionDirective.html",[0,0.278,3,0.115,4,0.158,5,0.115,8,1.413,26,3.038,44,0.009,127,1.48,149,0.309,156,0.143,161,2.067,226,3.851,228,0.008,229,0.008,287,1.033,289,2.207,316,3.306,369,0.771,375,0.443,381,0.996,386,1.83,411,1.715,768,4.398,784,3.851,1046,1.446,1329,2.692,1387,3.386,1388,3.851,1798,4.134,1853,3.626,1885,4.35,2230,5.792]],["title/directives/UiGridRowConfigDirective.html",[369,0.396,1390,1.918]],["body/directives/UiGridRowConfigDirective.html",[0,0.341,3,0.107,4,0.147,5,0.107,8,1.321,25,0.498,31,1.942,43,0.516,44,0.009,46,1.352,47,1.119,75,1.066,127,1.384,149,0.353,156,0.163,228,0.007,229,0.007,253,2.136,287,1.177,289,2.232,313,3.866,316,3.301,317,2.539,325,2.517,369,0.754,375,0.414,381,0.957,393,3.733,411,1.648,575,4.304,583,4.847,844,4.956,971,4.304,1046,1.352,1390,3.253,1391,3.699,1592,5.243,1798,4.71,2231,5.416,2232,6.599,2233,8.064,2234,6.599,2235,6.137,2236,6.599,2237,7.477,2238,6.599]],["title/components/UiGridSearchComponent.html",[82,1.145,1340,1.977]],["body/components/UiGridSearchComponent.html",[0,0.128,3,0.053,4,0.073,5,0.053,8,0.653,17,2.132,20,1.415,25,0.246,27,2.266,31,2.153,35,1.785,43,0.648,44,0.009,46,0.668,47,1.479,52,0.684,72,1.256,75,1.39,79,1.691,82,1.736,92,1.168,100,0.751,101,1.643,102,0.514,127,0.684,149,0.293,156,0.1,166,0.967,201,0.751,203,1.505,228,0.005,229,0.005,232,1.168,242,2.768,253,1.315,258,1.284,287,1.277,289,2.432,310,1.225,316,1.737,327,2.283,349,1.056,362,0.806,366,1.554,367,1.175,369,0.272,375,0.205,376,1.319,381,1.151,386,1.553,411,2.009,412,1.45,413,1.28,417,3.606,418,1.785,422,1.084,442,2.283,494,1.745,507,3.185,534,1.175,543,1.797,545,1.45,546,1.243,547,1.404,562,0.979,677,1.785,681,1.91,712,2.9,713,1.243,714,1.28,722,2.065,726,1.36,728,1.944,729,1.944,733,1.319,769,2.716,796,1.404,806,2.065,808,2.202,810,2.132,811,2.132,812,1.209,836,1.823,876,1.604,879,3.606,907,2.544,920,2.448,937,1.691,938,1.524,939,1.209,942,1.144,967,1.28,1045,1.319,1046,0.668,1057,2.359,1063,2.852,1126,1.823,1129,1.785,1185,1.319,1198,3.441,1217,2.202,1229,1.319,1237,2.852,1240,2.441,1251,3.229,1270,1.554,1296,1.319,1297,1.675,1298,1.5,1299,2.886,1324,1.675,1328,1.554,1329,1.888,1330,3.185,1331,1.554,1332,1.554,1333,1.319,1334,2.359,1335,1.319,1336,1.404,1337,1.554,1338,1.319,1339,1.554,1340,2.788,1341,1.554,1342,1.36,1343,1.554,1344,1.36,1345,1.554,1346,1.36,1347,1.554,1348,1.554,1349,1.45,1350,1.554,1351,1.45,1352,1.404,1353,1.554,1354,1.554,1355,1.28,1356,1.554,1357,1.319,1358,1.554,1359,1.319,1360,1.554,1361,1.554,1362,1.319,1363,1.554,1364,1.5,1365,1.554,1366,2.359,1367,1.319,1368,1.5,1369,1.319,1370,1.554,1371,1.319,1372,1.5,1373,1.554,1374,1.28,1375,1.5,1376,1.28,1377,1.554,1378,1.319,1379,1.5,1380,1.554,1381,1.319,1382,1.5,1383,1.554,1384,1.319,1385,1.5,1386,1.554,1387,1.319,1388,1.5,1389,1.554,1390,1.319,1391,1.5,1392,1.554,1393,1.28,1394,1.5,1395,3.434,1396,1.319,1397,1.319,1398,2.497,1399,1.554,1400,1.319,1401,1.554,1402,1.319,1403,4.167,1404,3.691,1405,2.973,1406,2.973,1407,2.973,1408,3.075,1409,1.319,1410,1.554,1411,1.319,1412,2.915,1413,2.278,1414,3.307,1415,2.278,1416,1.404,1417,1.28,1418,1.45,1419,1.554,1420,1.319,1421,1.5,1422,1.319,1423,1.36,1424,1.554,1464,1.785,1492,1.554,1499,1.554,1687,3.229,1721,2.676,1902,4.667,1955,2.441,1971,3.052,1973,1.91,2057,5.9,2058,4.064,2059,4.064,2088,4.913,2103,4.913,2152,4.211,2219,6.061,2239,2.676,2240,5.567,2241,4.605,2242,4.913,2243,5.567,2244,5.567,2245,3.032,2246,3.032,2247,3.032,2248,4.605,2249,3.032,2250,3.032,2251,3.032,2252,4.605,2253,3.032,2254,3.032,2255,2.676,2256,3.032,2257,3.032,2258,2.266,2259,4.064,2260,3.032,2261,3.032,2262,3.032,2263,3.032,2264,3.032,2265,3.032,2266,3.032,2267,3.032,2268,3.032,2269,3.032,2270,1.745,2271,3.032,2272,3.032,2273,3.032]],["title/directives/UiGridSearchFilterDirective.html",[369,0.396,1393,1.861]],["body/directives/UiGridSearchFilterDirective.html",[0,0.164,3,0.068,4,0.093,5,0.068,8,0.835,20,1.696,25,0.522,31,2.136,35,2.14,43,0.701,44,0.009,46,1.216,47,1.474,52,1.245,72,0.875,75,1.466,92,1.4,100,1.368,101,1.133,102,0.936,111,3.721,125,3.658,127,0.875,149,0.33,156,0.12,158,1.032,166,0.674,171,2.934,174,1.387,200,2.503,201,1.368,203,1.415,206,2.79,226,2.73,228,0.005,229,0.005,232,1.4,253,1.577,258,1.539,287,1.342,289,2.352,300,5.174,302,3.658,310,2.219,311,4.125,312,4.125,315,2.713,317,1.874,331,1.463,352,3.05,353,4.029,362,1.032,364,3.517,369,0.629,375,0.262,381,0.822,386,1.539,393,1.796,411,1.216,420,2.72,422,1.387,533,6.371,534,3.234,535,2.899,536,3.87,542,1.988,543,2.074,544,4.444,552,5.174,553,3.698,554,4.754,555,3.123,556,2.899,557,3.123,558,3.123,559,4.125,560,4.444,561,5.745,562,1.252,563,3.123,564,3.123,569,3.783,723,2.555,752,3.867,916,5.317,925,2.72,926,5.174,950,2.899,952,4.125,1046,0.855,1194,3.177,1393,2.331,1394,2.73,1395,3.429,1592,3.87,1664,5.528,1716,3.423,1822,2.571,1850,3.123,1851,3.123,1945,2.332,1998,4.871,1999,3.423,2002,3.423,2005,4.871,2053,4.871,2065,3.123,2098,5.671,2152,3.477,2210,3.423,2274,6.426,2275,3.879,2276,5.636,2277,4.871,2278,3.87,2279,3.879,2280,4.871,2281,3.879,2282,3.879,2283,3.879,2284,5.52,2285,6.189,2286,3.879,2287,3.879,2288,3.879,2289,5.52,2290,3.879,2291,3.879,2292,3.879,2293,3.879,2294,3.879,2295,3.879,2296,3.879,2297,3.879,2298,3.879,2299,3.879]],["title/modules/UiGridSearchModule.html",[1086,1.497,2192,3.091]],["body/modules/UiGridSearchModule.html",[0,0.259,3,0.107,4,0.147,5,0.107,44,0.009,149,0.424,156,0.133,228,0.007,229,0.007,287,0.962,289,2.14,375,0.412,381,0.782,681,3.848,907,3.376,995,1.877,1088,1.924,1089,2.348,1093,2.532,1094,1.832,1096,2.598,1097,2.598,1098,2.598,1196,3.516,1340,4.097,1468,2.435,1616,3.452,1619,2.74,1902,3.516,1924,4.284,1992,4.942,1993,3.672,1996,4.697,2192,6.206,2203,4.697,2204,3.848,2219,4.566,2300,5.392,2301,5.392,2302,5.392,2303,6.11,2304,6.581,2305,7.457,2306,6.581,2307,5.392,2308,6.11]],["title/components/UiGridToggleColumnsComponent.html",[82,1.145,1342,1.977]],["body/components/UiGridToggleColumnsComponent.html",[0,0.19,3,0.038,4,0.052,5,0.038,20,1.087,21,0.63,25,0.176,26,2.392,31,1.802,32,1.916,35,1.372,43,0.676,44,0.009,46,1.254,47,1.173,52,1.648,72,0.49,75,1.455,79,2.089,82,1.164,92,1.548,100,1.28,101,1.58,102,1.138,124,4.56,127,0.49,149,0.303,155,1.25,156,0.047,158,0.577,161,0.684,166,0.898,172,1.645,173,1.602,174,1.602,175,1.602,176,3.954,177,3.954,200,2.552,201,1.878,203,1.365,206,2.844,228,0.004,229,0.004,232,0.898,240,1.523,243,0.964,248,1.305,253,1.011,258,1.702,287,1.325,289,2.426,290,3.607,297,1.523,306,1.25,310,1.191,313,1.368,316,1.335,325,0.89,327,1.837,349,1.233,362,0.577,364,1.54,366,1.113,367,0.842,368,3.254,369,0.195,370,2.471,375,0.147,376,0.945,378,1.54,379,1.523,381,1.11,392,1.305,411,1.956,412,1.038,413,0.917,418,1.372,422,1.266,425,2.302,431,1.368,438,1.372,442,2.503,476,1.305,477,3.141,481,3.607,494,2.037,534,0.842,537,1.837,543,1.446,545,1.038,546,0.89,547,1.005,562,1.668,590,2.645,668,1.439,677,1.372,714,0.917,722,2.317,723,1.638,726,0.974,728,1.494,729,1.494,733,0.945,769,2.509,796,1.005,806,1.587,808,1.693,810,1.638,811,1.638,812,0.865,876,1.561,927,1.2,933,3.275,937,1.3,938,1.172,939,0.865,942,0.819,962,2.85,963,1.748,964,1.523,965,1.748,967,0.917,970,3.99,971,1.523,978,2.346,987,1.916,995,1.587,999,1.916,1005,1.916,1020,1.523,1021,4.807,1033,1.916,1045,0.945,1046,0.478,1057,1.813,1063,3.297,1069,2.693,1127,1.305,1129,1.372,1185,0.945,1195,1.305,1217,1.693,1229,0.945,1279,1.368,1283,3.123,1296,0.945,1297,1.2,1298,1.074,1299,2.503,1324,3.144,1326,2.229,1327,1.748,1328,1.113,1329,1.451,1330,2.647,1331,1.113,1332,1.113,1333,0.945,1334,1.813,1335,0.945,1336,1.005,1337,1.113,1338,0.945,1339,1.113,1340,0.974,1341,1.113,1342,2.317,1343,1.113,1344,0.974,1345,1.113,1346,0.974,1347,1.113,1348,1.113,1349,1.038,1350,1.113,1351,1.038,1352,1.638,1353,1.113,1354,1.113,1355,0.917,1356,1.113,1357,0.945,1358,1.113,1359,0.945,1360,1.113,1361,1.113,1362,0.945,1363,1.113,1364,1.074,1365,1.113,1366,1.813,1367,0.945,1368,1.074,1369,0.945,1370,1.113,1371,0.945,1372,1.074,1373,1.113,1374,0.917,1375,1.074,1376,0.917,1377,1.113,1378,0.945,1379,1.074,1380,1.113,1381,0.945,1382,1.074,1383,1.113,1384,0.945,1385,1.074,1386,1.113,1387,0.945,1388,1.074,1389,1.113,1390,0.945,1391,1.074,1392,1.113,1393,0.917,1394,1.074,1395,0.842,1396,0.945,1397,0.945,1398,0.974,1399,1.113,1400,0.945,1401,1.113,1402,0.945,1403,3.962,1404,3.319,1405,2.471,1406,2.471,1407,2.471,1408,2.556,1409,0.945,1410,1.113,1411,0.945,1412,2.565,1413,1.751,1414,2.815,1415,1.751,1416,1.005,1417,0.917,1418,1.038,1419,1.113,1420,0.945,1421,1.074,1422,0.945,1423,0.974,1424,1.113,1448,1.916,1449,1.25,1463,2.645,1464,1.372,1492,1.113,1497,1.748,1499,1.113,1622,2.482,1659,3.141,1676,2.693,1705,2.645,1715,3.623,1719,1.916,1902,4.845,1911,3.607,1921,2.85,1947,3.861,1949,3.348,1950,3.861,1952,1.916,1953,3.954,1958,1.916,1967,3.123,1971,2.346,1973,2.229,1974,2.229,1975,1.748,1976,1.623,1993,1.305,1995,1.623,2034,1.623,2105,5.022,2107,5.022,2108,3.954,2221,5.903,2270,1.25,2278,1.523,2309,1.748,2310,4.913,2311,4.48,2312,3.539,2313,4.48,2314,4.48,2315,3.539,2316,4.48,2317,5.167,2318,5.69,2319,4.48,2320,4.48,2321,4.48,2322,4.48,2323,2.171,2324,2.171,2325,2.171,2326,3.539,2327,2.171,2328,2.171,2329,2.171,2330,2.171,2331,2.171,2332,2.171,2333,2.171,2334,2.171,2335,2.171,2336,3.539,2337,2.171,2338,2.171,2339,2.171,2340,3.539,2341,2.171,2342,2.171,2343,5.167,2344,2.171,2345,4.48,2346,3.539,2347,2.171,2348,4.48,2349,3.539,2350,2.171,2351,2.171,2352,2.171,2353,2.171,2354,2.171,2355,2.171,2356,1.916,2357,2.171,2358,2.171,2359,2.171,2360,4.48,2361,2.171,2362,3.539,2363,2.171,2364,2.171,2365,2.171,2366,2.171,2367,3.539,2368,4.48,2369,2.171,2370,2.171,2371,2.171,2372,2.171,2373,2.171,2374,2.171,2375,2.171,2376,2.171,2377,2.171,2378,2.171,2379,2.171,2380,2.171,2381,2.171,2382,2.171,2383,2.171,2384,3.539,2385,3.539,2386,3.539,2387,3.539,2388,2.171,2389,2.171,2390,2.171,2391,2.171,2392,2.171,2393,2.171,2394,2.171,2395,2.171,2396,2.171,2397,2.171,2398,2.171,2399,2.171,2400,5.167,2401,3.539,2402,3.539,2403,3.539,2404,2.171,2405,2.171,2406,1.916,2407,1.523,2408,2.171,2409,2.171,2410,4.48,2411,3.123,2412,3.123,2413,2.171,2414,1.916,2415,3.539,2416,1.916,2417,2.171,2418,2.171,2419,1.916,2420,2.171,2421,1.916,2422,2.171,2423,2.171,2424,2.171]],["title/modules/UiGridToggleColumnsModule.html",[1086,1.497,2193,3.091]],["body/modules/UiGridToggleColumnsModule.html",[0,0.254,3,0.105,4,0.144,5,0.105,44,0.009,149,0.423,156,0.131,228,0.007,229,0.007,287,0.946,289,2.125,375,0.406,381,0.769,995,1.847,1021,4.247,1088,1.893,1089,2.325,1093,2.507,1094,1.802,1096,2.572,1097,2.572,1098,2.572,1196,3.459,1223,5.234,1342,4.089,1468,2.396,1616,3.417,1619,3.311,1902,3.459,1992,4.893,1993,3.613,1994,5.944,1995,4.492,1996,4.65,2193,6.294,2203,4.65,2204,3.786,2209,4.492,2221,4.215,2425,5.304,2426,5.304,2427,6.011,2428,5.304,2429,6.011,2430,7.382,2431,6.011,2432,6.011]],["title/directives/UiLoaderButtonDirective.html",[369,0.396,1396,1.918]],["body/directives/UiLoaderButtonDirective.html",[0,0.222,3,0.092,4,0.126,5,0.092,20,2.079,25,0.425,28,3.739,43,0.728,44,0.009,49,2.784,52,1.788,75,1.303,92,1.717,100,1.677,101,1.39,102,1.148,121,3.133,149,0.247,156,0.114,158,1.994,166,0.91,201,1.858,203,1.295,228,0.007,229,0.007,232,1.717,243,1.843,258,2.289,325,2.148,369,0.608,375,0.353,459,4.79,543,2.421,562,2.559,713,2.148,768,4.384,876,1.825,940,4.765,1002,5.45,1046,1.154,1396,2.944,1547,5.259,1549,5.45,1555,5.925,1556,6.618,1557,5.254,1569,5.973,1592,3.672,1594,4.622,1682,2.893,1698,6.383,1711,5.45,1788,6.383,1794,4.216,1898,4.622,1899,4.622,2433,4.622,2434,5.237,2435,7.5,2436,5.237,2437,6.768,2438,5.237,2439,5.237,2440,5.237,2441,5.237,2442,5.237,2443,5.237,2444,5.237,2445,5.237,2446,5.237,2447,5.237,2448,5.237,2449,5.237,2450,5.237,2451,5.45,2452,5.237,2453,6.768,2454,6.768,2455,5.237,2456,5.237,2457,5.237,2458,5.237,2459,5.237,2460,5.237,2461,5.237,2462,5.237,2463,5.237,2464,5.237]],["title/directives/UiMatFormFieldRequiredDirective.html",[369,0.396,1397,1.918]],["body/directives/UiMatFormFieldRequiredDirective.html",[0,0.17,3,0.07,4,0.096,5,0.07,20,1.738,21,1.007,25,0.326,35,2.193,43,0.55,44,0.009,49,2.135,51,2.135,52,1.276,75,1.302,92,1.661,100,1.402,101,1.162,102,1.355,127,0.906,149,0.404,156,0.088,158,1.505,161,1.265,166,1.235,172,2.078,173,2.023,174,2.023,175,2.023,200,1.436,201,2.201,228,0.006,229,0.006,232,1.435,239,3.356,243,1.541,258,1.827,337,1.882,362,1.068,366,2.058,367,1.557,369,0.508,370,3.4,371,1.647,373,4.986,375,0.271,381,0.514,411,1.443,417,2.058,422,1.436,442,2.686,454,2.219,494,3.256,537,2.686,540,4.721,543,2.114,562,2.295,730,3.256,891,2.662,907,4.141,920,2.135,929,3.002,1038,3.545,1046,0.885,1069,2.414,1115,2.53,1191,4.986,1196,2.312,1215,3.234,1397,2.461,1398,3.189,1455,3.002,1464,2.193,1467,3.002,1468,1.601,1492,2.058,1493,3.002,1499,2.058,1557,4.712,1659,4.593,1715,4.986,1853,2.219,1924,2.817,1930,3.234,2026,3.967,2200,2.414,2270,2.312,2414,6.275,2465,5.731,2466,5.452,2467,3.234,2468,6.55,2469,4.017,2470,6.55,2471,6.55,2472,7.11,2473,6.55,2474,6.55,2475,6.55,2476,6.275,2477,6.55,2478,7.11,2479,6.55,2480,7.11,2481,6.55,2482,6.55,2483,7.11,2484,6.55,2485,7.11,2486,5.78,2487,5.811,2488,4.017,2489,5.658,2490,4.017,2491,4.017,2492,4.017,2493,4.017,2494,6.615,2495,4.017,2496,5.658,2497,4.017,2498,4.017,2499,4.017,2500,4.017,2501,4.017,2502,4.017,2503,3.234,2504,4.017,2505,4.017,2506,5.658,2507,4.017,2508,4.017,2509,4.017,2510,4.017,2511,4.017,2512,4.017,2513,4.017,2514,4.017,2515,5.658,2516,4.017,2517,5.658,2518,4.017,2519,4.017,2520,4.017,2521,5.658,2522,4.017,2523,6.55,2524,5.658,2525,5.658,2526,5.658,2527,4.017,2528,5.658,2529,4.017,2530,4.017,2531,3.545,2532,3.545,2533,4.017,2534,4.017,2535,4.017,2536,4.017,2537,4.017,2538,4.017,2539,4.017,2540,4.017,2541,4.017,2542,4.017,2543,4.017,2544,4.017,2545,4.017,2546,4.017,2547,5.658,2548,4.017,2549,4.017,2550,4.017,2551,4.017]],["title/injectables/UiMatFormFieldRequiredIntl.html",[794,1.459,2487,3.295]],["body/injectables/UiMatFormFieldRequiredIntl.html",[0,0.258,3,0.107,4,0.146,5,0.107,11,5.563,20,2.287,21,1.325,23,4.112,25,0.495,43,0.512,44,0.009,46,1.64,47,1.357,75,1.396,92,1.545,149,0.351,156,0.133,166,1.293,172,2.237,173,2.178,174,2.178,175,2.178,203,1.165,228,0.007,229,0.007,232,1.545,258,1.699,337,2.026,362,1.62,375,0.411,543,2.403,562,2.703,794,2.464,907,4.112,930,5.563,1102,3.238,1464,3.116,1491,3.661,1682,4.744,2120,5.993,2121,6.569,2122,5.993,2184,4.905,2465,5.918,2466,5.87,2487,5.563,2552,5.376,2553,8.038,2554,6.092,2555,6.092,2556,6.092]],["title/modules/UiMatFormFieldRequiredModule.html",[1086,1.497,2557,3.295]],["body/modules/UiMatFormFieldRequiredModule.html",[0,0.278,3,0.115,4,0.158,5,0.115,44,0.009,149,0.367,156,0.143,228,0.008,229,0.008,337,1.591,375,0.444,381,0.841,995,2.02,1088,2.07,1089,2.454,1093,2.646,1094,1.971,1096,2.715,1097,2.715,1098,2.715,1397,4.009,2465,5.505,2466,4.609,2557,6.712,2558,5.801,2559,5.801,2560,5.801,2561,6.574,2562,6.574]],["title/injectables/UiMatPaginatorIntl.html",[794,1.459,1914,3.295]],["body/injectables/UiMatPaginatorIntl.html",[0,0.292,3,0.095,4,0.13,5,0.095,20,2.122,25,0.439,43,0.454,44,0.009,52,1.717,72,1.944,75,0.939,82,1.794,92,1.371,100,1.339,101,1.11,102,1.36,127,1.219,149,0.359,156,0.151,166,0.939,172,2.795,173,2.722,174,2.722,175,2.722,203,1.321,228,0.007,229,0.007,239,3.539,243,1.472,253,1.973,287,1.087,289,2.292,320,4.151,331,2.871,368,5.052,371,2.216,375,0.365,381,0.974,411,1.191,425,2.038,442,2.216,456,4.577,540,3.404,569,2.584,714,2.282,728,2.282,729,2.282,730,3.11,794,2.286,796,2.501,806,2.424,808,2.584,810,2.501,811,2.501,907,2.986,920,2.872,942,3.251,1102,2.872,1194,3.11,1195,3.248,1338,2.351,1902,3.975,1903,4.843,1904,4.351,1905,6.095,1906,6.095,1907,4.769,1908,4.769,1909,4.769,1910,4.351,1911,4.351,1912,7.482,1914,6.195,1915,6.095,1918,6.095,1921,4.351,1924,3.789,1925,6.718,1926,4.769,1927,4.351,1928,6.095,1929,6.718,1930,4.351,1931,4.769,1932,4.769,1933,4.769,1934,4.769,1935,4.769,1936,4.769,1937,4.769,2563,6.906,2564,5.404]],["title/classes/UiMatSnackBarConfig.html",[0,0.187,845,2.777]],["body/classes/UiMatSnackBarConfig.html",[0,0.246,2,2.679,3,0.131,4,0.078,5,0.057,21,0.863,25,0.264,36,1.553,43,0.661,44,0.009,46,1.068,47,0.592,51,1.726,52,1.629,72,1.309,75,0.564,79,2.749,82,1.507,102,1.091,149,0.303,153,2.87,156,0.172,158,1.921,166,1.255,171,4.257,200,1.734,201,1.949,203,1.619,206,2.745,221,3.421,224,1.726,228,0.005,229,0.005,233,0.822,239,2.484,243,1.32,257,1.869,287,0.763,304,1.794,317,1.97,329,1.829,331,1.225,357,3.991,371,1.332,372,1.869,375,0.219,378,3.142,381,0.823,386,1.618,393,2.245,418,1.259,425,1.225,451,1.726,463,1.869,476,1.952,537,1.332,569,3.455,713,1.989,714,1.371,728,1.371,729,1.371,757,2.152,759,3.655,760,2.577,761,1.869,762,5.615,763,3.214,764,5.612,765,5.065,766,4.994,767,4.961,768,2.484,769,1.605,770,2.277,771,1.794,772,3.214,773,2.277,774,1.952,775,2.277,776,2.277,777,2.152,778,2.152,779,2.277,780,2.399,781,1.726,782,2.152,783,4.813,784,3.703,785,5.065,786,3.4,787,2.277,788,2.152,789,2.277,790,2.277,791,3.655,792,4.513,793,2.152,794,1.605,795,3.4,796,1.503,797,3.4,798,3.4,799,4.513,800,2.277,801,2.152,802,2.152,803,3.339,804,2.277,805,5.065,806,1.457,807,2.277,808,1.553,809,2.277,810,1.503,811,1.503,812,1.294,813,2.277,814,3.4,815,2.277,816,2.277,817,2.277,818,3.4,819,2.277,820,2.152,821,1.952,822,2.152,823,2.277,824,2.277,825,2.277,826,2.277,827,2.277,828,2.277,829,2.277,830,2.277,831,1.869,832,4.337,833,4.157,834,4.55,835,4.564,836,2.915,837,2.045,838,2.152,839,2.152,840,2.045,841,2.152,842,2.152,843,4.564,844,4.961,845,3.655,846,4.069,847,2.045,848,2.152,849,2.152,850,3.054,851,3.054,852,1.869,853,2.045,854,2.152,855,2.277,856,2.277,857,1.726,858,2.277,859,2.277,860,2.277,861,3.4,862,2.277,863,2.277,864,2.277,865,2.277,866,2.277,867,2.277,868,2.277,869,2.277,870,2.277,871,2.277,872,2.045,873,3.4,874,2.277,875,3.4,876,1.689,877,3.4,878,2.277,879,1.664,880,4.069,881,2.277,882,2.277,883,2.277,884,3.4,885,2.277,886,2.277,887,2.277,888,2.277,889,2.277,890,4.069,891,2.152,892,2.277,893,2.277,894,2.277,895,2.277,896,3.4,897,2.277,898,2.277,899,2.277,900,2.277,901,2.277,2565,3.247]],["title/directives/UiNgLetDirective.html",[369,0.396,1400,1.918]],["body/directives/UiNgLetDirective.html",[0,0.293,3,0.095,4,0.199,5,0.095,8,1.168,25,0.44,31,1.798,35,2.684,43,0.456,44,0.009,47,1.262,75,1.203,92,1.376,100,1.344,101,1.114,102,0.92,127,1.224,149,0.256,156,0.151,166,0.943,172,1.992,173,1.94,174,1.94,175,1.94,201,1.889,228,0.007,229,0.007,243,1.477,253,1.978,258,1.513,325,3.404,337,1.846,349,2.412,369,0.721,375,0.366,386,1.931,411,1.68,422,1.94,425,2.612,553,3.985,726,3.106,727,4.855,730,3.122,753,6.111,784,3.425,1046,1.196,1215,4.368,1233,4.803,1236,5.575,1400,3.012,1557,4.589,1672,6.73,2034,5.175,2211,5.101,2532,6.111,2566,6.14,2567,4.788,2568,5.575,2569,6.924,2570,6.111,2571,6.111,2572,6.924,2573,7.782,2574,6.924,2575,5.575,2576,6.924,2577,6.924,2578,6.924,2579,7.626,2580,6.73,2581,5.426,2582,6.924,2583,5.426,2584,5.426,2585,5.426,2586,5.426,2587,5.426,2588,5.426,2589,5.426,2590,5.426,2591,5.426,2592,5.426]],["title/modules/UiNgLetModule.html",[1086,1.497,2194,2.65]],["body/modules/UiNgLetModule.html",[0,0.278,3,0.115,4,0.158,5,0.115,44,0.009,149,0.367,156,0.143,228,0.008,229,0.008,337,1.591,375,0.444,381,0.841,995,2.02,1088,2.07,1089,2.454,1093,2.646,1094,1.971,1096,2.715,1097,2.715,1098,2.715,1400,4.009,2194,5.399,2211,4.992,2566,5.293,2593,5.801,2594,5.801,2595,5.801,2596,6.574,2597,6.574]],["title/pipes/UiNl2BrPipe.html",[438,1.709,2598,2.922]],["body/pipes/UiNl2BrPipe.html",[0,0.276,3,0.114,4,0.157,5,0.114,20,2.007,43,0.549,44,0.009,47,1.51,52,1.473,75,1.135,92,1.657,100,1.618,101,1.701,102,1.107,127,1.473,149,0.308,156,0.143,203,1.584,228,0.008,229,0.008,232,1.657,375,0.441,425,3.233,438,3.009,1194,3.759,1985,4.881,2598,5.145,2599,4.881,2600,5.764,2601,6.851,2602,7.763,2603,6.532,2604,7.763,2605,6.532,2606,6.532,2607,6.532]],["title/injectables/UiPasswordComplexityIntl.html",[794,1.459,2608,3.295]],["body/injectables/UiPasswordComplexityIntl.html",[0,0.245,3,0.101,4,0.139,5,0.101,21,1.285,25,0.471,43,0.607,44,0.009,46,1.865,47,1.543,72,1.308,75,1.471,149,0.371,156,0.126,166,1.254,172,2.128,173,2.073,174,2.073,175,2.073,203,1.504,228,0.007,229,0.007,287,1.359,362,1.541,375,0.391,451,3.081,677,3.518,678,5.436,686,6.149,697,5.77,703,4.332,794,2.39,852,3.336,964,4.064,1102,3.081,1464,3.048,1491,3.484,1682,4.343,1817,5.812,2608,5.395,2609,5.116,2610,7.862,2611,7.862,2612,7.862,2613,7.862,2614,7.262,2615,5.797,2616,5.797,2617,5.797,2618,5.797,2619,5.797,2620,5.797,2621,5.797,2622,5.797]],["title/components/UiPasswordIndicatorComponent.html",[82,1.145,1344,1.977]],["body/components/UiPasswordIndicatorComponent.html",[0,0.109,3,0.045,4,0.062,5,0.045,20,1.242,21,0.72,25,0.328,31,1.476,43,0.655,44,0.009,46,0.891,47,0.737,52,0.912,56,1.541,58,1.699,72,0.578,75,1.373,79,2.087,82,1.301,92,1.026,100,0.635,101,1.574,102,0.435,110,3.022,121,1.872,127,0.578,149,0.336,156,0.056,158,1.512,166,0.445,175,1.446,200,1.446,201,1.629,203,0.773,228,0.004,229,0.004,232,1.026,239,2.566,241,1.872,243,1.101,253,1.155,258,1.128,287,1.26,289,2.072,310,0.682,316,1.889,327,2.054,349,1.409,352,4.234,362,0.682,364,1.115,366,1.314,367,0.994,369,0.23,375,0.173,376,1.115,378,1.759,381,1.146,399,1.363,401,1.798,411,1.985,412,1.226,413,1.083,418,1.568,438,2.548,442,3.196,494,2.882,507,1.314,534,0.994,537,1.052,540,3.581,543,1.617,545,1.226,546,1.052,547,1.187,549,3.291,562,1.835,579,3.01,632,1.916,635,2.064,677,3.496,678,5.042,680,4.032,681,1.615,683,3.742,684,3.742,685,1.916,697,4.825,703,1.916,712,3.154,713,2.331,714,1.083,723,1.187,726,1.15,728,1.707,729,1.707,733,1.115,769,2.617,780,2,781,2.15,796,1.187,806,1.814,808,1.934,810,1.872,811,1.872,812,1.022,833,2.327,840,2.547,876,1.745,906,1.615,907,2.234,933,1.476,937,1.485,938,1.339,939,1.022,942,0.967,967,1.083,1045,1.115,1046,0.565,1108,5.017,1115,1.615,1129,1.568,1185,1.115,1217,1.934,1229,1.115,1237,2.566,1249,1.916,1270,2.913,1279,1.615,1296,1.115,1297,1.417,1298,1.268,1299,3.351,1324,3.141,1325,3.154,1326,4.492,1328,1.314,1329,1.658,1330,2.913,1331,1.314,1332,1.314,1333,1.115,1334,2.072,1335,1.115,1336,1.187,1337,1.314,1338,1.115,1339,1.314,1340,1.15,1341,1.314,1342,1.15,1343,1.314,1344,2.55,1345,1.314,1346,1.15,1347,1.314,1348,1.314,1349,1.226,1350,1.314,1351,1.226,1352,1.187,1353,1.314,1354,1.314,1355,1.083,1356,1.314,1357,1.115,1358,1.314,1359,1.115,1360,1.314,1361,1.314,1362,1.115,1363,1.314,1364,1.268,1365,1.314,1366,2.072,1367,1.115,1368,1.268,1369,1.115,1370,1.314,1371,1.115,1372,1.268,1373,1.314,1374,1.083,1375,1.268,1376,1.083,1377,1.314,1378,1.115,1379,1.268,1380,1.314,1381,1.115,1382,1.268,1383,1.314,1384,1.115,1385,1.268,1386,1.314,1387,1.115,1388,1.268,1389,1.314,1390,1.115,1391,1.268,1392,1.314,1393,1.083,1394,1.268,1395,0.994,1396,1.115,1397,1.115,1398,2.246,1399,1.314,1400,1.115,1401,1.314,1402,1.115,1403,4.07,1404,3.51,1405,2.719,1406,2.719,1407,2.719,1408,2.812,1409,1.115,1410,1.314,1411,1.115,1412,2.743,1413,2,1414,3.06,1415,2,1416,1.187,1417,1.083,1418,1.226,1419,1.314,1420,1.115,1421,1.268,1422,1.115,1423,1.15,1424,1.314,1449,4.104,1454,2.064,1464,1.568,1465,4.577,1492,1.314,1499,1.314,1621,3.022,1775,1.916,1817,5.293,1945,4.411,1947,3.022,1949,3.022,1950,3.742,1971,2.68,1972,6.05,1973,1.615,1974,1.615,1985,1.916,2045,1.916,2270,1.476,2608,4.624,2623,2.064,2624,5.017,2625,5.008,2626,4.044,2627,5.008,2628,5.008,2629,5.008,2630,5.008,2631,5.008,2632,2.564,2633,5.008,2634,2.564,2635,2.564,2636,2.564,2637,2.564,2638,2.564,2639,2.564,2640,2.564,2641,2.564,2642,2.564,2643,2.564,2644,2.564,2645,2.564,2646,2.564,2647,3.569,2648,3.256,2649,3.256,2650,3.256,2651,2.564,2652,2.564,2653,2.564,2654,4.419,2655,2.263,2656,5.008,2657,4.044,2658,2.564,2659,2.564,2660,2.564,2661,2.564,2662,2.564,2663,4.044,2664,4.044,2665,5.008,2666,2.564,2667,2.564,2668,2.564,2669,2.564,2670,2.564,2671,2.564,2672,2.564,2673,2.564,2674,2.564,2675,2.564,2676,2.564,2677,2.564,2678,2.564,2679,4.044,2680,2.564,2681,4.044,2682,2.564,2683,2.564,2684,2.564,2685,2.564,2686,4.044,2687,2.564,2688,2.564,2689,5.008,2690,2.564,2691,2.564,2692,2.564,2693,2.564,2694,2.564,2695,2.564,2696,2.564,2697,4.044,2698,5.008,2699,2.564,2700,2.064,2701,2.564,2702,2.564,2703,2.564,2704,5.017,2705,4.419,2706,3.569,2707,3.569,2708,2.564,2709,2.564,2710,2.263,2711,2.564,2712,2.564,2713,2.564,2714,2.564,2715,2.564]],["title/modules/UiPasswordIndicatorModule.html",[1086,1.497,2716,3.295]],["body/modules/UiPasswordIndicatorModule.html",[0,0.258,3,0.107,4,0.146,5,0.107,44,0.009,149,0.417,156,0.133,228,0.007,229,0.007,287,0.96,375,0.412,381,0.781,677,3.118,678,3.843,780,3.018,936,4.043,995,1.874,1088,1.921,1089,2.346,1093,2.53,1094,1.829,1096,2.596,1097,2.596,1098,2.596,1318,3.126,1344,4.097,1468,2.432,1616,3.449,1619,3.342,2194,5.253,2203,4.692,2204,3.843,2208,5.998,2211,3.667,2716,6.725,2717,5.384,2718,6.101,2719,5.384,2720,5.384,2721,6.101,2722,5.568,2723,4.559,2724,6.101]],["title/components/UiPasswordToggleComponent.html",[82,1.145,1346,1.977]],["body/components/UiPasswordToggleComponent.html",[0,0.14,3,0.058,4,0.079,5,0.058,20,1.509,21,0.874,25,0.268,31,2.009,43,0.633,44,0.009,46,0.728,47,0.603,52,1.108,75,1.344,79,1.804,82,1.523,92,1.487,100,0.819,101,1.676,102,0.994,123,3.095,127,0.746,149,0.306,156,0.072,158,0.879,166,1.205,201,1.719,224,1.757,228,0.005,229,0.005,232,1.246,243,1.338,253,1.403,258,1.635,287,1.244,289,2.197,310,1.307,316,1.853,327,2.405,349,1.152,352,3.24,362,0.879,366,1.694,367,1.281,369,0.297,371,1.356,374,4.089,375,0.223,376,1.438,381,1.151,411,2.021,412,1.581,413,1.396,417,3.555,418,1.905,420,3.445,438,1.281,442,1.356,463,1.902,494,1.902,507,1.694,534,1.281,542,1.694,543,1.893,545,1.581,546,1.356,549,3.105,562,2.096,677,3.495,692,2.661,713,1.356,714,1.396,726,1.483,728,2.074,729,2.074,733,1.438,748,2.661,769,2.764,806,2.204,812,1.318,876,1.152,920,3.688,937,1.804,938,1.626,939,1.318,942,1.247,967,1.396,1021,4.338,1045,1.438,1046,0.728,1052,3.326,1129,2.998,1185,1.438,1217,2.35,1229,1.438,1237,3.005,1270,3.326,1273,4.336,1278,4.721,1296,1.438,1298,1.635,1299,2.982,1312,3.672,1328,1.694,1329,2.015,1330,3.326,1331,1.694,1332,1.694,1333,1.438,1334,2.517,1335,1.438,1336,1.53,1337,1.694,1338,1.438,1339,1.694,1340,1.483,1341,1.694,1342,1.483,1343,1.694,1344,1.483,1345,1.694,1346,2.912,1347,1.694,1348,1.694,1349,1.581,1350,1.694,1351,1.581,1352,1.53,1353,1.694,1354,1.694,1355,1.396,1356,1.694,1357,1.438,1358,1.694,1359,1.438,1360,1.694,1361,1.694,1362,1.438,1363,1.694,1364,1.635,1365,1.694,1366,2.517,1367,1.438,1368,1.635,1369,1.438,1370,1.694,1371,1.438,1372,1.635,1373,1.694,1374,1.396,1375,1.635,1376,1.396,1377,1.694,1378,1.438,1379,1.635,1380,1.694,1381,1.438,1382,1.635,1383,1.694,1384,1.438,1385,1.635,1386,1.694,1387,1.438,1388,1.635,1389,1.694,1390,1.438,1391,1.635,1392,1.694,1393,1.396,1394,1.635,1395,1.281,1396,1.438,1397,1.438,1398,1.483,1399,1.694,1400,1.438,1401,1.694,1402,1.438,1403,4.212,1404,3.779,1405,3.105,1406,3.105,1407,3.105,1408,3.211,1409,1.438,1410,1.694,1411,1.438,1412,3.001,1413,2.43,1414,3.432,1415,2.43,1416,1.53,1417,1.396,1418,1.581,1419,1.694,1420,1.438,1421,1.635,1422,1.438,1423,1.483,1424,1.694,1464,1.905,1492,1.694,1499,1.694,1706,4.112,1810,4.852,1811,4.336,1910,3.956,2270,1.902,2580,2.917,2647,4.336,2725,5.906,2726,2.917,2727,4.913,2728,6.492,2729,3.306,2730,5.185,2731,3.306,2732,3.306,2733,3.306,2734,3.306,2735,3.306,2736,3.306,2737,3.306,2738,3.306,2739,2.661,2740,3.306,2741,3.306,2742,3.306,2743,3.306,2744,4.913,2745,3.306,2746,3.306,2747,3.306,2748,3.306,2749,3.306,2750,3.306,2751,3.306,2752,3.306,2753,3.306,2754,3.306,2755,3.306,2756,3.306,2757,4.913,2758,4.913]],["title/injectables/UiPasswordToggleIntl.html",[794,1.459,2730,3.295]],["body/injectables/UiPasswordToggleIntl.html",[0,0.266,3,0.11,4,0.151,5,0.11,21,1.351,25,0.511,43,0.638,44,0.009,46,1.796,47,1.486,75,1.416,149,0.358,156,0.137,166,1.318,172,2.309,173,2.249,174,2.249,175,2.249,203,1.451,228,0.008,229,0.008,287,1.332,362,1.672,375,0.424,677,3.481,794,2.512,872,4.78,1102,3.343,1464,3.159,1491,3.78,1682,4.503,2700,6.11,2725,6.325,2730,5.672,2759,5.55,2760,8.15,2761,8.15,2762,6.289,2763,6.289,2764,6.289]],["title/modules/UiPasswordToggleModule.html",[1086,1.497,2765,3.295]],["body/modules/UiPasswordToggleModule.html",[0,0.254,3,0.105,4,0.144,5,0.105,44,0.009,149,0.42,156,0.131,228,0.007,229,0.007,287,0.944,375,0.404,381,0.767,677,3.093,936,3.972,995,1.841,1088,1.887,1089,2.32,1093,2.502,1094,1.797,1096,2.567,1097,2.567,1098,2.567,1196,3.449,1223,5.23,1346,4.087,1468,2.389,1616,3.411,1619,3.305,1992,4.884,1993,3.602,1996,4.641,2194,5.23,2203,4.641,2204,3.775,2209,4.479,2211,3.602,2725,4.479,2765,6.781,2766,5.289,2767,5.289,2768,5.289,2769,5.993,2770,5.993,2771,5.993]],["title/modules/UiPipeModule.html",[1086,1.497,2772,3.091]],["body/modules/UiPipeModule.html",[0,0.278,3,0.115,4,0.158,5,0.115,44,0.009,149,0.367,156,0.143,158,1.748,228,0.008,229,0.008,375,0.444,995,2.02,1088,2.07,1089,2.454,1093,2.646,1094,1.971,1096,2.715,1097,2.715,1098,2.715,2598,6.088,2599,6.207,2772,6.298,2773,5.801,2774,5.801,2775,5.801,2776,5.293,2777,6.574]],["title/directives/UiProgressButtonDirective.html",[369,0.396,1402,1.918]],["body/directives/UiProgressButtonDirective.html",[0,0.193,3,0.08,4,0.109,5,0.08,20,1.896,25,0.37,31,2.1,43,0.519,44,0.009,46,1.728,47,1.43,75,1.436,92,1.156,100,1.129,101,0.936,102,0.773,127,1.028,149,0.354,156,0.135,158,1.212,200,2.207,201,2.003,228,0.006,229,0.006,232,1.566,243,1.681,253,1.763,258,1.271,310,1.212,331,1.719,337,2.035,369,0.554,374,4.726,375,0.308,377,3.405,381,0.583,411,1.36,480,3.405,769,2.853,780,2.254,781,3.989,831,2.622,876,2.614,1046,1.004,1237,3.587,1270,3.845,1296,2.685,1299,3.764,1317,4.021,1318,2.335,1396,2.685,1402,2.685,1403,4.281,1404,4.022,1405,3.589,1406,3.589,1407,3.589,1408,4.16,1555,5.608,1557,4.973,1570,3.02,1706,4.909,2043,3.195,2451,3.669,2778,5.574,2779,7.001,2780,7.001,2781,7.001,2782,7.001,2783,7.001,2784,4.557,2785,6.173,2786,6.178,2787,4.557,2788,5.448,2789,4.557,2790,4.97,2791,4.557,2792,4.557,2793,4.557,2794,4.021,2795,4.021,2796,3.669,2797,4.021,2798,4.557,2799,4.557,2800,4.557,2801,4.557,2802,4.557,2803,4.557,2804,4.021,2805,4.557,2806,4.021,2807,4.557,2808,4.021,2809,4.557,2810,4.557,2811,4.557,2812,4.021,2813,4.021,2814,4.021,2815,4.557,2816,4.021,2817,4.021,2818,4.021,2819,4.557,2820,4.021,2821,4.557,2822,4.557,2823,4.557,2824,4.021,2825,4.557,2826,4.021,2827,4.557]],["title/modules/UiProgressButtonModule.html",[1086,1.497,2828,3.295]],["body/modules/UiProgressButtonModule.html",[0,0.263,3,0.109,4,0.149,5,0.109,44,0.009,149,0.407,156,0.136,228,0.007,229,0.007,337,1.503,375,0.419,381,0.795,769,2.057,780,3.073,995,1.909,1088,1.956,1089,2.372,1093,2.558,1094,1.863,1096,2.624,1097,2.624,1098,2.624,1296,3.818,1299,3.457,1318,3.183,1402,3.982,1468,2.476,1570,4.117,1616,3.487,1619,2.786,2068,4.643,2208,6.065,2778,4.117,2794,5.483,2828,6.744,2829,5.483,2830,5.483,2831,5.483,2832,5.483]],["title/directives/UiScrollIntoViewDirective.html",[369,0.396,1409,1.918]],["body/directives/UiScrollIntoViewDirective.html",[0,0.191,3,0.079,4,0.108,5,0.079,8,0.97,21,1.09,25,0.366,31,1.94,35,2.375,43,0.628,44,0.009,46,1.534,47,1.269,51,3.97,52,1.016,58,4.95,75,1.357,83,4.933,92,1.143,100,1.116,101,0.925,102,0.764,125,4.06,127,1.016,149,0.352,156,0.134,191,4.296,201,1.518,206,1.796,228,0.007,229,0.006,243,1.227,252,4.579,253,1.75,258,1.257,310,1.986,337,1.95,361,3.385,362,1.198,365,3.368,367,1.747,369,0.671,370,2.93,373,4.296,375,0.304,386,1.257,396,4.06,404,3.257,411,1.35,419,4.184,422,1.611,429,3.368,430,3.368,437,3.368,438,1.747,439,3.368,441,5.464,454,2.49,478,3.368,568,4.579,579,3.682,938,3.019,954,3.385,1046,0.993,1129,3.252,1212,4.933,1233,4.384,1246,4.06,1259,5.407,1409,2.665,1671,6.143,1690,5.407,1693,3.859,1775,4.579,1884,5.836,2568,4.933,2833,6.022,2834,3.628,2835,8.058,2836,6.126,2837,5.407,2838,6.126,2839,6.126,2840,6.126,2841,6.126,2842,6.126,2843,6.126,2844,5.407,2845,4.933,2846,5.407,2847,5.407,2848,7.66,2849,5.407,2850,8.058,2851,8.058,2852,4.506,2853,4.506,2854,6.126,2855,6.126,2856,6.961,2857,6.961,2858,4.506,2859,4.506,2860,4.506,2861,4.506,2862,4.506,2863,4.506,2864,4.506,2865,4.506,2866,6.126,2867,4.506,2868,4.506]],["title/modules/UiScrollIntoViewModule.html",[1086,1.497,2869,3.295]],["body/modules/UiScrollIntoViewModule.html",[0,0.278,3,0.115,4,0.158,5,0.115,44,0.009,149,0.367,156,0.143,228,0.008,229,0.008,337,1.591,375,0.444,381,0.841,938,2.75,995,2.02,1088,2.07,1089,2.454,1093,2.646,1094,1.971,1096,2.715,1097,2.715,1098,2.715,1409,4.009,2833,4.913,2869,6.712,2870,5.801,2871,5.801,2872,5.801,2873,6.574,2874,6.574]],["title/components/UiSecondFormatDirective.html",[82,1.145,733,1.918]],["body/components/UiSecondFormatDirective.html",[0,0.204,3,0.056,4,0.077,5,0.056,8,0.694,21,0.858,25,0.262,31,1.665,35,1.87,43,0.539,44,0.009,49,1.714,52,0.727,72,1.771,75,1.193,79,1.771,82,1.665,92,0.818,100,0.799,101,1.666,102,0.98,127,0.727,149,0.302,153,2.386,156,0.14,158,1.536,166,0.838,172,1.184,173,1.153,174,1.153,175,1.153,201,0.799,206,2.872,228,0.005,229,0.005,233,0.547,243,0.878,248,2.899,253,1.378,258,0.899,289,2.186,292,3.325,306,1.856,316,1.819,327,2.37,329,2.179,337,1.744,340,2.031,341,3.639,342,1.542,344,4.318,345,4.324,349,1.123,352,3.98,353,1.856,354,2.031,355,2.261,359,5.203,361,2.665,362,0.857,367,1.25,369,0.519,371,1.322,372,1.856,375,0.218,376,1.403,381,1.144,382,2.137,383,2.137,386,0.899,394,3.604,395,3.382,396,3.197,397,2.41,398,2.41,399,2.564,400,3.604,401,3.382,402,3.604,403,3.604,404,2.564,405,3.197,406,5.738,407,3.382,408,4.318,409,3.604,410,4.792,411,2.018,412,1.542,413,1.361,417,3.518,418,1.87,419,2.899,421,4.318,422,1.153,424,1.781,425,2.419,438,1.25,442,1.322,459,1.781,460,2.261,489,2.41,507,3.691,534,1.25,542,1.652,545,1.542,546,1.322,677,1.87,709,3.604,710,5.052,711,2.41,712,2.031,713,1.978,714,1.361,715,4.318,716,2.41,717,2.596,718,7.402,719,4.256,720,4.256,721,4.256,722,2.163,723,2.233,724,4.256,725,4.256,726,2.163,727,4.051,728,2.036,729,2.036,730,1.856,731,2.846,732,2.846,733,2.789,734,2.846,735,2.846,736,2.846,737,2.846,738,2.846,739,2.846,740,2.846,741,2.846,742,2.846,743,5.099,744,2.846,745,2.846,746,4.256,747,2.846,748,2.596,749,2.846,769,2.751,812,1.285,937,1.771,938,1.597,939,1.285,942,1.216,967,1.361,1045,1.403,1046,0.71,1129,1.87,1185,1.403,1217,2.307,1229,1.403,1296,1.403,1298,1.595,1299,2.955,1328,1.652,1329,1.978,1330,3.286,1331,1.652,1332,1.652,1333,1.403,1334,2.471,1335,1.403,1336,1.493,1337,1.652,1338,1.403,1339,1.652,1340,1.446,1341,1.652,1342,1.446,1343,1.652,1344,1.446,1345,1.652,1346,1.446,1347,1.652,1348,1.652,1349,1.542,1350,1.652,1351,1.542,1352,1.493,1353,1.652,1354,1.652,1355,1.361,1356,1.652,1357,1.403,1358,1.652,1359,1.403,1360,1.652,1361,1.652,1362,1.403,1363,1.652,1364,1.595,1365,1.652,1366,2.471,1367,1.403,1368,1.595,1369,1.403,1370,1.652,1371,1.403,1372,1.595,1373,1.652,1374,1.361,1375,1.595,1376,1.361,1377,1.652,1378,1.403,1379,1.595,1380,1.652,1381,1.403,1382,1.595,1383,1.652,1384,1.403,1385,1.595,1386,1.652,1387,1.403,1388,1.595,1389,1.652,1390,1.403,1391,1.595,1392,1.652,1393,1.361,1394,1.595,1395,1.25,1396,1.403,1397,1.403,1398,1.446,1399,1.652,1400,1.403,1401,1.652,1402,1.403,1403,4.199,1404,3.754,1405,3.067,1406,3.067,1407,3.067,1408,3.172,1409,1.403,1410,1.652,1411,1.403,1412,2.977,1413,2.386,1414,3.396,1415,2.386,1416,1.493,1417,1.361,1418,1.542,1419,1.652,1420,1.403,1421,1.595,1422,1.403,1423,1.446,1424,1.652,2875,4.823,2876,3.224,2877,3.224,2878,3.224,2879,3.224,2880,3.224]],["title/modules/UiSecondFormatModule.html",[1086,1.497,2881,3.295]],["body/modules/UiSecondFormatModule.html",[0,0.274,3,0.113,4,0.155,5,0.113,44,0.009,149,0.403,156,0.141,228,0.008,229,0.008,337,1.566,375,0.437,381,0.828,710,4.536,733,4.001,995,1.988,1088,2.037,1089,2.431,1093,2.621,1094,1.94,1096,2.689,1097,2.689,1098,2.689,1196,3.723,1468,2.579,1616,3.573,1619,2.902,1996,4.862,2881,6.691,2882,5.709,2883,5.709,2884,5.709,2885,6.469,2886,6.469]],["title/components/UiSnackBarComponent.html",[82,1.145,812,1.757]],["body/components/UiSnackBarComponent.html",[0,0.203,2,1.323,3,0.117,4,0.058,5,0.042,21,0.682,25,0.194,35,1.485,36,1.145,43,0.643,44,0.009,46,0.528,51,1.273,52,1.439,72,1.08,73,1.79,75,0.95,79,2.703,82,1.421,100,0.593,101,1.544,102,1.014,127,0.54,149,0.258,153,2.368,156,0.157,158,1.697,166,1.109,171,3.913,175,0.856,200,0.856,201,1.778,203,1.525,206,2.385,221,2.908,224,1.273,228,0.004,229,0.004,233,0.65,239,3.27,243,1.304,257,1.378,287,0.942,289,2.036,304,1.323,316,1.445,317,1.626,327,1.963,329,2.257,331,0.903,349,1.335,357,3.526,369,0.215,371,0.982,372,1.378,375,0.162,376,1.042,378,3.028,381,1.122,386,1.335,393,1.773,411,1.968,412,1.145,413,1.011,418,1.856,425,0.903,442,1.571,451,1.273,463,1.378,476,1.44,534,0.928,537,0.982,545,1.145,546,0.982,547,1.109,569,3.052,668,1.587,677,1.485,713,1.571,714,1.011,726,1.074,728,1.617,729,1.617,733,1.042,757,1.587,759,4.019,760,3.18,761,1.378,762,5.162,763,2.539,764,5.285,765,4.475,766,4.818,767,4.441,768,2.453,769,2.64,770,1.679,771,1.323,772,2.539,773,1.679,774,2.878,775,1.679,776,1.679,777,1.587,778,1.587,779,1.679,780,1.895,781,2.036,782,1.587,783,4.52,784,3.314,785,4.475,786,2.686,787,1.679,788,1.587,789,1.679,790,1.679,791,3.016,792,4.475,793,1.587,794,1.268,795,3.836,796,1.109,797,2.686,798,2.686,799,4.698,800,1.679,801,1.587,802,1.587,803,2.755,804,1.679,805,4.475,806,1.718,807,2.686,808,1.832,809,3.357,810,1.773,811,1.773,812,2.181,813,1.679,814,2.686,815,1.679,816,1.679,817,1.679,818,2.686,819,1.679,820,1.587,821,1.44,822,1.587,823,1.679,824,1.679,825,2.686,826,4.195,827,3.357,828,1.679,829,1.679,830,1.679,831,1.378,832,3.768,833,3.672,834,4.019,835,3.965,836,2.303,837,1.508,838,1.587,839,1.587,840,1.508,841,1.587,842,1.587,843,3.965,844,4.441,845,2.413,846,1.679,847,1.508,848,1.587,849,1.587,850,2.413,851,2.413,852,1.378,853,1.508,854,1.587,855,1.679,856,1.679,857,1.273,858,1.679,859,1.679,860,1.679,861,2.686,862,1.679,863,1.679,864,1.679,865,1.679,866,1.679,867,1.679,868,1.679,869,1.679,870,1.679,871,1.679,872,1.508,873,2.686,874,1.679,875,2.686,876,1.335,877,2.686,878,2.686,879,1.227,880,3.357,881,1.679,882,1.679,883,1.679,884,2.686,885,1.679,886,1.679,887,1.679,888,1.679,889,1.679,890,3.357,891,2.539,892,1.679,893,1.679,894,1.679,895,1.679,896,2.686,897,1.679,898,1.679,899,1.679,900,1.679,901,1.679,937,1.407,938,1.268,939,0.955,942,0.903,967,1.011,1045,1.042,1046,0.528,1069,1.44,1129,1.485,1185,1.042,1187,1.587,1198,1.79,1217,1.832,1229,1.042,1296,1.042,1297,1.323,1298,1.185,1299,2.617,1327,1.928,1328,1.227,1329,1.571,1330,2.803,1331,1.227,1332,1.227,1333,1.042,1334,1.963,1335,1.042,1336,1.109,1337,1.227,1338,1.042,1339,1.227,1340,1.074,1341,1.227,1342,1.074,1343,1.227,1344,1.074,1345,1.227,1346,1.074,1347,1.227,1348,1.227,1349,1.145,1350,1.227,1351,1.145,1352,1.109,1353,1.227,1354,1.227,1355,1.011,1356,1.227,1357,1.042,1358,1.227,1359,1.042,1360,1.227,1361,1.227,1362,1.042,1363,1.227,1364,1.185,1365,1.227,1366,1.963,1367,1.042,1368,1.185,1369,1.042,1370,1.227,1371,1.042,1372,1.185,1373,1.227,1374,1.011,1375,1.185,1376,1.011,1377,1.227,1378,1.042,1379,1.185,1380,1.227,1381,1.042,1382,1.185,1383,1.227,1384,1.042,1385,1.185,1386,1.227,1387,1.042,1388,1.185,1389,1.227,1390,1.042,1391,1.185,1392,1.227,1393,1.011,1394,1.185,1395,0.928,1396,1.042,1397,1.042,1398,1.074,1399,1.227,1400,1.042,1401,1.227,1402,1.042,1403,4.027,1404,3.433,1405,2.616,1406,2.616,1407,2.616,1408,2.706,1409,1.042,1410,1.227,1411,1.042,1412,2.671,1413,1.895,1414,2.96,1415,1.895,1416,1.109,1417,1.011,1418,1.145,1419,1.227,1420,1.042,1421,1.185,1422,1.042,1423,1.074,1424,1.227,1449,2.205,1945,1.44,1949,2.863,1950,2.863,1971,2.539,1972,1.928,1973,1.508,1974,1.508,1975,1.928,1976,1.79,2411,3.381,2887,2.395,2888,2.395,2889,2.395,2890,2.395,2891,2.395,2892,2.395,2893,3.831,2894,3.831,2895,2.395,2896,2.395,2897,2.395,2898,2.395,2899,3.831,2900,3.831]],["title/modules/UiSnackBarModule.html",[1086,1.497,2901,3.295]],["body/modules/UiSnackBarModule.html",[0,0.25,3,0.104,4,0.142,5,0.104,44,0.009,149,0.422,156,0.129,158,2.11,228,0.007,229,0.007,287,0.931,375,0.399,381,0.757,388,4.42,760,3.144,764,3.92,780,2.926,793,3.92,801,4.845,802,3.92,812,3.457,820,3.92,821,3.555,822,3.92,995,1.817,1087,6.082,1088,1.862,1089,2.302,1093,2.482,1094,1.773,1096,2.547,1098,2.547,1326,3.725,1468,2.358,1616,3.384,1619,3.278,1974,3.725,1992,4.845,1993,3.555,2203,4.604,2204,3.725,2772,5.125,2901,6.637,2902,5.22,2903,5.22,2904,5.914,2905,4.762,2906,7.31,2907,7.31,2908,5.914,2909,4.762,2910,5.914,2911,5.914,2912,5.885,2913,5.885,2914,5.885,2915,5.914,2916,5.914]],["title/injectables/UiSnackBarService.html",[794,1.459,853,2.777]],["body/injectables/UiSnackBarService.html",[0,0.228,2,1.59,3,0.136,4,0.069,5,0.05,8,1.406,20,1.359,21,0.787,25,0.234,36,1.376,43,0.696,44,0.009,46,1.188,47,0.525,51,1.53,52,1.555,72,1.216,75,1.248,79,2.722,82,1.4,92,0.73,100,1.708,101,1.416,102,1.107,149,0.285,153,2.666,156,0.166,158,1.834,166,1.198,171,4.126,200,1.029,201,1.884,203,1.584,206,2.863,221,3.216,224,1.53,228,0.004,229,0.004,233,0.75,239,2.267,243,1.468,257,1.656,258,0.803,287,1.167,304,1.59,317,1.83,329,1.669,331,1.085,357,4.427,371,1.18,372,1.656,375,0.194,378,3.486,381,0.774,386,1.503,393,2.048,418,1.116,425,1.085,451,1.53,463,1.656,476,3.24,537,1.18,569,3.297,713,1.814,714,1.215,728,1.215,729,1.215,757,1.907,759,3.395,760,3.94,761,1.656,762,5.752,763,2.932,764,5.68,765,4.835,766,5.109,767,4.76,768,2.762,769,1.465,770,2.018,771,1.59,772,2.932,773,2.018,774,1.73,775,2.018,776,2.018,777,1.907,778,1.907,779,2.018,780,2.189,781,1.53,782,1.907,783,5.058,784,3.552,785,4.835,786,3.102,787,2.018,788,1.907,789,2.018,790,2.018,791,3.395,792,4.242,793,1.907,794,1.465,795,3.102,796,1.332,797,4.242,798,4.242,799,4.242,800,2.018,801,1.907,802,1.907,803,3.758,804,2.018,805,4.835,806,1.291,807,2.018,808,1.376,809,2.018,810,1.332,811,1.332,812,1.147,813,2.018,814,3.102,815,2.018,816,2.018,817,2.018,818,3.102,819,2.018,820,1.907,821,1.73,822,1.907,823,2.018,824,2.018,825,2.018,826,2.018,827,2.018,828,2.018,829,2.018,830,2.018,831,1.656,832,4.113,833,4.375,834,4.789,835,4.913,836,2.659,837,1.813,838,1.907,839,1.907,840,1.813,841,1.907,842,1.907,843,5.039,844,5.234,845,3.811,846,2.018,847,1.813,848,1.907,849,1.907,850,2.787,851,2.787,852,1.656,853,2.787,854,1.907,855,3.102,856,2.018,857,1.53,858,3.779,859,2.018,860,3.779,861,3.102,862,2.018,863,2.018,864,2.018,865,2.018,866,2.018,867,2.018,868,2.018,869,2.018,870,3.102,871,3.102,872,3.395,873,3.102,874,2.018,875,3.102,876,1.541,877,3.102,878,3.102,879,3.1,880,3.779,881,2.018,882,2.018,883,2.018,884,3.102,885,2.018,886,2.018,887,2.018,888,2.018,889,2.018,890,3.779,891,1.907,892,2.018,893,2.018,894,2.018,895,2.018,896,3.102,897,2.018,898,2.018,899,2.018,900,2.018,901,2.018,1102,1.53,1194,1.656,2917,2.878,2918,2.878,2919,2.878,2920,2.878,2921,2.878,2922,2.878,2923,2.878,2924,2.878]],["title/injectables/UiSnackbarIntl.html",[794,1.459,803,2.537]],["body/injectables/UiSnackbarIntl.html",[0,0.263,3,0.109,4,0.149,5,0.109,20,2.314,21,1.341,25,0.504,43,0.633,44,0.009,46,1.66,47,1.373,71,5.63,75,1.408,92,1.576,149,0.355,156,0.136,166,1.079,203,1.441,228,0.007,229,0.007,232,1.576,258,1.733,287,1.327,362,1.652,375,0.419,404,4.004,459,3.432,543,2.432,562,2.721,760,4.48,763,5.373,774,5.066,783,4.528,794,2.494,803,4.335,1102,3.302,1464,2.92,1492,3.183,1499,3.183,2270,3.575,2909,6.065,2925,5.483,2926,7.155,2927,6.212,2928,6.212,2929,7.533,2930,6.212]],["title/directives/UiSpinnerButtonDirective.html",[369,0.396,1411,1.918]],["body/directives/UiSpinnerButtonDirective.html",[0,0.183,3,0.076,4,0.104,5,0.076,20,1.827,25,0.35,31,1.998,43,0.5,44,0.009,46,1.616,47,1.337,75,1.382,79,2.693,92,1.095,100,1.069,101,0.886,102,0.732,127,0.973,149,0.363,156,0.13,158,1.582,200,2.127,201,1.906,228,0.006,229,0.006,232,1.509,243,1.62,253,1.699,258,1.203,310,1.147,331,1.628,337,1.972,369,0.534,374,4.62,375,0.291,377,3.225,381,0.761,411,1.31,480,3.225,769,2.976,781,3.899,831,2.483,876,2.072,941,3.047,1046,0.951,1217,3.508,1237,3.487,1270,3.758,1299,1.77,1318,2.211,1333,2.587,1396,2.587,1403,4.384,1404,4.078,1405,3.508,1406,3.508,1407,3.508,1411,2.587,1412,3.669,1413,3.628,1414,4.219,1415,3.628,1428,3.808,1435,3.225,1555,5.481,1557,4.861,1570,2.86,1571,3.225,1574,3.808,1576,3.808,1577,3.808,1706,4.772,1993,2.594,2043,3.026,2451,3.474,2778,5.401,2786,6.473,2788,5.249,2790,4.788,2796,3.474,2797,3.808,2804,3.808,2806,3.808,2808,3.808,2812,3.808,2813,3.808,2814,5.249,2816,3.808,2817,3.808,2818,3.808,2820,3.808,2824,3.808,2826,3.808,2931,6.805,2932,6.805,2933,6.805,2934,6.805,2935,4.315,2936,7.335,2937,5.947,2938,4.315,2939,4.315,2940,4.315,2941,4.315,2942,3.808,2943,4.315,2944,4.315,2945,4.315,2946,4.315,2947,4.315,2948,4.315,2949,4.315,2950,4.315,2951,4.315,2952,4.315,2953,4.315,2954,4.315,2955,4.315,2956,5.947,2957,4.315,2958,4.315]],["title/modules/UiSpinnerButtonModule.html",[1086,1.497,2959,3.295]],["body/modules/UiSpinnerButtonModule.html",[0,0.263,3,0.109,4,0.149,5,0.109,44,0.009,149,0.407,156,0.136,228,0.007,229,0.007,337,1.503,375,0.419,381,0.795,769,2.057,995,1.909,1088,1.956,1089,2.372,1093,2.558,1094,1.863,1096,2.624,1097,2.624,1098,2.624,1299,2.548,1318,3.183,1333,3.818,1411,3.982,1412,3.36,1468,2.476,1570,4.117,1571,4.643,1616,3.487,1617,6.065,1619,2.786,2068,4.643,2778,4.117,2832,5.483,2959,6.744,2960,5.483,2961,5.483,2962,5.483]],["title/injectables/UiSuggestIntl.html",[794,1.459,2963,3.55]],["body/injectables/UiSuggestIntl.html",[0,0.167,3,0.069,4,0.095,5,0.069,8,1.518,11,4.176,21,0.995,25,0.527,43,0.65,44,0.009,46,1.845,47,1.638,72,1.68,75,1.455,89,5.68,100,1.607,101,1.332,123,3.52,149,0.263,156,0.122,166,1.127,171,3.958,172,1.449,173,1.411,174,1.411,175,1.411,203,1.553,226,2.764,228,0.008,229,0.006,232,1.001,241,3.991,242,3.899,257,3.216,271,3.704,272,3.359,287,1.333,315,2.979,355,3.918,357,4.486,362,1.05,375,0.266,386,1.101,393,3.266,417,2.863,459,2.18,507,4.542,537,3.635,541,3.52,543,1.804,549,2.672,562,1.274,658,4.176,723,1.827,752,3.898,794,1.85,879,3.615,918,4.176,927,3.087,930,4.176,941,3.615,942,3.158,954,3.087,1094,1.183,1102,2.098,1128,5.68,1201,3.704,1246,2.616,1395,2.735,1464,2.735,1491,2.372,1492,2.022,1499,2.022,1682,4.114,1816,4.499,2084,4.932,2120,4.499,2122,4.499,2127,4.499,2139,6.226,2184,3.178,2270,2.271,2614,4.932,2963,4.499,2964,5.939,2965,3.483,2966,6.487,2967,6.487,2968,6.487,2969,6.487,2970,6.487,2971,6.487,2972,6.487,2973,6.487,2974,6.487,2975,3.947,2976,5.588,2977,3.947,2978,3.947,2979,7.055,2980,7.055,2981,4.932,2982,3.947,2983,4.932,2984,3.947,2985,3.947,2986,4.499,2987,3.947,2988,3.947,2989,5.725,2990,3.947,2991,3.947,2992,5.588,2993,3.947]],["title/directives/UiSuggestMatFormFieldDirective.html",[369,0.396,1416,2.041]],["body/directives/UiSuggestMatFormFieldDirective.html",[0,0.112,3,0.047,4,0.064,5,0.047,17,2.373,20,1.278,21,0.74,23,4.344,25,0.216,31,2.01,35,1.613,43,0.638,44,0.009,46,1.129,47,1.534,51,2.211,52,1.745,72,0.938,75,1.479,82,1.972,92,1.597,100,1.031,101,0.854,102,0.983,105,1.864,110,2.211,149,0.358,156,0.058,158,1.775,161,1.31,166,1.007,172,0.976,173,0.95,174,0.95,175,0.95,183,3.109,200,2.073,201,1.654,203,0.98,228,0.004,229,0.004,232,1.055,239,1.362,241,3.515,243,0.724,253,1.188,258,1.861,287,1.347,306,3.337,310,1.542,314,2.62,315,1.756,324,1.986,362,0.707,368,2.62,369,0.374,370,1.989,375,0.179,378,1.809,381,0.34,386,2.314,422,2.387,424,1.468,425,1.003,436,3.081,455,2.14,459,3.687,477,1.864,534,1.987,537,2.102,547,2.914,553,2.95,561,1.986,575,1.864,579,4.651,663,2.14,669,2.14,681,1.674,722,2.299,879,2.971,906,2.62,907,3.203,916,4.548,920,2.724,925,1.864,942,1.569,954,2.298,955,4.523,963,2.14,964,2.917,965,2.14,971,1.864,1046,0.586,1052,2.971,1057,2.131,1063,3.225,1195,2.5,1213,1.986,1236,5.374,1249,1.986,1251,5.425,1306,2.917,1395,1.613,1398,3.959,1416,1.926,1449,2.394,1464,1.613,1491,1.598,1622,2.917,1676,4.193,1687,2.917,1700,2.14,1705,1.986,1794,5.068,1924,1.864,1945,2.5,2115,3.349,2152,4.782,2171,4.523,2234,4.523,2255,2.346,2259,4.523,2278,4.066,2407,2.917,2494,4.523,2964,5.999,2994,7.55,2995,2.346,2996,5.125,2997,5.125,2998,5.125,2999,5.125,3000,6.976,3001,4.16,3002,4.16,3003,5.125,3004,5.125,3005,4.523,3006,4.127,3007,2.658,3008,4.523,3009,2.658,3010,3.671,3011,4.16,3012,4.16,3013,4.127,3014,4.16,3015,5.125,3016,2.658,3017,2.658,3018,4.16,3019,5.125,3020,4.16,3021,2.658,3022,2.658,3023,2.658,3024,2.658,3025,2.658,3026,2.658,3027,2.658,3028,2.658,3029,2.658,3030,2.658,3031,2.658,3032,2.658,3033,4.16,3034,3.349,3035,2.658,3036,2.658,3037,2.658,3038,2.658,3039,2.658,3040,2.658,3041,4.16,3042,5.125,3043,4.16,3044,4.16,3045,2.346,3046,3.671,3047,2.658,3048,4.16,3049,2.346,3050,2.658,3051,2.658,3052,2.658,3053,5.125,3054,2.658,3055,2.658,3056,5.798,3057,2.658,3058,4.16,3059,2.658,3060,2.658,3061,2.658,3062,2.658,3063,2.658,3064,4.16,3065,2.658,3066,4.16,3067,5.125,3068,2.658,3069,2.658,3070,6.294,3071,2.658,3072,5.125,3073,2.658,3074,2.658,3075,2.658,3076,2.658,3077,2.658,3078,2.658,3079,2.658,3080,2.658,3081,2.658,3082,2.658,3083,2.658,3084,2.658,3085,2.658,3086,2.658,3087,2.658,3088,2.658,3089,2.658,3090,2.658,3091,2.658,3092,5.798,3093,2.346,3094,2.658,3095,2.658,3096,2.658,3097,2.658,3098,4.16,3099,4.16,3100,2.658,3101,2.658,3102,2.658,3103,5.125,3104,2.658,3105,2.658,3106,2.658,3107,2.658,3108,2.658,3109,2.658,3110,2.658,3111,2.658,3112,2.658,3113,2.658,3114,2.658,3115,2.658,3116,2.658,3117,4.16,3118,2.658,3119,2.658,3120,2.658,3121,2.658,3122,2.658,3123,2.14]],["title/modules/UiSuggestModule.html",[1086,1.497,2195,3.091]],["body/modules/UiSuggestModule.html",[0,0.231,3,0.095,4,0.131,5,0.095,36,2.605,44,0.009,149,0.433,156,0.119,228,0.007,229,0.007,287,0.858,375,0.368,381,0.697,681,3.431,936,5.332,937,2,938,1.803,939,2.171,940,3.274,995,1.674,1088,1.715,1089,2.186,1093,2.357,1094,1.633,1096,1.898,1097,1.898,1098,2.419,1196,3.135,1223,5.106,1290,5.957,1318,2.791,1412,2.171,1459,4.071,1468,2.171,1506,5.957,1616,3.213,1617,5.589,1619,3.113,1996,4.372,2194,5.106,2195,6.364,2199,5.188,2200,3.274,2201,6.126,2202,4.807,2203,4.372,2204,3.431,2209,4.071,2211,3.274,2304,6.126,2306,6.126,2307,4.807,2722,5.188,2723,4.071,2964,3.82,3045,4.807,3124,4.807,3125,4.807,3126,5.957,3127,5.447,3128,6.942,3129,5.447,3130,6.942,3131,4.807,3132,7.64,3133,5.447]],["title/components/UiTreeItemComponent.html",[82,1.145,1349,2.108]],["body/components/UiTreeItemComponent.html",[0,0.153,3,0.063,4,0.087,5,0.063,20,1.612,25,0.293,31,1.604,36,3.24,43,0.605,44,0.009,46,0.796,47,0.659,75,1.378,79,1.926,82,1.604,92,1.566,100,0.895,101,1.708,102,0.613,110,1.921,127,0.815,142,5.98,149,0.339,156,0.079,161,1.138,166,0.911,200,1.876,201,0.895,228,0.005,229,0.005,232,1.331,243,1.429,253,1.498,258,1.722,287,1.273,289,2.237,310,0.961,316,1.979,327,3.742,333,3.712,349,1.259,369,0.325,370,3.441,371,1.482,375,0.244,376,1.572,381,1.158,411,2.032,412,1.728,413,1.526,418,2.034,442,1.482,534,1.401,545,1.728,546,1.482,677,2.034,714,1.526,722,2.77,726,1.621,728,2.215,729,2.215,733,1.572,769,2.811,796,1.673,806,2.353,810,2.428,811,2.428,812,1.44,857,1.921,937,1.926,938,1.737,939,1.44,942,1.363,967,1.526,1045,1.572,1046,0.796,1057,2.688,1063,3.687,1115,2.276,1129,2.034,1167,4.972,1172,2.91,1185,1.572,1217,2.509,1229,1.572,1240,5.455,1268,4.63,1296,1.572,1298,1.788,1299,3.078,1328,1.852,1329,2.151,1330,3.472,1331,1.852,1332,1.852,1333,1.572,1334,2.688,1335,1.572,1336,1.673,1337,1.852,1338,1.572,1339,1.852,1340,1.621,1341,1.852,1342,1.621,1343,1.852,1344,1.621,1345,1.852,1346,1.621,1347,1.852,1348,1.852,1349,3.24,1350,1.852,1351,1.728,1352,1.673,1353,1.852,1354,1.852,1355,1.526,1356,1.852,1357,1.572,1358,1.852,1359,1.572,1360,1.852,1361,1.852,1362,1.572,1363,1.852,1364,1.788,1365,1.852,1366,2.688,1367,1.572,1368,1.788,1369,2.947,1370,1.852,1371,1.572,1372,1.788,1373,1.852,1374,1.526,1375,1.788,1376,1.526,1377,1.852,1378,1.572,1379,1.788,1380,1.852,1381,1.572,1382,1.788,1383,1.852,1384,1.572,1385,1.788,1386,1.852,1387,1.572,1388,1.788,1389,1.852,1390,1.572,1391,1.788,1392,1.852,1393,1.526,1394,1.788,1395,1.401,1396,1.572,1397,1.572,1398,1.621,1399,1.852,1400,1.572,1401,1.852,1402,1.572,1403,4.256,1404,3.867,1405,3.24,1406,3.24,1407,3.24,1408,3.352,1409,1.572,1410,1.852,1411,1.572,1412,3.087,1413,2.595,1414,3.559,1415,2.595,1416,1.673,1417,1.526,1418,1.728,1419,1.852,1420,1.572,1421,1.788,1422,1.572,1423,1.621,1424,1.852,1468,1.44,1616,2.428,1619,1.621,1676,3.712,2285,4.972,2722,3.92,2723,2.701,3134,6.51,3135,6.51,3136,3.189,3137,6.175,3138,5.246,3139,5.246,3140,3.614,3141,5.246,3142,3.614,3143,3.614,3144,3.614,3145,3.614,3146,3.614,3147,3.614,3148,3.614,3149,3.189,3150,3.614,3151,5.246,3152,3.614,3153,3.614,3154,3.614]],["title/components/UiTreeSelectComponent.html",[82,1.145,1351,2.108]],["body/components/UiTreeSelectComponent.html",[0,0.09,3,0.037,4,0.051,5,0.037,17,2.049,20,1.072,21,0.621,25,0.173,31,1.464,35,1.353,43,0.679,44,0.009,46,1.468,47,1.257,51,2.353,52,1.556,63,3.079,72,1.153,75,1.435,79,1.281,82,1.15,92,1.843,100,1.758,101,1.673,102,1.257,105,2.447,121,2.049,124,3.308,127,0.481,149,0.343,156,0.047,158,1.36,161,1.61,166,1.158,200,1.248,201,1.5,203,1.158,228,0.003,229,0.003,232,0.885,241,2.049,253,0.997,258,1.859,287,1.308,289,1.972,316,1.67,319,1.496,327,3.723,329,2.676,330,3.551,333,4.994,335,4.479,349,1.216,369,0.192,375,0.144,376,0.928,378,0.928,381,1.113,411,1.953,412,1.02,413,0.901,418,1.353,422,1.248,425,2.283,442,0.875,534,0.827,545,1.02,546,0.875,547,2.367,553,2.547,582,3.564,658,1.595,660,1.718,664,1.718,677,1.353,713,1.431,714,0.901,722,2.293,723,0.988,726,0.957,728,1.473,729,1.473,733,0.928,752,1.179,758,1.718,769,2.498,781,1.855,796,0.988,806,1.565,808,1.669,810,1.615,811,1.615,812,0.851,876,1.542,879,1.093,906,1.344,929,1.595,933,2.008,936,1.414,937,1.281,938,1.155,939,0.851,940,1.283,942,0.805,967,0.901,1021,1.855,1045,0.928,1046,0.47,1052,3.101,1057,1.788,1063,3.273,1069,2.097,1074,5.43,1115,1.344,1129,1.353,1140,1.595,1159,1.883,1167,6.901,1170,1.883,1171,1.883,1172,1.718,1173,3.906,1178,1.883,1183,1.718,1184,4.214,1185,0.928,1195,1.283,1203,3.585,1217,1.669,1229,0.928,1296,0.928,1297,1.179,1298,1.056,1299,2.482,1325,1.344,1328,1.093,1329,1.431,1330,2.889,1331,1.093,1332,1.093,1333,0.928,1334,1.788,1335,0.928,1336,0.988,1337,1.093,1338,0.928,1339,1.093,1340,0.957,1341,1.093,1342,0.957,1343,1.093,1344,0.957,1345,1.093,1346,0.957,1347,1.093,1348,1.093,1349,2.117,1350,1.093,1351,2.445,1352,3.085,1353,1.093,1354,1.093,1355,0.901,1356,1.093,1357,0.928,1358,1.093,1359,0.928,1360,1.093,1361,1.093,1362,0.928,1363,1.093,1364,1.056,1365,1.093,1366,1.788,1367,0.928,1368,1.056,1369,3,1370,1.093,1371,0.928,1372,1.056,1373,1.093,1374,0.901,1375,1.056,1376,0.901,1377,1.093,1378,0.928,1379,1.056,1380,1.093,1381,0.928,1382,1.056,1383,1.093,1384,0.928,1385,1.056,1386,1.093,1387,0.928,1388,1.056,1389,1.093,1390,0.928,1391,1.056,1392,1.093,1393,0.901,1394,1.056,1395,0.827,1396,0.928,1397,0.928,1398,0.957,1399,1.093,1400,0.928,1401,1.093,1402,0.928,1403,3.949,1404,3.298,1405,2.445,1406,2.445,1407,2.445,1408,2.529,1409,0.928,1410,1.093,1411,0.928,1412,2.546,1413,1.726,1414,2.789,1415,1.726,1416,0.988,1417,0.901,1418,1.02,1419,1.093,1420,0.928,1421,1.056,1422,0.928,1423,0.957,1424,1.093,1449,1.228,1462,4.873,1468,0.851,1474,1.718,1611,2.447,1616,1.615,1619,0.957,1659,3.104,1676,4.006,1715,3.585,1853,1.179,1947,4.214,1962,1.883,1971,2.313,1973,1.344,1974,1.344,2066,3.906,2199,2.608,2200,1.283,2285,2.809,2421,3.906,2722,2.608,2723,1.595,3005,3.906,3134,6.689,3135,1.718,3149,1.883,3155,1.883,3156,4.427,3157,3.489,3158,4.427,3159,4.427,3160,3.489,3161,2.809,3162,3.489,3163,3.489,3164,3.489,3165,5.113,3166,4.427,3167,5.638,3168,4.427,3169,3.489,3170,7.095,3171,5.638,3172,4.976,3173,4.427,3174,3.489,3175,3.906,3176,6.052,3177,3.906,3178,2.134,3179,3.079,3180,2.134,3181,2.134,3182,5.113,3183,2.134,3184,2.134,3185,3.489,3186,3.489,3187,2.134,3188,3.489,3189,6.052,3190,2.134,3191,3.489,3192,2.134,3193,3.489,3194,2.134,3195,2.134,3196,3.489,3197,2.134,3198,3.489,3199,2.134,3200,3.489,3201,3.489,3202,2.134,3203,3.489,3204,2.134,3205,2.134,3206,4.427,3207,2.134,3208,3.489,3209,2.134,3210,3.489,3211,2.134,3212,2.134,3213,2.134,3214,2.134,3215,2.134,3216,3.489,3217,2.134,3218,4.427,3219,3.489,3220,2.134,3221,2.134,3222,2.134,3223,2.134,3224,3.489,3225,3.489,3226,2.134,3227,2.134,3228,2.134,3229,2.134,3230,2.134,3231,2.134,3232,2.134,3233,2.134,3234,2.134,3235,2.134,3236,3.489,3237,2.134,3238,2.134,3239,2.134,3240,2.134,3241,5.113,3242,2.134,3243,3.489,3244,6.388,3245,2.134,3246,5.113,3247,2.134,3248,2.134,3249,1.718,3250,2.134,3251,2.134,3252,2.134,3253,2.134,3254,2.134,3255,2.134,3256,3.489,3257,2.134,3258,3.489,3259,2.134,3260,2.134,3261,2.134,3262,2.134,3263,2.134,3264,2.134,3265,2.134,3266,2.134,3267,2.134,3268,2.134,3269,2.134,3270,2.134,3271,2.134,3272,2.134,3273,2.134,3274,2.134,3275,2.134,3276,2.134,3277,2.134,3278,2.134,3279,2.134,3280,2.134,3281,3.489,3282,4.427,3283,2.134,3284,1.883,3285,2.134,3286,2.134]],["title/directives/UiVirtualScrollRangeLoaderDirective.html",[369,0.396,1417,1.861]],["body/directives/UiVirtualScrollRangeLoaderDirective.html",[0,0.132,3,0.054,4,0.075,5,0.054,8,0.67,14,2.822,25,0.253,26,1.44,31,1.469,43,0.475,44,0.009,46,1.035,47,0.856,52,1.525,72,1.84,75,0.982,110,2.496,127,0.702,149,0.319,150,4.09,156,0.155,158,0.827,161,1.983,166,0.816,172,1.142,173,1.112,174,1.112,175,1.112,200,2.418,201,1.926,228,0.006,229,0.005,232,1.191,233,0.527,241,3.29,243,0.847,253,1.341,262,3.509,272,3.399,291,2.325,292,2.702,310,0.827,317,2.579,329,1.771,337,1.524,349,1.97,360,4.416,362,0.827,364,2.74,366,1.594,367,1.206,369,0.566,371,1.276,375,0.21,381,0.601,386,1.577,392,1.87,399,1.654,411,1.035,422,1.679,428,4.258,438,1.206,454,1.719,543,1.826,547,3.97,549,2.245,562,1.004,712,1.959,713,2.319,722,3.31,723,3.29,831,1.79,857,3.922,876,2.194,906,3.967,919,5.555,922,3.509,935,3.509,937,2.995,938,2.7,939,3.158,940,2.822,941,4.059,954,2.594,956,3.78,957,3.509,1046,0.685,1057,2.406,1063,2.897,1094,0.933,1126,5.419,1133,3.509,1237,2.897,1246,5.887,1270,1.594,1417,1.982,1418,2.245,1464,1.82,1481,2.325,1492,1.594,1499,1.594,1545,3.967,1546,2.181,1822,4.481,1853,1.719,1872,3.112,1884,3.112,1966,3.292,2026,2.181,2152,1.959,2168,3.965,2200,1.87,2258,2.325,2270,1.79,2407,3.292,2739,3.78,3006,5.443,3013,2.505,3034,3.78,3123,2.505,3161,3.78,3287,3.78,3288,3.78,3289,5.723,3290,3.78,3291,6.991,3292,6.273,3293,3.111,3294,4.143,3295,6.86,3296,4.143,3297,4.143,3298,4.143,3299,5.559,3300,4.99,3301,3.111,3302,4.143,3303,5.559,3304,4.143,3305,3.111,3306,4.143,3307,4.143,3308,4.143,3309,4.143,3310,4.143,3311,4.143,3312,2.745,3313,4.143,3314,2.505,3315,3.78,3316,4.553,3317,4.99,3318,2.745,3319,2.745,3320,3.78,3321,2.745,3322,2.745,3323,2.745,3324,2.505,3325,2.505,3326,2.745,3327,2.745,3328,2.745,3329,2.745,3330,2.745,3331,2.745,3332,2.745,3333,2.745,3334,2.745,3335,4.143,3336,2.745,3337,2.745,3338,2.745,3339,2.745,3340,2.745,3341,2.325,3342,2.745,3343,4.143,3344,2.745,3345,2.745,3346,2.745,3347,2.745,3348,2.745,3349,2.745,3350,4.143,3351,2.745,3352,2.745,3353,2.745,3354,2.745,3355,5.966,3356,6.273,3357,2.745,3358,4.143,3359,2.745,3360,2.745,3361,2.745,3362,2.745,3363,2.745,3364,2.745]],["title/modules/UiVirtualScrollRangeLoaderModule.html",[1086,1.497,3126,3.091]],["body/modules/UiVirtualScrollRangeLoaderModule.html",[0,0.269,3,0.111,4,0.153,5,0.111,44,0.009,149,0.4,156,0.139,228,0.008,229,0.008,337,1.539,375,0.429,381,0.814,937,3.007,938,2.711,939,3.264,995,1.953,1088,2.002,1089,2.405,1093,2.594,1094,1.906,1096,2.661,1097,2.661,1098,2.661,1417,3.876,1468,2.534,1545,4.005,1615,5.611,1616,3.536,1618,5.611,1619,2.852,2199,5.709,2200,3.822,3126,6.257,3365,5.611,3366,5.611,3367,5.611]],["title/directives/UiVirtualScrollViewportResizeDirective.html",[369,0.396,1420,1.918]],["body/directives/UiVirtualScrollViewportResizeDirective.html",[0,0.213,3,0.088,4,0.121,5,0.088,8,1.085,25,0.409,31,2.029,35,2.56,43,0.555,44,0.009,47,1.204,52,1.137,72,1.763,75,1.147,92,1.279,100,1.249,101,1.035,102,0.855,127,1.137,149,0.382,156,0.144,166,1.147,201,1.936,228,0.007,229,0.007,232,1.675,241,3.409,242,4.875,243,1.373,253,1.886,258,1.406,271,5.62,337,1.782,354,4.159,361,3.648,362,1.341,363,3.176,366,2.584,367,1.955,369,0.702,371,2.068,375,0.34,381,0.845,386,2.054,411,1.455,422,1.803,438,2.56,453,3.768,454,2.786,543,2.377,562,1.628,857,4.153,937,3.158,938,2.847,1046,1.111,1237,3.773,1270,2.584,1420,2.873,1421,3.267,1422,3.818,1423,3.303,1463,3.768,1464,2.855,1467,3.768,1468,2.01,1493,3.768,1945,3.969,1966,4.63,2021,5.828,2026,4.63,2200,3.031,2258,3.768,2407,4.63,2486,4.45,3287,5.317,3288,5.317,3289,6.291,3324,4.06,3325,4.06,3368,5.929,3369,4.45,3370,6.604,3371,6.604,3372,6.604,3373,6.604,3374,5.042,3375,5.042,3376,5.042,3377,5.042,3378,5.042,3379,5.042,3380,5.042,3381,5.042,3382,5.042,3383,5.042,3384,5.042,3385,5.042,3386,5.042,3387,5.042]],["title/modules/UiVirtualScrollViewportResizeModule.html",[1086,1.497,2196,3.091]],["body/modules/UiVirtualScrollViewportResizeModule.html",[0,0.276,3,0.114,4,0.156,5,0.114,44,0.009,149,0.365,156,0.142,228,0.008,229,0.008,337,1.576,375,0.439,381,0.833,937,3.037,938,2.738,995,2,1088,2.05,1089,2.44,1093,2.631,1094,1.952,1096,2.699,1097,2.699,1098,2.699,1420,4.004,1422,3.598,2196,6.286,3368,5.242,3388,5.746,3389,5.746,3390,5.746,3391,6.511,3392,6.511]],["title/interfaces/VirtualScrollItem.html",[233,0.747,919,3.091]],["body/interfaces/VirtualScrollItem.html",[0,0.143,3,0.059,4,0.081,5,0.059,8,0.726,14,2.998,21,0.888,25,0.274,26,1.562,31,1.541,43,0.283,44,0.009,52,1.578,72,1.823,102,0.846,110,1.793,149,0.33,150,4.216,156,0.16,158,0.897,161,1.869,166,0.867,172,1.239,173,1.207,174,1.207,175,1.207,200,2.345,201,1.969,228,0.007,229,0.005,232,0.856,233,0.572,241,3.508,243,0.919,262,2.522,272,3.567,286,1.207,291,2.522,292,1.942,317,2.487,329,1.882,337,0.817,349,2.068,360,3.498,362,0.897,364,2.852,366,1.729,367,1.308,369,0.533,371,1.384,375,0.228,381,0.432,386,1.655,392,2.028,399,2.652,411,0.743,422,1.207,428,4.13,438,1.308,454,1.864,543,1.61,547,3.945,549,2.838,562,1.089,712,2.125,713,2.434,722,3.286,723,3.391,831,1.942,857,4.029,876,2.285,906,3.142,919,5.748,922,2.522,935,4.901,937,2.408,938,2.171,939,2.366,940,2.028,941,4.295,954,1.864,956,2.717,957,2.522,1063,2.556,1094,1.012,1126,5.455,1133,2.522,1237,2.556,1246,5.936,1270,1.729,1417,1.425,1418,1.614,1464,1.934,1481,2.522,1492,1.729,1499,1.729,1545,2.125,1546,2.366,1822,4.638,1853,1.864,1872,2.236,1884,2.236,1966,2.366,2026,2.366,2152,2.125,2168,4.598,2200,2.028,2258,2.522,2270,1.942,2407,3.498,2739,4.016,3006,4.016,3013,2.717,3034,2.717,3123,2.717,3161,2.717,3287,2.717,3288,2.717,3289,5.28,3290,2.717,3291,6.689,3292,5.787,3294,2.978,3295,6.689,3296,2.978,3297,2.978,3298,2.978,3299,4.402,3300,4.402,3302,2.978,3303,4.402,3304,2.978,3306,2.978,3307,2.978,3308,2.978,3309,2.978,3310,2.978,3311,4.402,3312,2.978,3313,4.402,3314,2.717,3315,4.779,3316,4.779,3317,5.238,3318,2.978,3319,2.978,3320,5.28,3321,4.402,3322,2.978,3323,2.978,3324,2.717,3325,2.717,3326,2.978,3327,2.978,3328,2.978,3329,2.978,3330,2.978,3331,2.978,3332,2.978,3333,2.978,3334,2.978,3335,4.402,3336,2.978,3337,2.978,3338,2.978,3339,2.978,3340,2.978,3341,2.522,3342,2.978,3343,4.402,3344,2.978,3345,2.978,3346,2.978,3347,2.978,3348,2.978,3349,2.978,3350,4.402,3351,2.978,3352,2.978,3353,2.978,3354,2.978,3355,6.175,3356,6.465,3357,2.978,3358,4.402,3359,2.978,3360,2.978,3361,2.978,3362,2.978,3363,2.978,3364,2.978]],["title/changelog.html",[3393,2.745,3394,2.745,3395,3.241]],["body/changelog.html",[0,0.115,1,2.03,2,1.971,3,0.028,5,0.074,8,0.341,9,1.397,10,5.178,12,1.8,21,0.282,22,1.904,23,2.337,25,0.343,26,1.257,27,2.03,28,3.808,30,3.685,31,1.79,36,0.757,43,0.133,44,0.007,46,1.145,47,1.196,52,0.357,68,1.274,70,6.976,77,1.397,79,1.749,82,0.411,85,2.967,89,1.274,101,0.325,102,0.268,110,1.444,117,1.397,121,1.257,126,1.183,149,0.224,150,1.563,151,1.049,156,0.035,157,1.274,161,1.123,166,0.472,172,1.31,173,0.971,203,0.303,206,0.631,208,1.183,209,1.11,228,0.005,229,0.003,236,1.397,238,1.397,239,1.828,240,6.231,241,2.204,248,2.543,250,5.423,252,1.183,253,0.452,257,0.911,289,2.395,297,1.11,298,2.187,299,1.274,302,1.049,303,4.752,304,1.971,305,1.274,306,2.991,308,1.274,311,1.183,312,1.183,315,0.668,316,1.796,317,0.537,319,2.502,320,3.685,323,3.406,329,1.596,340,2.247,341,2.665,345,0.997,349,0.946,350,3.884,353,2.053,354,0.997,358,1.049,359,2.364,361,0.874,362,0.421,363,0.997,364,2.998,369,0.499,380,1.183,381,0.665,382,1.049,383,1.049,404,2.249,407,1.11,414,2.804,417,1.828,418,1.383,419,1.633,422,1.858,428,0.997,431,0.997,436,2.862,438,0.614,441,1.049,442,1.114,444,1.274,507,1.392,536,2.502,537,2.406,540,0.997,541,0.997,542,0.811,547,1.257,549,2.806,553,0.911,554,1.633,559,1.183,568,1.183,569,0.757,578,1.183,581,1.274,655,2.03,656,4.476,657,2.187,659,3.884,668,1.8,671,1.274,673,2.187,677,1.64,686,1.183,694,1.274,695,1.274,697,1.904,713,0.649,715,1.183,726,1.898,727,1.11,730,3.876,752,3.387,756,4.586,766,2.435,768,1.392,769,2.105,771,1.971,774,1.633,777,1.8,778,1.049,780,0.783,781,0.841,782,1.8,783,4.142,803,0.911,821,0.951,833,0.911,857,0.841,872,2.247,876,0.551,879,1.392,904,3.162,911,4.298,916,0.997,920,2.249,922,2.666,925,6.153,926,1.274,927,1.501,929,2.03,933,0.911,937,1.554,938,1.72,939,1.898,940,2.543,941,2.44,942,2.54,952,1.183,954,0.874,957,2.03,975,1.183,978,4.063,995,1.463,1021,3.58,1046,0.932,1052,0.811,1086,0.537,1088,0.498,1089,0.855,1097,0.551,1099,2.666,1113,1.397,1127,0.951,1129,0.614,1131,1.397,1181,1.397,1187,2.804,1188,1.904,1191,1.904,1201,4.82,1213,2.03,1214,3.734,1233,0.997,1234,2.187,1241,1.397,1279,0.997,1297,0.874,1298,0.783,1299,2.131,1306,1.11,1324,0.874,1352,1.958,1369,1.84,1376,2.347,1395,2.542,1412,1.686,1422,1.552,1423,1.898,1449,1.563,1459,1.183,1516,1.274,1548,1.397,1619,0.71,1621,1.183,1655,3.559,1664,4.581,1676,1.633,1682,1.501,1687,1.11,1775,1.183,1806,1.274,1810,3.162,1814,1.397,1816,2.187,1825,2.397,1872,4.82,1884,1.8,1945,1.633,1955,1.274,1966,1.904,1969,4.761,1973,0.997,1976,2.666,1982,2.187,2009,3.148,2033,1.397,2034,1.183,2044,1.11,2045,2.03,2065,1.274,2085,2.397,2116,1.397,2127,1.274,2137,1.397,2140,1.397,2152,2.247,2168,1.11,2187,1.11,2211,3.685,2232,1.397,2236,1.397,2238,2.397,2242,1.397,2276,2.872,2277,2.397,2278,2.502,2280,1.397,2356,1.397,2406,3.148,2412,2.397,2416,7.261,2465,2.804,2571,1.397,2573,1.397,2575,2.187,2601,1.397,2624,3.148,2700,3.406,2710,1.397,2790,1.274,2837,1.397,2845,1.274,2846,2.397,2909,2.187,2926,1.397,2983,2.397,2986,1.274,2989,1.397,3049,1.397,3093,4.203,3131,2.397,3175,2.397,3179,3.734,3249,4.476,3290,1.274,3395,2.397,3396,1.583,3397,8.689,3398,7.96,3399,2.397,3400,1.583,3401,1.583,3402,5.197,3403,2.716,3404,1.583,3405,1.397,3406,1.583,3407,1.583,3408,8.54,3409,8.06,3410,1.583,3411,2.716,3412,1.583,3413,1.583,3414,1.583,3415,3.734,3416,6.359,3417,1.583,3418,6.735,3419,2.397,3420,1.583,3421,1.583,3422,1.583,3423,1.583,3424,1.583,3425,2.716,3426,1.583,3427,7.032,3428,6.735,3429,1.583,3430,1.583,3431,5.867,3432,1.583,3433,7.032,3434,1.583,3435,1.583,3436,1.583,3437,1.583,3438,1.583,3439,1.583,3440,1.583,3441,1.583,3442,1.583,3443,1.583,3444,1.583,3445,1.583,3446,1.583,3447,1.397,3448,1.583,3449,1.583,3450,1.583,3451,2.716,3452,1.583,3453,7.713,3454,1.583,3455,1.583,3456,5.867,3457,1.583,3458,6.558,3459,4.231,3460,2.397,3461,1.583,3462,1.583,3463,1.583,3464,1.583,3465,1.583,3466,1.583,3467,1.583,3468,1.583,3469,1.583,3470,1.583,3471,1.583,3472,1.583,3473,1.583,3474,6.082,3475,1.583,3476,1.583,3477,1.583,3478,1.583,3479,1.583,3480,1.583,3481,1.583,3482,1.583,3483,1.583,3484,4.231,3485,2.716,3486,2.716,3487,1.583,3488,1.583,3489,1.583,3490,1.397,3491,1.583,3492,1.583,3493,1.583,3494,1.583,3495,1.583,3496,6.892,3497,1.583,3498,1.583,3499,1.583,3500,6.735,3501,1.583,3502,1.583,3503,1.583,3504,2.716,3505,1.583,3506,2.716,3507,1.583,3508,1.583,3509,6.735,3510,1.583,3511,1.583,3512,1.583,3513,1.583,3514,1.583,3515,1.583,3516,1.583,3517,1.583,3518,5.867,3519,1.583,3520,3.568,3521,1.583,3522,2.716,3523,2.716,3524,2.397,3525,1.583,3526,1.583,3527,2.397,3528,1.583,3529,7.032,3530,3.734,3531,2.716,3532,2.716,3533,1.583,3534,4.231,3535,1.583,3536,2.397,3537,1.583,3538,1.583,3539,1.583,3540,1.583,3541,2.716,3542,1.583,3543,1.583,3544,1.397,3545,1.583,3546,1.583,3547,1.583,3548,1.583,3549,2.716,3550,2.716,3551,1.583,3552,1.583,3553,1.583,3554,2.716,3555,1.583,3556,3.568,3557,2.716,3558,2.716,3559,1.397,3560,2.716,3561,4.231,3562,1.583,3563,3.568,3564,1.583,3565,4.231,3566,1.583,3567,2.716,3568,1.583,3569,4.231,3570,1.583,3571,1.583,3572,3.734,3573,1.397,3574,1.583,3575,1.583,3576,1.583,3577,1.583,3578,1.583,3579,3.568,3580,7.905,3581,2.397,3582,1.583,3583,1.583,3584,5.197,3585,1.583,3586,1.583,3587,1.583,3588,1.583,3589,1.583,3590,1.583,3591,1.583,3592,3.148,3593,2.716,3594,1.583,3595,1.583,3596,1.583,3597,1.583,3598,1.583,3599,1.583,3600,1.583,3601,1.583,3602,1.583,3603,1.583,3604,1.583,3605,5.197,3606,1.583,3607,1.583,3608,1.583,3609,1.583,3610,2.716,3611,1.583,3612,4.762,3613,5.41,3614,1.583,3615,1.583,3616,3.568,3617,1.583,3618,2.716,3619,1.583,3620,3.568,3621,1.583,3622,3.148,3623,1.583,3624,1.583,3625,1.397,3626,1.397,3627,1.583,3628,1.583,3629,1.583,3630,1.583,3631,3.568,3632,1.583,3633,1.583,3634,1.583,3635,1.583,3636,1.583,3637,1.583,3638,1.397,3639,1.583,3640,1.583,3641,1.397,3642,1.583,3643,1.583,3644,5.867,3645,1.397,3646,1.583,3647,1.583,3648,1.583,3649,1.583,3650,4.231,3651,1.583,3652,1.583,3653,2.716,3654,1.583,3655,1.397,3656,2.716,3657,1.583,3658,1.583,3659,1.583,3660,1.397,3661,7.377,3662,2.666,3663,3.568,3664,1.397,3665,1.583,3666,4.762,3667,1.583,3668,1.583,3669,2.716,3670,1.583,3671,1.583,3672,1.583,3673,2.716,3674,3.568,3675,1.583,3676,1.583,3677,1.583,3678,1.274,3679,1.583,3680,3.568,3681,1.397,3682,1.583,3683,1.583,3684,1.583,3685,1.583,3686,1.583,3687,1.583,3688,1.583,3689,1.583,3690,1.397,3691,2.716,3692,1.583,3693,1.583,3694,1.583,3695,1.583,3696,1.397,3697,1.583,3698,1.583,3699,1.583,3700,1.583,3701,1.583,3702,1.583,3703,2.716,3704,1.583,3705,1.583,3706,1.583,3707,6.807,3708,2.716,3709,2.716,3710,2.716,3711,2.716,3712,1.583,3713,1.583,3714,2.716,3715,1.583,3716,1.397,3717,1.583,3718,1.583,3719,1.583,3720,1.583,3721,1.583,3722,1.583,3723,2.716,3724,1.583,3725,1.583,3726,1.583,3727,1.583,3728,1.583,3729,1.583,3730,1.583,3731,1.583,3732,1.583,3733,1.397,3734,1.583,3735,2.716,3736,2.716,3737,2.716,3738,1.583,3739,1.583,3740,2.716,3741,1.583,3742,1.583,3743,1.583,3744,1.583,3745,1.583,3746,1.583,3747,1.583,3748,2.716,3749,2.716,3750,1.583,3751,2.716,3752,2.716,3753,2.716,3754,1.583,3755,1.583,3756,1.583,3757,1.583,3758,1.583,3759,1.583,3760,1.583,3761,1.583,3762,1.583,3763,1.583,3764,1.583,3765,2.716,3766,1.583,3767,1.583,3768,1.397,3769,1.583,3770,1.583,3771,1.583,3772,1.583,3773,1.583,3774,1.583,3775,1.583,3776,1.397,3777,1.583,3778,1.583]],["title/coverage.html",[3779,5.327]],["body/coverage.html",[0,0.249,1,1.736,5,0.065,6,1.87,7,1.87,30,2.477,36,2.571,43,0.195,44,0.009,82,2.004,112,1.736,118,1.629,121,1.075,151,1.539,154,1.629,166,0.403,228,0.004,229,0.004,230,2.05,231,2.05,233,1.428,285,1.736,287,1.447,288,3.009,289,2.228,313,1.463,314,2.354,316,1.41,326,1.629,327,2.99,328,3.505,330,1.463,333,1.396,336,1.629,337,2.067,338,3.562,339,3.769,349,1.873,369,0.776,376,1.01,384,1.736,389,1.736,393,3.289,413,0.981,438,0.9,525,2.05,526,1.87,532,1.629,533,3.505,534,1.449,535,3.505,546,0.952,565,1.736,566,2.05,576,3.776,589,3.009,610,1.87,614,3.009,632,1.736,654,1.87,676,1.736,677,3.413,678,5.042,679,4.017,685,1.736,687,1.87,696,1.87,709,1.736,710,3.289,711,3.505,716,1.736,733,1.01,750,1.87,751,2.05,759,1.463,760,4.101,761,4.088,769,1.237,791,1.463,794,2.414,803,1.337,812,0.926,837,1.463,845,1.463,847,1.463,850,1.463,851,1.463,853,1.463,876,3.194,902,1.87,903,2.05,916,1.463,917,2.05,919,1.629,937,2.311,938,2.278,939,2.143,940,1.396,942,2.027,947,1.736,948,2.05,950,1.736,951,2.05,959,1.87,960,2.05,961,1.87,967,0.981,970,1.629,1021,2.857,1044,2.05,1045,1.01,1047,1.87,1048,1.87,1049,2.05,1101,1.87,1103,2.05,1104,2.05,1105,2.05,1140,1.736,1141,2.793,1184,1.736,1185,1.01,1186,3.505,1187,4.172,1188,4.413,1189,3.505,1190,3.776,1197,1.87,1200,1.87,1201,1.539,1229,1.01,1230,1.87,1231,2.05,1296,1.01,1299,2.416,1300,3.009,1301,2.05,1305,1.539,1325,5.635,1333,1.01,1335,1.01,1336,1.075,1338,1.01,1340,1.042,1342,1.042,1344,1.042,1346,1.042,1349,1.111,1351,1.111,1355,0.981,1357,1.01,1359,1.01,1362,1.01,1367,1.01,1369,1.01,1371,1.01,1374,0.981,1376,0.981,1378,1.01,1381,1.01,1384,1.01,1387,1.01,1390,1.01,1393,0.981,1395,0.9,1396,1.01,1397,1.01,1398,1.042,1400,1.01,1402,1.01,1409,1.01,1411,1.01,1412,1.869,1416,1.075,1417,0.981,1420,1.01,1422,1.626,1425,3.009,1456,2.793,1457,3.009,1489,1.736,1513,1.87,1514,2.05,1545,2.954,1546,3.289,1620,2.05,1655,2.793,1656,1.87,1657,2.05,1693,1.463,1699,1.87,1788,3.009,1789,2.05,1798,3.964,1799,2.05,1902,3.39,1903,2.621,1904,3.009,1914,1.736,1969,1.463,2006,2.05,2007,2.05,2008,2.05,2042,3.009,2043,3.289,2048,2.05,2081,1.87,2082,4.403,2083,2.05,2185,2.05,2211,2.247,2219,1.736,2221,2.621,2228,2.05,2230,2.05,2231,2.05,2239,2.05,2309,3.009,2310,1.87,2433,2.05,2465,4.172,2466,3.289,2467,3.009,2487,1.736,2503,1.87,2552,2.05,2566,1.87,2567,2.05,2598,1.539,2599,1.736,2600,2.05,2608,1.736,2609,2.05,2623,1.87,2648,1.87,2649,1.87,2650,1.87,2725,2.793,2726,2.05,2730,1.736,2759,2.05,2776,1.87,2778,2.477,2833,1.736,2834,1.87,2905,3.776,2912,1.87,2913,1.87,2914,1.87,2925,2.05,2963,1.87,2964,4.413,2965,2.05,2994,2.05,2995,2.05,3134,3.009,3135,1.87,3136,2.05,3155,2.05,3368,1.87,3369,2.05,3415,2.05,3474,2.05,3662,2.793,3779,2.05,3780,1.87,3781,2.323,3782,5.375,3783,7.883,3784,8.905,3785,5.84,3786,5.84,3787,2.05,3788,2.05,3789,2.05,3790,2.05,3791,2.05,3792,2.05,3793,2.323,3794,2.323,3795,7.823,3796,6.294,3797,7.453,3798,3.738,3799,3.738,3800,2.323,3801,4.69,3802,5.375,3803,3.738,3804,4.69,3805,2.323,3806,3.738,3807,3.738,3808,4.744,3809,2.323,3810,2.05,3811,2.05,3812,2.05,3813,2.323,3814,2.323,3815,6.435,3816,2.05,3817,2.05,3818,2.05,3819,2.05,3820,2.05,3821,2.05,3822,2.05,3823,2.323,3824,2.05,3825,2.323,3826,6.294,3827,2.323,3828,4.69,3829,2.05,3830,2.05,3831,4.139,3832,2.05,3833,2.05,3834,2.05,3835,2.323,3836,2.323,3837,2.323,3838,2.323,3839,4.69,3840,2.323,3841,2.323,3842,2.323,3843,2.323,3844,2.323,3845,4.69,3846,2.323,3847,3.738,3848,2.323,3849,2.323,3850,2.05,3851,2.05,3852,2.323,3853,2.323,3854,2.323,3855,2.05,3856,2.05,3857,2.05,3858,2.05,3859,2.05,3860,2.05,3861,2.05,3862,4.139,3863,2.05,3864,2.05,3865,2.05,3866,2.05,3867,2.05,3868,2.05,3869,2.05,3870,1.87,3871,2.05,3872,2.05,3873,2.05,3874,2.05,3875,1.87,3876,1.87,3877,2.05,3878,2.05,3879,2.323,3880,2.323]],["title/dependencies.html",[1089,1.671,3881,3.673]],["body/dependencies.html",[44,0.009,45,4.543,157,5.217,228,0.008,229,0.008,345,4.081,359,5.12,362,1.723,375,0.437,441,4.294,681,4.081,938,2.145,964,4.543,1089,2.04,1468,2.583,1516,5.217,1693,4.866,1884,4.294,3447,5.718,3882,6.48,3883,9.028,3884,6.48,3885,7.726,3886,6.48,3887,5.718,3888,7.726,3889,6.48,3890,6.48,3891,6.48,3892,6.48,3893,6.48,3894,6.48,3895,6.48,3896,6.48,3897,6.48,3898,6.48,3899,6.48,3900,6.48,3901,6.48,3902,6.48,3903,6.48]],["title/miscellaneous/enumerations.html",[3904,2.208,3905,4.684]],["body/miscellaneous/enumerations.html",[3,0.131,14,3.678,25,0.497,44,0.009,47,1.659,228,0.007,229,0.007,287,0.963,317,2.078,337,1.949,381,1.031,428,4.701,547,2.833,549,2.926,760,3.253,761,4.295,769,2.666,832,4.701,833,4.295,834,4.701,835,4.947,836,4.486,935,5.578,937,2.957,938,2.666,939,3.21,941,4.126,1299,3.439,1412,3.427,1545,3.854,1546,5.233,1822,5.338,2043,5.879,2168,4.291,2778,4.947,2795,6.587,2796,6.009,2942,6.587,3314,4.927,3315,4.927,3316,6.009,3904,3.678,3905,5.4,3906,6.751]],["title/miscellaneous/functions.html",[3341,3.967,3904,2.208]],["body/miscellaneous/functions.html",[8,1.696,25,0.419,26,2.387,31,1.339,43,0.626,44,0.009,45,3.616,46,1.64,47,1.489,72,1.889,92,2.216,97,4.152,98,4.152,100,1.953,101,1.618,102,1.336,125,3.418,161,2.11,203,1.424,228,0.007,229,0.007,242,4.028,253,1.473,310,1.782,314,5.145,315,3.535,325,2.748,352,3.702,353,4.906,360,5.22,404,2.741,424,2.849,447,5.008,583,3.1,655,3.854,688,4.152,713,2.115,876,1.797,1074,5.008,1234,5.396,1305,4.442,1592,3.616,1693,5.145,1699,5.994,1969,4.221,2115,6.346,2476,4.551,2570,4.551,2845,4.152,2986,4.152,3320,5.994,3341,3.854,3405,4.551,3524,4.551,3613,4.551,3645,4.551,3855,4.551,3856,5.914,3857,6.57,3858,4.551,3859,5.914,3860,5.914,3861,6.57,3862,6.57,3863,5.914,3864,6.57,3865,5.914,3866,6.57,3867,6.956,3868,5.914,3869,4.551,3870,5.396,3871,5.914,3872,4.551,3873,5.914,3874,5.914,3875,4.152,3876,5.396,3877,5.914,3878,4.551,3904,3.1,3907,5.157,3908,5.157,3909,5.157,3910,5.157,3911,5.157,3912,7.445,3913,4.551,3914,5.157,3915,6.702,3916,5.157,3917,5.157,3918,5.157,3919,5.157,3920,5.157,3921,5.157,3922,5.157,3923,5.157,3924,5.157,3925,5.157,3926,5.157,3927,5.157,3928,5.157,3929,5.157,3930,5.157,3931,5.157,3932,4.551,3933,5.157,3934,5.157,3935,5.157,3936,5.157,3937,6.702,3938,6.702,3939,5.157,3940,5.914,3941,5.157,3942,5.157,3943,5.157,3944,5.157]],["title/index.html",[25,0.298,3393,2.745,3394,2.745]],["body/index.html",[5,0.078,14,2.685,22,3.132,23,2.468,28,2.468,44,0.009,47,0.814,72,1.008,80,3.338,82,1.16,83,3.596,85,3.132,123,2.813,125,2.96,135,3.942,161,1.407,166,0.776,209,3.132,228,0.006,229,0.006,235,5.374,240,4.859,248,2.685,252,3.338,292,3.505,317,1.517,318,3.338,320,2.685,341,2.813,361,4.44,363,2.813,392,2.685,404,3.237,405,2.96,416,4.903,418,2.686,422,1.597,431,2.813,432,2.813,436,2.685,443,3.596,446,3.596,447,4.551,449,3.596,584,5.579,730,3.505,766,2.571,821,2.685,942,1.685,1030,4.551,1046,0.984,1126,3.66,1127,4.165,1130,5.374,1133,3.338,1201,2.96,1203,5.218,1246,2.96,1454,5.579,1664,4.551,1682,3.364,1693,2.813,1858,3.942,1968,3.942,1969,3.836,2044,3.132,2162,3.942,2276,4.903,2419,3.942,2531,3.942,2568,3.596,2575,5.579,2844,3.942,2847,3.942,2849,3.942,2981,3.942,3172,3.942,3177,3.942,3249,3.596,3284,5.374,3393,3.338,3394,4.551,3419,3.942,3460,3.942,3530,3.942,3544,5.374,3572,3.942,3581,3.942,3622,3.942,3626,3.942,3638,3.942,3641,3.942,3660,3.942,3664,3.942,3678,3.596,3681,3.942,3690,3.942,3696,3.942,3716,3.942,3776,3.942,3780,3.596,3783,3.942,3887,3.942,3932,3.942,3945,4.467,3946,6.09,3947,4.467,3948,4.467,3949,4.467,3950,4.467,3951,6.09,3952,4.467,3953,4.467,3954,4.467,3955,4.467,3956,4.467,3957,4.467,3958,7.442,3959,6.929,3960,4.467,3961,4.467,3962,4.467,3963,4.467,3964,4.467,3965,4.467,3966,6.09,3967,4.467,3968,6.09,3969,8.037,3970,4.467,3971,6.09,3972,4.467,3973,4.467,3974,4.467,3975,6.09,3976,4.467,3977,6.09,3978,4.467,3979,4.467,3980,4.467,3981,4.467,3982,4.467,3983,4.467,3984,4.467,3985,4.467,3986,4.467,3987,8.225,3988,6.929,3989,4.467,3990,4.467,3991,4.467,3992,4.467,3993,6.929,3994,6.929,3995,6.09,3996,4.467,3997,4.467,3998,6.09,3999,6.09,4000,4.467,4001,4.467,4002,6.09,4003,8.037,4004,4.467,4005,4.467,4006,6.929,4007,4.467,4008,4.467,4009,4.467,4010,4.467,4011,4.467,4012,4.467,4013,4.467,4014,4.467,4015,4.467,4016,4.467,4017,6.929,4018,4.467,4019,6.09,4020,4.467,4021,8.586,4022,7.442,4023,4.467,4024,4.467,4025,4.467,4026,6.929,4027,4.467,4028,4.467,4029,4.467,4030,4.467,4031,4.467,4032,4.467,4033,4.467,4034,4.467,4035,6.09,4036,4.467,4037,4.467,4038,4.467,4039,4.467,4040,4.467,4041,4.467,4042,4.467,4043,4.467,4044,4.467,4045,4.467,4046,6.09,4047,4.467,4048,3.942,4049,4.467,4050,6.929,4051,4.467,4052,4.467,4053,4.467,4054,4.467,4055,4.467,4056,6.09,4057,8.225,4058,7.442,4059,6.09,4060,6.09,4061,4.467,4062,4.467,4063,4.467,4064,3.942,4065,4.467,4066,4.467,4067,3.942,4068,4.467,4069,4.467,4070,4.467,4071,4.467,4072,4.467,4073,4.467,4074,4.467,4075,4.467,4076,4.467,4077,4.467,4078,4.467]],["title/license.html",[3393,2.745,3394,2.745,4079,3.241]],["body/license.html",[17,2.889,44,0.008,109,4.376,111,3.317,125,4.136,228,0.008,229,0.008,297,5.297,361,3.448,405,4.136,640,5.025,768,3.198,1094,1.871,1204,5.025,1464,2.419,1515,6.666,1522,6.666,1831,5.508,3573,5.508,3655,5.508,3707,5.508,3780,5.025,4048,7.169,4064,7.97,4067,5.508,4079,5.508,4080,6.241,4081,8.123,4082,6.241,4083,6.241,4084,7.554,4085,6.241,4086,6.241,4087,6.241,4088,6.241,4089,6.241,4090,6.241,4091,6.241,4092,6.241,4093,7.554,4094,6.241,4095,6.241,4096,6.241,4097,6.241,4098,6.241,4099,6.241,4100,6.241,4101,6.241,4102,6.241,4103,6.241,4104,7.554,4105,7.554,4106,6.241,4107,6.241,4108,6.241,4109,6.241,4110,6.241,4111,6.241,4112,6.241,4113,6.241,4114,6.241,4115,6.241,4116,6.241,4117,6.241,4118,6.241,4119,6.241,4120,6.241,4121,6.241,4122,6.241,4123,6.241,4124,6.241,4125,6.241,4126,6.241,4127,6.241,4128,6.241,4129,6.241,4130,6.241]],["title/modules.html",[1088,1.901]],["body/modules.html",[44,0.007,228,0.007,229,0.007,1087,4.165,1088,1.871,1223,3.571,1290,4.165,1506,4.165,1539,4.439,1611,4.165,1649,4.439,1693,5.882,1724,8.241,1782,4.439,1969,5.882,1987,4.165,2187,4.165,2192,4.165,2193,4.165,2194,3.571,2195,4.165,2196,4.165,2557,4.439,2716,4.439,2765,4.439,2772,4.165,2828,4.439,2869,4.439,2881,4.439,2901,4.439,2959,4.439,3126,4.165,4131,9.338]],["title/overview.html",[4132,5.327]],["body/overview.html",[2,1.867,44,0.009,228,0.005,229,0.005,286,1.209,413,3.202,418,1.31,438,1.31,546,3.11,659,2.526,723,1.564,733,3.299,812,2.368,967,3.202,995,1.038,1045,3.299,1046,0.745,1087,5.14,1088,1.064,1089,1.573,1090,2.983,1091,2.983,1092,2.983,1093,1.696,1094,1.013,1102,1.796,1185,3.299,1223,4.778,1224,2.983,1225,2.983,1226,2.983,1229,3.299,1290,5.14,1291,2.983,1292,2.983,1293,2.983,1296,2.584,1333,2.584,1335,2.584,1336,3.51,1338,3.299,1340,3.401,1342,3.401,1344,3.401,1346,3.401,1355,3.202,1357,3.299,1359,3.299,1362,3.299,1367,3.299,1371,3.299,1374,3.202,1378,3.299,1381,3.299,1384,3.299,1387,3.299,1390,3.299,1393,3.202,1397,3.299,1400,3.299,1402,3.299,1409,3.299,1411,3.299,1417,3.202,1420,3.299,1506,5.14,1507,2.983,1508,2.983,1509,2.983,1539,5.233,1540,2.983,1541,2.983,1542,2.983,1611,5.317,1612,2.983,1613,2.983,1614,2.983,1649,5.233,1650,2.983,1651,2.983,1652,2.983,1782,5.233,1783,2.983,1784,2.983,1785,2.983,1872,2.24,1987,5.14,1988,2.983,1989,2.983,1990,2.983,2187,6.479,2188,2.983,2189,2.983,2190,2.983,2191,2.983,2192,5.14,2193,5.459,2194,4.778,2195,5.88,2196,5.14,2300,2.983,2301,2.983,2302,2.983,2425,2.983,2426,2.983,2428,2.983,2557,5.233,2558,2.983,2559,2.983,2560,2.983,2593,2.983,2594,2.983,2595,2.983,2598,5.026,2716,5.667,2717,2.983,2719,2.983,2720,2.983,2765,5.941,2766,2.983,2767,2.983,2768,2.983,2772,4.91,2773,2.983,2774,2.983,2775,2.983,2828,5.667,2829,2.983,2830,2.983,2831,2.983,2869,5.233,2870,2.983,2871,2.983,2872,2.983,2881,5.233,2882,2.983,2883,2.983,2884,2.983,2901,5.478,2902,2.983,2903,2.983,2959,5.667,2960,2.983,2961,2.983,2962,2.983,3124,2.983,3125,2.983,3126,5.14,3365,2.983,3366,2.983,3367,2.983,3388,2.983,3389,2.983,3390,2.983,3399,2.983,3592,2.983,3662,2.526,4132,2.983,4133,3.38]],["title/miscellaneous/typealiases.html",[3904,2.208,4134,5.308]],["body/miscellaneous/typealiases.html",[6,4.601,7,5.761,25,0.464,28,3.953,43,0.723,44,0.009,46,1.259,47,1.305,51,3.038,56,3.435,116,6.315,203,1.093,206,2.278,226,3.54,228,0.007,229,0.007,287,1.389,327,2.344,337,1.732,338,3.788,339,5.477,340,3.6,341,3.6,345,3.6,347,5.761,356,5.347,378,3.112,379,4.007,380,4.271,393,3.79,526,5.761,531,4.271,534,2.774,583,4.301,677,3.42,678,4.507,679,6.118,682,5.761,683,5.347,684,5.838,760,3.038,761,4.118,843,4.742,906,3.6,938,2.586,961,5.761,1127,3.435,1129,2.215,1141,4.271,1182,5.761,1676,3.435,2027,6.315,2278,4.007,2623,5.761,2654,6.315,2833,4.271,2834,5.761,2848,6.315,3008,6.315,3010,5.044,3046,6.315,3870,5.761,3875,4.601,3876,5.761,3904,3.435,3906,7.104,3913,5.044,3940,6.315,4135,5.715,4136,5.715,4137,7.155,4138,5.715,4139,5.715,4140,7.155,4141,5.715,4142,5.715,4143,5.715,4144,5.044,4145,5.715,4146,5.715,4147,5.715,4148,5.715,4149,5.715]],["title/miscellaneous/variables.html",[3904,2.208,4150,4.684]],["body/miscellaneous/variables.html",[3,0.043,23,2.683,25,0.199,31,0.635,43,0.735,44,0.009,45,4.919,46,1.98,47,1.644,52,1.582,72,1.095,79,1.431,80,1.829,86,1.97,100,1.203,110,2.071,158,1.713,161,1.227,166,1.119,173,1.394,200,0.875,203,1.495,206,2.568,221,3.424,224,1.301,228,0.004,229,0.004,258,0.682,287,1.138,289,1.473,292,1.408,301,1.97,310,1.036,317,0.831,318,1.829,327,1.003,336,1.716,337,1.175,338,1.622,339,3.405,349,0.852,350,1.829,356,1.829,369,0.22,381,0.709,382,2.583,383,2.583,384,2.912,385,1.97,388,1.829,389,2.912,390,3.91,391,1.97,392,2.919,393,3.128,399,1.301,404,1.301,414,1.622,417,1.254,425,2.089,432,1.541,442,1.992,531,1.829,537,2.48,579,2.342,676,1.829,677,3.166,678,2.454,679,4.139,680,1.97,682,1.97,683,1.829,684,1.829,685,3.629,686,1.829,687,3.138,688,4.869,689,3.439,690,2.159,691,2.159,692,1.97,693,2.159,694,1.97,695,1.97,696,3.138,697,2.732,698,2.159,699,3.439,700,2.159,701,3.439,702,3.439,703,1.829,704,2.159,705,2.159,706,2.159,707,2.159,708,2.159,710,1.716,711,2.912,713,1.598,715,1.829,716,2.912,717,1.97,723,2.982,760,2.071,761,3.48,766,1.408,767,1.622,769,1.29,771,3.733,774,1.471,783,1.471,791,2.454,832,1.541,833,1.408,834,1.541,837,2.454,838,1.622,839,1.622,840,1.541,841,1.622,842,1.622,847,2.454,848,1.622,849,1.622,851,2.454,857,1.301,876,2.444,907,1.352,912,2.159,918,1.829,927,2.683,978,1.622,1021,2.944,1099,1.829,1141,1.829,1182,1.97,1183,1.97,1184,2.912,1186,1.829,1187,4.008,1188,4.517,1189,1.829,1190,3.91,1191,1.716,1197,3.91,1200,3.138,1201,3.219,1202,2.159,1203,1.716,1204,1.97,1205,2.159,1206,2.159,1207,2.159,1208,2.159,1209,2.159,1210,1.97,1211,3.439,1212,1.97,1213,1.829,1257,1.716,1305,5.249,1324,2.683,1326,2.454,1329,1.003,1352,1.133,1369,1.064,1398,1.097,1441,2.159,1443,3.439,1446,6.38,1455,1.829,1483,1.97,1621,4.139,1872,4.27,1902,1.408,1948,2.159,1974,1.541,1985,4.139,2082,1.829,2145,2.159,2221,1.716,2309,3.138,2310,3.138,2465,3.219,2466,1.716,2467,3.138,2503,3.138,2598,1.622,2599,2.912,2648,3.138,2649,3.138,2650,3.138,2655,3.439,2704,4.286,2705,3.439,2706,3.439,2707,2.159,2776,1.97,2905,4.459,2912,3.138,2913,3.138,2914,3.138,2964,2.732,3490,2.159,3527,2.159,3536,2.159,3559,2.159,3625,6.539,3662,1.829,3678,3.138,3733,2.159,3768,2.159,3785,2.159,3786,6.191,3787,4.286,3788,4.286,3789,4.286,3790,3.439,3791,4.286,3792,3.439,3808,4.887,3810,3.439,3811,3.439,3812,3.439,3815,6.676,3816,5.337,3817,3.439,3818,4.286,3819,3.439,3820,4.286,3821,3.439,3822,4.286,3824,2.159,3829,3.439,3830,3.439,3831,4.887,3832,3.439,3833,3.439,3834,3.439,3850,2.159,3851,3.439,3904,1.471,3906,7.095,4144,2.159,4150,2.159,4151,6.757,4152,2.447,4153,2.447,4154,3.897,4155,6.442,4156,2.447,4157,3.897,4158,2.447,4159,2.447,4160,2.447,4161,3.897,4162,2.447,4163,2.447,4164,2.447,4165,2.447,4166,2.447,4167,2.447,4168,2.447,4169,2.447,4170,2.447,4171,2.447,4172,2.447,4173,2.447,4174,2.447,4175,2.447,4176,2.447,4177,2.447,4178,2.447,4179,2.447,4180,2.447,4181,2.447,4182,2.447,4183,2.447,4184,2.447,4185,3.897,4186,2.447,4187,2.447,4188,2.447,4189,2.447,4190,2.447,4191,2.447,4192,2.447,4193,2.447,4194,2.447,4195,2.447,4196,2.447,4197,2.447,4198,2.447,4199,2.447,4200,2.447,4201,2.447,4202,2.447,4203,2.447,4204,7.699,4205,2.447,4206,2.447,4207,2.447,4208,2.447,4209,3.897,4210,2.447,4211,2.447,4212,4.856,4213,4.856,4214,3.897,4215,2.447,4216,3.897,4217,3.897,4218,4.856,4219,3.897,4220,2.447,4221,2.447,4222,2.447,4223,5.538,4224,2.447,4225,2.447,4226,3.897,4227,2.447,4228,2.447,4229,2.447,4230,2.447,4231,2.447,4232,2.447,4233,2.447,4234,2.447,4235,5.538,4236,4.856,4237,4.856,4238,2.447,4239,2.447,4240,2.447,4241,2.447,4242,2.447,4243,2.447,4244,2.447,4245,2.447,4246,2.447,4247,3.897,4248,3.897,4249,2.447,4250,2.447,4251,2.447,4252,2.447,4253,2.447,4254,2.447,4255,2.447,4256,2.447,4257,2.447]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":876,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["0).pipe(delay(50",{"_index":1137,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["0,0",{"_index":3334,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["0.11.4",{"_index":3903,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":4185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.25",{"_index":1445,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["0.5.39",{"_index":3893,"title":{},"body":{"dependencies.html":{}}}],["0.55",{"_index":4184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":3784,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3841,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":3823,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3796,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3800,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3782,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3826,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3807,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3798,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3845,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3839,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3837,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":60,"title":{},"body":{"classes/EventGenerator.html":{}}}],["1",{"_index":723,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiDragAndDropFileDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSuggestIntl.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.14.7",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["1.15.2",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["1.3.5",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["1.3.8",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["1.35em",{"_index":2898,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["1/1",{"_index":3795,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3849,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3844,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3840,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3805,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1872,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.2",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["10/10",{"_index":3799,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":3836,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1325,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["10000",{"_index":388,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiSnackBarModule.html":{},"miscellaneous/variables.html":{}}}],["107",{"_index":448,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["10em",{"_index":2405,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["10px",{"_index":2411,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"components/UiSnackBarComponent.html":{}}}],["10}px",{"_index":74,"title":{},"body":{"classes/EventGenerator.html":{}}}],["11",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":3835,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":3474,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["12.1.2",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["12.2.5",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":2423,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["13",{"_index":659,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{},"overview.html":{}}}],["13/14",{"_index":3843,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":3415,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["14.2.12",{"_index":3883,"title":{},"body":{"dependencies.html":{}}}],["14.2.7",{"_index":3885,"title":{},"body":{"dependencies.html":{}}}],["14.5px",{"_index":2897,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["140px",{"_index":2272,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["14px",{"_index":1960,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["15",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":655,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["17",{"_index":656,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{}}}],["17/18",{"_index":3794,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":657,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{}}}],["19",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":2698,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["2",{"_index":1454,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"index.html":{}}}],["2.0.2",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["2.0.3",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["2.0.8",{"_index":3890,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":3895,"title":{},"body":{"dependencies.html":{}}}],["2.2.28",{"_index":3897,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["2.29.4",{"_index":3447,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.1",{"_index":3899,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":1639,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["2.6.3",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["2.6.4",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["2/2",{"_index":3797,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":3848,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["200ms",{"_index":1442,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["2019",{"_index":3707,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["20px",{"_index":63,"title":{},"body":{"classes/EventGenerator.html":{},"components/UiTreeSelectComponent.html":{}}}],["21",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["210px",{"_index":2422,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["22",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["222",{"_index":4205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["222!important",{"_index":4226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22px",{"_index":1438,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["23",{"_index":3399,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["24",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1959,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["25",{"_index":3662,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["250",{"_index":4232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25ms",{"_index":4252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":3179,"title":{},"body":{"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["27",{"_index":673,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{}}}],["28",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":3592,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2px",{"_index":2705,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["2}px",{"_index":1633,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["3",{"_index":1483,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"miscellaneous/variables.html":{}}}],["3/3",{"_index":3804,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1814,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"changelog.html":{}}}],["30/31",{"_index":3814,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":4194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300ms",{"_index":4182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30px",{"_index":2699,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["31",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":669,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["32px",{"_index":1958,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["333!important",{"_index":4216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":661,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["38",{"_index":667,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["39",{"_index":665,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["3px",{"_index":2424,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["4.17.21",{"_index":3892,"title":{},"body":{"dependencies.html":{}}}],["4.4.15",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["4.4.8",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":3802,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":3846,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":3825,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":663,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["4300",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":3824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["48",{"_index":4195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49/63",{"_index":3809,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":1952,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["5",{"_index":4133,"title":{},"body":{"overview.html":{}}}],["5/20",{"_index":3838,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":3806,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3853,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3847,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":2055,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["5000",{"_index":3943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["56px",{"_index":1954,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["5px",{"_index":2715,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["6",{"_index":4239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6/6",{"_index":3828,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":3827,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":3382,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["61",{"_index":721,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["64",{"_index":2060,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["64px",{"_index":1956,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["65",{"_index":612,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["65/65",{"_index":3854,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":648,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["666!important",{"_index":4230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66bb6a!important",{"_index":4221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["67",{"_index":642,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["67px",{"_index":2413,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["68",{"_index":617,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["69",{"_index":592,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["6px",{"_index":1953,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["7",{"_index":1474,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"components/UiTreeSelectComponent.html":{}}}],["7.0.1",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["7.5.7",{"_index":3896,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":3801,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":3803,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":620,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["71",{"_index":623,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["72",{"_index":626,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["73",{"_index":604,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["74",{"_index":629,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["75",{"_index":632,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"components/UiPasswordIndicatorComponent.html":{},"coverage.html":{}}}],["76",{"_index":634,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["77",{"_index":654,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"coverage.html":{}}}],["78",{"_index":651,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["79",{"_index":607,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["7em",{"_index":1983,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["8",{"_index":675,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["80",{"_index":610,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"coverage.html":{}}}],["80px",{"_index":2896,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["81",{"_index":586,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["82",{"_index":595,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["83",{"_index":614,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"coverage.html":{}}}],["84",{"_index":597,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["85",{"_index":602,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["86",{"_index":645,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["87",{"_index":589,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"coverage.html":{}}}],["88",{"_index":639,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["89",{"_index":599,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["8px",{"_index":1948,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":671,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{}}}],["9.0.0",{"_index":3901,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["9/9",{"_index":3852,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":637,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["900",{"_index":4233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92",{"_index":3842,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":3793,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":3813,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":2234,"title":{},"body":{"directives/UiGridRowConfigDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_absolutetime",{"_index":466,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_additionaloptions",{"_index":860,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["_addsafebuffer(start",{"_index":3360,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["_adjustloadingrange",{"_index":3353,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["_alert(type",{"_index":888,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["_alertfactory",{"_index":882,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["_announcechanges",{"_index":2687,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["_announcenext",{"_index":1122,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["_announcer",{"_index":2633,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["_applybuffervalue",{"_index":2822,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["_applycolor",{"_index":2818,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["_applyloading",{"_index":2826,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["_applymode",{"_index":2824,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["_applyvalue",{"_index":2820,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["_ariadescriber",{"_index":2477,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_autofocus",{"_index":1267,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["_buttonelement",{"_index":2443,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_buttons",{"_index":2073,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["_calculatepercentage",{"_index":2678,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["_cd",{"_index":477,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_cdkvirtualforof",{"_index":3323,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["_change",{"_index":1580,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["_checker",{"_index":1269,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["_clickservice",{"_index":1500,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["_clipboard",{"_index":1528,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["_columns",{"_index":973,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["_componentfactory",{"_index":2435,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_componentportal",{"_index":813,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["_container",{"_index":1556,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["_context",{"_index":2584,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["_createloader",{"_index":2461,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_createmattooltip",{"_index":2527,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_currentindex",{"_index":2361,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["_currentindex(i",{"_index":2364,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["_customkeydownhandle(eventkey",{"_index":3266,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["_datasource",{"_index":3235,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["_date",{"_index":474,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_defaultoptions",{"_index":2484,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_destroy",{"_index":3375,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["_destroyed",{"_index":1492,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiFormatDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["_destroyspinner",{"_index":1609,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["_dir",{"_index":2482,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_direction",{"_index":3083,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_disposalcallbacks",{"_index":1703,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_document",{"_index":2486,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["_doifchange",{"_index":2464,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_el",{"_index":1268,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"components/UiTreeItemComponent.html":{}}}],["_element",{"_index":2868,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["_elementref",{"_index":1705,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_elemref",{"_index":2470,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_eltref",{"_index":1529,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["_emitfiles(files",{"_index":1758,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_emitifchanged",{"_index":1606,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["_errorstatematcher",{"_index":3089,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_evaluate",{"_index":496,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_excludedspecfn",{"_index":3787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_excludedspecfn?.call(null",{"_index":4158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_fileinput",{"_index":1704,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_filtertouchedrange",{"_index":3348,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["_fit",{"_index":4177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_fit.bind(null",{"_index":4180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_focusedspecfn",{"_index":3788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_focusedspecfn?.call(null",{"_index":4156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_focusmonitor",{"_index":2479,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_focusonreset",{"_index":2398,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["_formfieldappearance",{"_index":1909,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["_getfocusablenode(el",{"_index":1284,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["_getkey(key",{"_index":220,"title":{},"body":{"classes/EventGenerator.html":{}}}],["_id",{"_index":2674,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["_idx",{"_index":3205,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["_initial",{"_index":974,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["_initialize",{"_index":2457,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_initialselection",{"_index":3238,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["_injector",{"_index":827,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["_intl",{"_index":1910,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"components/UiPasswordToggleComponent.html":{}}}],["_intl.getpagelabel(pageindex+1",{"_index":1940,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["_intl.getrangelabel(pageindex",{"_index":1938,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["_intl.itemsperpagelabel",{"_index":1941,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["_isannouncing",{"_index":1117,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["_isarrowdown(e",{"_index":2396,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["_isarrowup(e",{"_index":2394,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["_isdifferentvalue",{"_index":521,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_isdragging",{"_index":1702,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_isfirstvalidindex",{"_index":2366,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["_isformcontrol",{"_index":3086,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_isrelative",{"_index":517,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_isresetindex",{"_index":2370,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["_isvalidrange",{"_index":3351,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["_isvisible",{"_index":2741,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["_it",{"_index":4176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_it.bind(null",{"_index":4179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_items",{"_index":3084,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_key(type",{"_index":202,"title":{},"body":{"classes/EventGenerator.html":{}}}],["_keyinshortcut",{"_index":1084,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["_keymanager",{"_index":3230,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["_labelelement",{"_index":2512,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_lastabsolutetime",{"_index":470,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_lastcontenttype",{"_index":472,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_lastrelativetime",{"_index":471,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_lasttitletype",{"_index":473,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_liveannouncer",{"_index":1110,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["_loader",{"_index":2440,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_loaderelement",{"_index":2441,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_loaderref",{"_index":2442,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_loading",{"_index":1579,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["_mapcolumnoption",{"_index":1007,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["_mapdirtystate",{"_index":2675,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["_mapinitial",{"_index":1013,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["_mapoptions",{"_index":1015,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["_maptorenderedoptions",{"_index":1024,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["_maptovisiblediff",{"_index":1012,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["_mapvisiblerules",{"_index":2683,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["_matcontrolsubscription",{"_index":2510,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_matpaginatorbase",{"_index":1905,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["_msgqueue",{"_index":1116,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["_ngzone",{"_index":2474,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_ondragend",{"_index":1755,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_ondragenter(ev",{"_index":1757,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_ondragleave(ev",{"_index":1753,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_ondragover(ev",{"_index":1748,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_ondrop(ev",{"_index":1744,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_onkeydown",{"_index":2388,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["_options",{"_index":476,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["_overlay",{"_index":2489,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_parentform",{"_index":3090,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_parentformgroup",{"_index":3091,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_placeholder",{"_index":3087,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_platform",{"_index":2475,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_pressedkeys",{"_index":1077,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["_preventall(ev",{"_index":1779,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_prevententeronchildren(element",{"_index":1772,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["_primary",{"_index":1889,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["_redraw",{"_index":1795,"title":{},"body":{"directives/UiFormatDirective.html":{}}}],["_ref",{"_index":854,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiContentLoaderDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["_registerwatcher",{"_index":2459,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_relativetime",{"_index":461,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_render",{"_index":1590,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["_renderer",{"_index":1706,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["_required",{"_index":3088,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_resolver",{"_index":1559,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["_reverseindex",{"_index":3352,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["_scrolldispatcher",{"_index":2471,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_scrollstrategy",{"_index":2481,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_seconds",{"_index":737,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["_selected",{"_index":2371,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["_selectinitialnode",{"_index":3273,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["_snackbar",{"_index":855,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["_snackintl",{"_index":858,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["_sortitems",{"_index":3120,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_specfn",{"_index":3789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_specfn?.call(null",{"_index":4159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_spinner",{"_index":1578,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["_state",{"_index":2036,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["_templateref",{"_index":2589,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["_text",{"_index":460,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["_timefortype",{"_index":520,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_timefortypechanged",{"_index":518,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_togglevisibiltystate",{"_index":2755,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["_tooltip",{"_index":2511,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_total",{"_index":3376,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["_treecontrol",{"_index":3231,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["_triminterval(start",{"_index":3363,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["_updatecontent",{"_index":505,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_updatedisabletooltipproperty(matcontrol",{"_index":2522,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_updatespinner",{"_index":1597,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["_updatetitle",{"_index":513,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["_value",{"_index":3085,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["_vcr",{"_index":2588,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["_viewcontainerref",{"_index":2473,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["_viewport",{"_index":3325,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["_visible",{"_index":1888,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["_watchers",{"_index":2446,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["_width",{"_index":1886,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["_xit",{"_index":4178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_xit.bind(null",{"_index":4181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_zone",{"_index":478,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["a11y",{"_index":1201,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["a11ymodule",{"_index":2198,"title":{},"body":{"modules/UiGridModule.html":{}}}],["aaa",{"_index":4206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ability",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":3655,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":56,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["abstract",{"_index":1794,"title":{},"body":{"directives/UiFormatDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["abstractcontrol",{"_index":680,"title":{},"body":{"interfaces/IRegexLike.html":{},"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["accent",{"_index":2788,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["accept",{"_index":1714,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["accepted",{"_index":1678,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["acceptedextensions",{"_index":1760,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["acceptedextensions.some(extension",{"_index":1766,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["accepts",{"_index":1680,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["accesed",{"_index":264,"title":{},"body":{"classes/FakeFileList.html":{}}}],["accessible",{"_index":1188,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":35,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiNgLetDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["account",{"_index":3299,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["action",{"_index":768,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{},"license.html":{}}}],["action'},{'name",{"_index":1389,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["action.directive",{"_index":2215,"title":{},"body":{"modules/UiGridModule.html":{}}}],["action.directive.ts",{"_index":2230,"title":{},"body":{"directives/UiGridRowActionDirective.html":{},"coverage.html":{}}}],["actionbuttons",{"_index":2070,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["actionmessage",{"_index":762,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["actions",{"_index":1982,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["active",{"_index":123,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiSuggestIntl.html":{},"index.html":{}}}],["activedescendant",{"_index":4173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activefilters",{"_index":2174,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["activeindex",{"_index":3277,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["activenode",{"_index":3241,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["actual_component",{"_index":1424,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["add",{"_index":240,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/ISelectionDiff.html":{},"components/UiGridToggleColumnsComponent.html":{},"changelog.html":{},"index.html":{}}}],["add(...files",{"_index":255,"title":{},"body":{"classes/FakeFileList.html":{}}}],["added",{"_index":257,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{}}}],["adding",{"_index":1487,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["additional",{"_index":787,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["adds",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":3976,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["adjustments",{"_index":2408,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["advantage",{"_index":3986,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":1659,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiTreeSelectComponent.html":{}}}],["agent",{"_index":3937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aims",{"_index":15,"title":{},"body":{"classes/EventGenerator.html":{}}}],["alert",{"_index":786,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["aliases",{"_index":4135,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1973,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["allmet",{"_index":2610,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["allow",{"_index":2276,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{},"index.html":{}}}],["allowed",{"_index":2248,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["allowedattrs",{"_index":4171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allows",{"_index":2568,"title":{},"body":{"directives/UiNgLetDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"index.html":{}}}],["alongside",{"_index":3288,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["already",{"_index":2981,"title":{},"body":{"injectables/UiSuggestIntl.html":{},"index.html":{}}}],["alt",{"_index":580,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"injectables/UiGridIntl.html":{}}}],["alternate",{"_index":2412,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"changelog.html":{}}}],["alternative",{"_index":2150,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["altkey",{"_index":215,"title":{},"body":{"classes/EventGenerator.html":{}}}],["always",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":4098,"title":{},"body":{"license.html":{}}}],["angular",{"_index":730,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":3882,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3884,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":1115,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiGridModule.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["angular/cdk/bidi",{"_index":2497,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["angular/cdk/collections",{"_index":3312,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["angular/cdk/overlay",{"_index":2498,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["angular/cdk/platform",{"_index":2499,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["angular/cdk/portal",{"_index":793,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{}}}],["angular/cdk/scrolling",{"_index":2200,"title":{},"body":{"modules/UiGridModule.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["angular/cdk/tree",{"_index":1170,"title":{},"body":{"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{}}}],["angular/common",{"_index":1468,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":3886,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":375,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":681,"title":{},"body":{"interfaces/IRegexLike.html":{},"components/UiGridSearchComponent.html":{},"modules/UiGridSearchModule.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3887,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/material/button",{"_index":1993,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSnackBarModule.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["angular/material/checkbox",{"_index":2202,"title":{},"body":{"modules/UiGridModule.html":{},"modules/UiSuggestModule.html":{}}}],["angular/material/chips",{"_index":3129,"title":{},"body":{"modules/UiSuggestModule.html":{}}}],["angular/material/core",{"_index":3045,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{}}}],["angular/material/divider",{"_index":2431,"title":{},"body":{"modules/UiGridToggleColumnsModule.html":{}}}],["angular/material/form",{"_index":1924,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridSearchModule.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["angular/material/icon",{"_index":2204,"title":{},"body":{"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSuggestModule.html":{}}}],["angular/material/input",{"_index":2307,"title":{},"body":{"modules/UiGridSearchModule.html":{},"modules/UiSuggestModule.html":{}}}],["angular/material/list",{"_index":2723,"title":{},"body":{"modules/UiPasswordIndicatorModule.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["angular/material/menu",{"_index":2206,"title":{},"body":{"modules/UiGridModule.html":{}}}],["angular/material/paginator",{"_index":1927,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["angular/material/progress",{"_index":1318,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"modules/UiGridModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{}}}],["angular/material/select",{"_index":1995,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{}}}],["angular/material/snack",{"_index":802,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{}}}],["angular/material/sort",{"_index":915,"title":{},"body":{"interfaces/ISortModel.html":{},"directives/UiGridColumnDirective.html":{}}}],["angular/material/tooltip",{"_index":1196,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSuggestModule.html":{}}}],["angular/material/tree",{"_index":1171,"title":{},"body":{"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{}}}],["angular/platform",{"_index":3888,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":3889,"title":{},"body":{"dependencies.html":{}}}],["angular@8",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["animate('100ms",{"_index":4247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate('120ms",{"_index":4249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animation",{"_index":3733,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["animation_timing",{"_index":3816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":2655,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["animations.ts",{"_index":4257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["announce",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["announced",{"_index":2139,"title":{},"body":{"injectables/UiGridIntl.html":{},"injectables/UiSuggestIntl.html":{}}}],["announcement",{"_index":1132,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["announcements",{"_index":1125,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["announcer",{"_index":2127,"title":{},"body":{"injectables/UiGridIntl.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{}}}],["announcer.ts",{"_index":1105,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"coverage.html":{}}}],["announcer.ts:15",{"_index":1109,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["announcer.ts:19",{"_index":1112,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["announcer/queued",{"_index":1104,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"coverage.html":{}}}],["another",{"_index":2531,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"index.html":{}}}],["ansi",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["aot",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["apis",{"_index":2836,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["apollo",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":1981,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["appearance]=\"_formfieldappearance",{"_index":1942,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["application",{"_index":3925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applied",{"_index":931,"title":{},"body":{"interfaces/ISuggestValue.html":{},"injectables/UiGridIntl.html":{}}}],["apply",{"_index":2236,"title":{},"body":{"directives/UiGridRowConfigDirective.html":{},"changelog.html":{}}}],["approved",{"_index":4028,"title":{},"body":{"index.html":{}}}],["area",{"_index":1672,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiNgLetDirective.html":{}}}],["args",{"_index":4155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":1065,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["aria",{"_index":771,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["aria_sort_map",{"_index":1856,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["aria_sort_map[this.sort",{"_index":1873,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["ariadescriber",{"_index":2478,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["ariaroles",{"_index":4166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ariasort",{"_index":1807,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["arising",{"_index":4128,"title":{},"body":{"license.html":{}}}],["array",{"_index":1074,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{},"miscellaneous/functions.html":{}}}],["array.from(element.children",{"_index":1774,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["array.from(files).filter(isaccepted",{"_index":1769,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["array.from(this.currentselectednodes.values",{"_index":3252,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["arrow",{"_index":2136,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["arrowdown",{"_index":662,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["arrowdown'].includes(e.key",{"_index":2397,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["arrowleft",{"_index":660,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"components/UiTreeSelectComponent.html":{}}}],["arrowright",{"_index":664,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"components/UiTreeSelectComponent.html":{}}}],["arrowup",{"_index":666,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["arrowup'].includes(e.key",{"_index":2395,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["asc",{"_index":1859,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["ascending",{"_index":1860,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{}}}],["assignment",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["assistive",{"_index":1208,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"miscellaneous/variables.html":{}}}],["associated",{"_index":111,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"license.html":{}}}],["async",{"_index":727,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiNgLetDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{}}}],["asynchronously",{"_index":3918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asyncof",{"_index":3871,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["asyncof(obj",{"_index":3914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["attach",{"_index":2516,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["attribute",{"_index":414,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiDateFormatDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["attributes",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["audit",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["augmentor",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":4118,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1187,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"components/UiSnackBarComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autoamtic",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["autocomplete",{"_index":4172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autofocus",{"_index":3131,"title":{},"body":{"modules/UiSuggestModule.html":{},"changelog.html":{}}}],["autofocus.directive",{"_index":1295,"title":{},"body":{"modules/UiAutofocusModule.html":{}}}],["autofocus.directive.ts",{"_index":1231,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"coverage.html":{}}}],["autofocus.directive.ts:116",{"_index":1255,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["autofocus.directive.ts:37",{"_index":1250,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["autofocus.directive.ts:47",{"_index":1243,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["autofocus.directive.ts:58",{"_index":1247,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["autofocus.directive.ts:64",{"_index":1256,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["autofocus.directive.ts:89",{"_index":1252,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["autofocus.module.ts",{"_index":1294,"title":{},"body":{"modules/UiAutofocusModule.html":{}}}],["autofocus/src/ui",{"_index":1230,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"coverage.html":{}}}],["autofocuses",{"_index":1232,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["automate",{"_index":3984,"title":{},"body":{"index.html":{}}}],["automatic",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":3177,"title":{},"body":{"components/UiTreeSelectComponent.html":{},"index.html":{}}}],["autosquash",{"_index":4033,"title":{},"body":{"index.html":{}}}],["available",{"_index":954,"title":{},"body":{"interfaces/ISuggestValues.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiScrollIntoViewDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["available${searchvalue",{"_index":2175,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["average",{"_index":1469,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["avoid",{"_index":2845,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["away",{"_index":4009,"title":{},"body":{"index.html":{}}}],["axe",{"_index":3790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":646,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["b.type",{"_index":2076,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["background",{"_index":4204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backspace",{"_index":674,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["bar",{"_index":780,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"modules/UiGridModule.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":1332,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["bar.component",{"_index":2794,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{}}}],["bar.component.html",{"_index":1303,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":1302,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":1301,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:19",{"_index":1313,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["bar.component.ts:21",{"_index":1315,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["bar.component.ts:22",{"_index":1316,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":1309,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":1311,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["bar.component.ts:26",{"_index":1307,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["bar.jasmine",{"_index":4212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barrel",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":2796,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"miscellaneous/enumerations.html":{}}}],["base.scss",{"_index":1440,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["based",{"_index":3306,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["baseline",{"_index":1979,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["basic",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1130,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"index.html":{}}}],["behavior",{"_index":2841,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["behaviorsubject",{"_index":542,"title":{},"body":{"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{}}}],["behaviorsubject('indeterminate",{"_index":1314,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["behaviorsubject('primary",{"_index":1310,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["behaviorsubject(0",{"_index":1308,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["behaviorsubject(100",{"_index":1628,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["behaviorsubject(false",{"_index":1312,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiPasswordToggleComponent.html":{}}}],["behaviorsubject(null",{"_index":738,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["behaviorsubject(true",{"_index":558,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["being",{"_index":2576,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["benefits",{"_index":1478,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["better",{"_index":2847,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{},"index.html":{}}}],["between",{"_index":1976,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiSnackBarComponent.html":{},"changelog.html":{}}}],["bezier(0",{"_index":4250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bezier(0.35",{"_index":1444,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["bezier(0.55",{"_index":4183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bind",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["binding",{"_index":3015,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["block",{"_index":58,"title":{},"body":{"classes/EventGenerator.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["body",{"_index":4203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body/ui",{"_index":968,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"modules/UiGridModule.html":{}}}],["boolean",{"_index":310,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["border",{"_index":2704,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":1133,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"index.html":{}}}],["bottom",{"_index":2707,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["bound",{"_index":2580,"title":{},"body":{"directives/UiNgLetDirective.html":{},"components/UiPasswordToggleComponent.html":{}}}],["boundary",{"_index":2848,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{},"miscellaneous/typealiases.html":{}}}],["bracketpaircolorization",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["branch",{"_index":4021,"title":{},"body":{"index.html":{}}}],["branches",{"_index":4006,"title":{},"body":{"index.html":{}}}],["break",{"_index":2900,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["breaking",{"_index":3613,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1724,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"modules.html":{}}}],["browser",{"_index":1693,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{}}}],["browsers",{"_index":3930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browsing",{"_index":1674,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["btn",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["buffer",{"_index":3291,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["buffervalue",{"_index":1304,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["bug",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3572,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["builds",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["bundle",{"_index":400,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["button",{"_index":769,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridHeaderButtonDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["button's",{"_index":1211,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"miscellaneous/variables.html":{}}}],["button'},{'name",{"_index":1377,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["button.directive",{"_index":2068,"title":{},"body":{"directives/UiGridHeaderDirective.html":{},"modules/UiGridModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiSpinnerButtonModule.html":{}}}],["button.directive.ts",{"_index":2043,"title":{},"body":{"directives/UiGridHeaderButtonDirective.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["button.directive.ts:22",{"_index":2046,"title":{},"body":{"directives/UiGridHeaderButtonDirective.html":{}}}],["button.directive.ts:29",{"_index":2047,"title":{},"body":{"directives/UiGridHeaderButtonDirective.html":{}}}],["button.directive.ts:36",{"_index":2789,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["button.directive.ts:39",{"_index":2791,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["button.directive.ts:42",{"_index":2792,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["button.directive.ts:43",{"_index":2938,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["button.directive.ts:45",{"_index":2787,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["button.directive.ts:46",{"_index":2939,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["button.directive.ts:48",{"_index":2785,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["button.directive.ts:49",{"_index":2940,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["button.directive.ts:52",{"_index":2937,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["button.directive.ts:68",{"_index":2793,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["button.directive.ts:77",{"_index":2941,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["button.isiconbutton",{"_index":2944,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["button.isroundbutton",{"_index":2945,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["button.module.ts",{"_index":2832,"title":{},"body":{"modules/UiProgressButtonModule.html":{},"modules/UiSpinnerButtonModule.html":{}}}],["button.ts",{"_index":2433,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{},"coverage.html":{}}}],["button.ts:23",{"_index":2436,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["button.ts:35",{"_index":2438,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["button.ts:45",{"_index":2439,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["button/src/internal/ui",{"_index":1300,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"coverage.html":{}}}],["button/src/ui",{"_index":2778,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["button:not([hidden",{"_index":4196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button[mat",{"_index":1403,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["button]:not([${disable_auto_accessible_label_attribute",{"_index":1218,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{}}}],["button][ui",{"_index":1404,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["button][uiprogressbutton",{"_index":1408,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["button][uispinnerbutton",{"_index":1414,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["buttonprogressclass",{"_index":2795,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"miscellaneous/enumerations.html":{}}}],["buttonprogressclass.base",{"_index":2815,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["buttons",{"_index":2140,"title":{},"body":{"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["c",{"_index":640,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"license.html":{}}}],["c.checked",{"_index":2378,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["c.disabletoggle",{"_index":1022,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["c.property",{"_index":1017,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["c.visible",{"_index":982,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["ca3a11!important",{"_index":4227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["calc",{"_index":2417,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["calc($padding",{"_index":3282,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["calc(100vh",{"_index":2895,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["calc(50",{"_index":1453,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["call",{"_index":929,"title":{},"body":{"interfaces/ISuggestValue.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["calls",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["cancel",{"_index":2273,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["capture",{"_index":1497,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["captures",{"_index":3922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":392,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cases",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["catch(this._announcenext",{"_index":1139,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["catcherror",{"_index":3917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cause",{"_index":452,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["cb",{"_index":4160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb(customspecoptions",{"_index":4162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdk",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["cdktreemodule",{"_index":3216,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["cdkvirtualforof",{"_index":3313,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["cdkvirtualscrollviewport",{"_index":3289,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["cell",{"_index":1823,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["center",{"_index":1974,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"components/UiTreeSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["centering",{"_index":1965,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["centric",{"_index":251,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/IDropEvent.html":{}}}],["certain",{"_index":2843,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["change",{"_index":28,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["change.currentvalue",{"_index":1898,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["change.firstchange",{"_index":1897,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["change.previousvalue",{"_index":1899,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["changed",{"_index":2021,"title":{},"body":{"directives/UiGridFooterDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["changedetection",{"_index":728,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["changedetectionstrategy",{"_index":714,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":729,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["changedetectorref",{"_index":368,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["changeevent",{"_index":187,"title":{},"body":{"classes/EventGenerator.html":{}}}],["changeevent.initevent('change",{"_index":189,"title":{},"body":{"classes/EventGenerator.html":{}}}],["changeevent.target",{"_index":192,"title":{},"body":{"classes/EventGenerator.html":{}}}],["changelog",{"_index":3395,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1682,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiLoaderButtonDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiPasswordComplexityIntl.html":{},"injectables/UiPasswordToggleIntl.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{},"index.html":{}}}],["changes.filetype",{"_index":1712,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["changes.filetype.currentvalue",{"_index":1713,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["changes[property",{"_index":1895,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["changing",{"_index":1001,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["characters",{"_index":2989,"title":{},"body":{"injectables/UiSuggestIntl.html":{},"changelog.html":{}}}],["charge",{"_index":4088,"title":{},"body":{"license.html":{}}}],["check",{"_index":3370,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["check_circle",{"_index":840,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["checkandnormalizevalue",{"_index":3047,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["checkandnormalizevalue(newvalue",{"_index":3073,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["checkandnormalizevalue(value",{"_index":3111,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["checkbox",{"_index":2116,"title":{},"body":{"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["checkboxes",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["checkboxtooltip",{"_index":2111,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["checkboxtooltip(selected",{"_index":2112,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["checked",{"_index":962,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["checkednewvalue",{"_index":3072,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["checks",{"_index":3985,"title":{},"body":{"index.html":{}}}],["child",{"_index":1775,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiScrollIntoViewDirective.html":{},"changelog.html":{}}}],["children",{"_index":332,"title":{},"body":{"interfaces/IBaseNode.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/ITreeNode.html":{},"classes/TreeUtils.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["chip",{"_index":3527,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["chips",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["chore",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":3956,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":2290,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["chunks",{"_index":956,"title":{},"body":{"interfaces/ISuggestValues.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["ci",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":4121,"title":{},"body":{"license.html":{}}}],["clarify",{"_index":1202,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"classes/TreeUtils.html":{},"classes/UiMatSnackBarConfig.html":{}},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{}}}],["class.file",{"_index":1667,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["class.floating",{"_index":3001,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["class.form",{"_index":3002,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["class=\"mat",{"_index":1944,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/TreeUtils.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{},"overview.html":{}}}],["classlist",{"_index":3061,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["clear",{"_index":879,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiDragAndDropFileDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["clearcustomfilter",{"_index":2086,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["cleared",{"_index":1684,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["clears",{"_index":1687,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{}}}],["clearselectionlabel",{"_index":2966,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["clearselectiontooltip",{"_index":2087,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["cleartooltip",{"_index":2088,"title":{},"body":{"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{}}}],["cli",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":36,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDragAndDropFileDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["click/s",{"_index":1475,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["clickxy",{"_index":29,"title":{},"body":{"classes/EventGenerator.html":{}}}],["clickxy(offsetx",{"_index":94,"title":{},"body":{"classes/EventGenerator.html":{}}}],["clipboard",{"_index":1516,"title":{},"body":{"directives/UiClipboardDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["clipboard(this._eltref.nativeelement",{"_index":1533,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["clipboard.directive",{"_index":1544,"title":{},"body":{"modules/UiClipboardModule.html":{}}}],["clipboard.directive.ts",{"_index":1514,"title":{},"body":{"directives/UiClipboardDirective.html":{},"coverage.html":{}}}],["clipboard.directive.ts:29",{"_index":1520,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["clipboard.directive.ts:36",{"_index":1525,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["clipboard.directive.ts:43",{"_index":1523,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["clipboard.module.ts",{"_index":1543,"title":{},"body":{"modules/UiClipboardModule.html":{}}}],["clipboard/src/ui",{"_index":1513,"title":{},"body":{"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"coverage.html":{}}}],["clipboard](https://www.npmjs.com/package/clipboard",{"_index":1527,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["clipboarderror",{"_index":1518,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["clipboardsuccess",{"_index":1519,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["clone",{"_index":3182,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["clonedeep",{"_index":3039,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["clonedeep(items",{"_index":3121,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["clones",{"_index":3185,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["close",{"_index":774,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["closearialabel",{"_index":763,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{}}}],["closed",{"_index":3536,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["closesnackbarshortcut",{"_index":2926,"title":{},"body":{"injectables/UiSnackbarIntl.html":{},"changelog.html":{}}}],["cluster_keyboardshortcutmodule",{"_index":1090,"title":{},"body":{"modules/KeyboardShortcutModule.html":{},"overview.html":{}}}],["cluster_keyboardshortcutmodule_declarations",{"_index":1092,"title":{},"body":{"modules/KeyboardShortcutModule.html":{},"overview.html":{}}}],["cluster_keyboardshortcutmodule_exports",{"_index":1091,"title":{},"body":{"modules/KeyboardShortcutModule.html":{},"overview.html":{}}}],["cluster_uiautoaccessiblelabelmodule",{"_index":1224,"title":{},"body":{"modules/UiAutoAccessibleLabelModule.html":{},"overview.html":{}}}],["cluster_uiautoaccessiblelabelmodule_declarations",{"_index":1226,"title":{},"body":{"modules/UiAutoAccessibleLabelModule.html":{},"overview.html":{}}}],["cluster_uiautoaccessiblelabelmodule_exports",{"_index":1225,"title":{},"body":{"modules/UiAutoAccessibleLabelModule.html":{},"overview.html":{}}}],["cluster_uiautofocusmodule",{"_index":1291,"title":{},"body":{"modules/UiAutofocusModule.html":{},"overview.html":{}}}],["cluster_uiautofocusmodule_declarations",{"_index":1293,"title":{},"body":{"modules/UiAutofocusModule.html":{},"overview.html":{}}}],["cluster_uiautofocusmodule_exports",{"_index":1292,"title":{},"body":{"modules/UiAutofocusModule.html":{},"overview.html":{}}}],["cluster_uiclickoutsidemodule",{"_index":1507,"title":{},"body":{"modules/UiClickOutsideModule.html":{},"overview.html":{}}}],["cluster_uiclickoutsidemodule_declarations",{"_index":1509,"title":{},"body":{"modules/UiClickOutsideModule.html":{},"overview.html":{}}}],["cluster_uiclickoutsidemodule_exports",{"_index":1508,"title":{},"body":{"modules/UiClickOutsideModule.html":{},"overview.html":{}}}],["cluster_uiclipboardmodule",{"_index":1540,"title":{},"body":{"modules/UiClipboardModule.html":{},"overview.html":{}}}],["cluster_uiclipboardmodule_declarations",{"_index":1541,"title":{},"body":{"modules/UiClipboardModule.html":{},"overview.html":{}}}],["cluster_uiclipboardmodule_exports",{"_index":1542,"title":{},"body":{"modules/UiClipboardModule.html":{},"overview.html":{}}}],["cluster_uicontentloadermodule",{"_index":1612,"title":{},"body":{"modules/UiContentLoaderModule.html":{},"overview.html":{}}}],["cluster_uicontentloadermodule_declarations",{"_index":1614,"title":{},"body":{"modules/UiContentLoaderModule.html":{},"overview.html":{}}}],["cluster_uicontentloadermodule_exports",{"_index":1613,"title":{},"body":{"modules/UiContentLoaderModule.html":{},"overview.html":{}}}],["cluster_uidateformatmodule",{"_index":1650,"title":{},"body":{"modules/UiDateFormatModule.html":{},"overview.html":{}}}],["cluster_uidateformatmodule_declarations",{"_index":1652,"title":{},"body":{"modules/UiDateFormatModule.html":{},"overview.html":{}}}],["cluster_uidateformatmodule_exports",{"_index":1651,"title":{},"body":{"modules/UiDateFormatModule.html":{},"overview.html":{}}}],["cluster_uidraganddropmodule",{"_index":1783,"title":{},"body":{"modules/UiDragAndDropModule.html":{},"overview.html":{}}}],["cluster_uidraganddropmodule_declarations",{"_index":1784,"title":{},"body":{"modules/UiDragAndDropModule.html":{},"overview.html":{}}}],["cluster_uidraganddropmodule_exports",{"_index":1785,"title":{},"body":{"modules/UiDragAndDropModule.html":{},"overview.html":{}}}],["cluster_uigridcustompaginatormodule",{"_index":1988,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{},"overview.html":{}}}],["cluster_uigridcustompaginatormodule_declarations",{"_index":1989,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{},"overview.html":{}}}],["cluster_uigridcustompaginatormodule_exports",{"_index":1990,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{},"overview.html":{}}}],["cluster_uigridmodule",{"_index":2188,"title":{},"body":{"modules/UiGridModule.html":{},"overview.html":{}}}],["cluster_uigridmodule_declarations",{"_index":2189,"title":{},"body":{"modules/UiGridModule.html":{},"overview.html":{}}}],["cluster_uigridmodule_exports",{"_index":2190,"title":{},"body":{"modules/UiGridModule.html":{},"overview.html":{}}}],["cluster_uigridmodule_imports",{"_index":2191,"title":{},"body":{"modules/UiGridModule.html":{},"overview.html":{}}}],["cluster_uigridsearchmodule",{"_index":2300,"title":{},"body":{"modules/UiGridSearchModule.html":{},"overview.html":{}}}],["cluster_uigridsearchmodule_declarations",{"_index":2302,"title":{},"body":{"modules/UiGridSearchModule.html":{},"overview.html":{}}}],["cluster_uigridsearchmodule_exports",{"_index":2301,"title":{},"body":{"modules/UiGridSearchModule.html":{},"overview.html":{}}}],["cluster_uigridtogglecolumnsmodule",{"_index":2425,"title":{},"body":{"modules/UiGridToggleColumnsModule.html":{},"overview.html":{}}}],["cluster_uigridtogglecolumnsmodule_declarations",{"_index":2426,"title":{},"body":{"modules/UiGridToggleColumnsModule.html":{},"overview.html":{}}}],["cluster_uigridtogglecolumnsmodule_exports",{"_index":2428,"title":{},"body":{"modules/UiGridToggleColumnsModule.html":{},"overview.html":{}}}],["cluster_uigridtogglecolumnsmodule_imports",{"_index":2427,"title":{},"body":{"modules/UiGridToggleColumnsModule.html":{}}}],["cluster_uimatformfieldrequiredmodule",{"_index":2558,"title":{},"body":{"modules/UiMatFormFieldRequiredModule.html":{},"overview.html":{}}}],["cluster_uimatformfieldrequiredmodule_declarations",{"_index":2560,"title":{},"body":{"modules/UiMatFormFieldRequiredModule.html":{},"overview.html":{}}}],["cluster_uimatformfieldrequiredmodule_exports",{"_index":2559,"title":{},"body":{"modules/UiMatFormFieldRequiredModule.html":{},"overview.html":{}}}],["cluster_uingletmodule",{"_index":2593,"title":{},"body":{"modules/UiNgLetModule.html":{},"overview.html":{}}}],["cluster_uingletmodule_declarations",{"_index":2594,"title":{},"body":{"modules/UiNgLetModule.html":{},"overview.html":{}}}],["cluster_uingletmodule_exports",{"_index":2595,"title":{},"body":{"modules/UiNgLetModule.html":{},"overview.html":{}}}],["cluster_uipasswordindicatormodule",{"_index":2717,"title":{},"body":{"modules/UiPasswordIndicatorModule.html":{},"overview.html":{}}}],["cluster_uipasswordindicatormodule_declarations",{"_index":2720,"title":{},"body":{"modules/UiPasswordIndicatorModule.html":{},"overview.html":{}}}],["cluster_uipasswordindicatormodule_exports",{"_index":2719,"title":{},"body":{"modules/UiPasswordIndicatorModule.html":{},"overview.html":{}}}],["cluster_uipasswordindicatormodule_imports",{"_index":2718,"title":{},"body":{"modules/UiPasswordIndicatorModule.html":{}}}],["cluster_uipasswordtogglemodule",{"_index":2766,"title":{},"body":{"modules/UiPasswordToggleModule.html":{},"overview.html":{}}}],["cluster_uipasswordtogglemodule_declarations",{"_index":2768,"title":{},"body":{"modules/UiPasswordToggleModule.html":{},"overview.html":{}}}],["cluster_uipasswordtogglemodule_exports",{"_index":2767,"title":{},"body":{"modules/UiPasswordToggleModule.html":{},"overview.html":{}}}],["cluster_uipasswordtogglemodule_imports",{"_index":2769,"title":{},"body":{"modules/UiPasswordToggleModule.html":{}}}],["cluster_uipipemodule",{"_index":2773,"title":{},"body":{"modules/UiPipeModule.html":{},"overview.html":{}}}],["cluster_uipipemodule_declarations",{"_index":2775,"title":{},"body":{"modules/UiPipeModule.html":{},"overview.html":{}}}],["cluster_uipipemodule_exports",{"_index":2774,"title":{},"body":{"modules/UiPipeModule.html":{},"overview.html":{}}}],["cluster_uiprogressbuttonmodule",{"_index":2829,"title":{},"body":{"modules/UiProgressButtonModule.html":{},"overview.html":{}}}],["cluster_uiprogressbuttonmodule_declarations",{"_index":2831,"title":{},"body":{"modules/UiProgressButtonModule.html":{},"overview.html":{}}}],["cluster_uiprogressbuttonmodule_exports",{"_index":2830,"title":{},"body":{"modules/UiProgressButtonModule.html":{},"overview.html":{}}}],["cluster_uiscrollintoviewmodule",{"_index":2870,"title":{},"body":{"modules/UiScrollIntoViewModule.html":{},"overview.html":{}}}],["cluster_uiscrollintoviewmodule_declarations",{"_index":2872,"title":{},"body":{"modules/UiScrollIntoViewModule.html":{},"overview.html":{}}}],["cluster_uiscrollintoviewmodule_exports",{"_index":2871,"title":{},"body":{"modules/UiScrollIntoViewModule.html":{},"overview.html":{}}}],["cluster_uisecondformatmodule",{"_index":2882,"title":{},"body":{"modules/UiSecondFormatModule.html":{},"overview.html":{}}}],["cluster_uisecondformatmodule_declarations",{"_index":2883,"title":{},"body":{"modules/UiSecondFormatModule.html":{},"overview.html":{}}}],["cluster_uisecondformatmodule_exports",{"_index":2884,"title":{},"body":{"modules/UiSecondFormatModule.html":{},"overview.html":{}}}],["cluster_uisnackbarmodule",{"_index":2902,"title":{},"body":{"modules/UiSnackBarModule.html":{},"overview.html":{}}}],["cluster_uisnackbarmodule_declarations",{"_index":2903,"title":{},"body":{"modules/UiSnackBarModule.html":{},"overview.html":{}}}],["cluster_uisnackbarmodule_imports",{"_index":2904,"title":{},"body":{"modules/UiSnackBarModule.html":{}}}],["cluster_uispinnerbuttonmodule",{"_index":2960,"title":{},"body":{"modules/UiSpinnerButtonModule.html":{},"overview.html":{}}}],["cluster_uispinnerbuttonmodule_declarations",{"_index":2961,"title":{},"body":{"modules/UiSpinnerButtonModule.html":{},"overview.html":{}}}],["cluster_uispinnerbuttonmodule_exports",{"_index":2962,"title":{},"body":{"modules/UiSpinnerButtonModule.html":{},"overview.html":{}}}],["cluster_uisuggestmodule",{"_index":3124,"title":{},"body":{"modules/UiSuggestModule.html":{},"overview.html":{}}}],["cluster_uisuggestmodule_imports",{"_index":3125,"title":{},"body":{"modules/UiSuggestModule.html":{},"overview.html":{}}}],["cluster_uivirtualscrollrangeloadermodule",{"_index":3365,"title":{},"body":{"modules/UiVirtualScrollRangeLoaderModule.html":{},"overview.html":{}}}],["cluster_uivirtualscrollrangeloadermodule_declarations",{"_index":3366,"title":{},"body":{"modules/UiVirtualScrollRangeLoaderModule.html":{},"overview.html":{}}}],["cluster_uivirtualscrollrangeloadermodule_exports",{"_index":3367,"title":{},"body":{"modules/UiVirtualScrollRangeLoaderModule.html":{},"overview.html":{}}}],["cluster_uivirtualscrollviewportresizemodule",{"_index":3388,"title":{},"body":{"modules/UiVirtualScrollViewportResizeModule.html":{},"overview.html":{}}}],["cluster_uivirtualscrollviewportresizemodule_declarations",{"_index":3389,"title":{},"body":{"modules/UiVirtualScrollViewportResizeModule.html":{},"overview.html":{}}}],["cluster_uivirtualscrollviewportresizemodule_exports",{"_index":3390,"title":{},"body":{"modules/UiVirtualScrollViewportResizeModule.html":{},"overview.html":{}}}],["code",{"_index":209,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{},"index.html":{}}}],["codebase",{"_index":4072,"title":{},"body":{"index.html":{}}}],["col",{"_index":2404,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["collapse",{"_index":3160,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["collapse(node",{"_index":3186,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["collapsed",{"_index":3167,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["collapsefilterscount",{"_index":298,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"changelog.html":{}}}],["collapsible",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["collapsiblefilters",{"_index":295,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{}}}],["collection",{"_index":14,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["color",{"_index":1305,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["color]=\"color",{"_index":1943,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["colors",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["cols.filter(c",{"_index":981,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["column",{"_index":911,"title":{},"body":{"interfaces/ISortModel.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["column'},{'name",{"_index":1365,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["column.directive",{"_index":969,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"modules/UiGridModule.html":{}}}],["column.directive.ts",{"_index":1799,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"coverage.html":{}}}],["column.directive.ts:102",{"_index":1830,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:109",{"_index":1829,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:116",{"_index":1834,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:123",{"_index":1821,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:130",{"_index":1824,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:137",{"_index":1812,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:144",{"_index":1832,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:151",{"_index":1819,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:154",{"_index":1849,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:168",{"_index":1809,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:175",{"_index":1835,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:178",{"_index":1852,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:192",{"_index":1815,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:199",{"_index":1827,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:202",{"_index":1808,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:238",{"_index":1838,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:50",{"_index":1837,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:70",{"_index":1843,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:78",{"_index":1846,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:88",{"_index":1840,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.directive.ts:95",{"_index":1833,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["column.disabletoggle",{"_index":1011,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["column.property",{"_index":1008,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["column.title",{"_index":1009,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["column.visible",{"_index":1010,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["columnoptions",{"_index":1025,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["columnoptions.filter(o",{"_index":1028,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["columns",{"_index":978,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["columns(columns",{"_index":991,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["columns.component",{"_index":2432,"title":{},"body":{"modules/UiGridToggleColumnsModule.html":{}}}],["columns.component.html",{"_index":2312,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.scss",{"_index":2311,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts",{"_index":2309,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columns.component.ts:126",{"_index":2324,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:133",{"_index":2337,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:152",{"_index":2338,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:157",{"_index":2344,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:165",{"_index":2339,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:171",{"_index":2341,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:47",{"_index":2336,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:51",{"_index":2325,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:54",{"_index":2328,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:57",{"_index":2326,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:65",{"_index":2352,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:70",{"_index":2332,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:73",{"_index":2331,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:76",{"_index":2330,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:79",{"_index":2327,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:82",{"_index":2329,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:85",{"_index":2334,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:88",{"_index":2333,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:91",{"_index":2335,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:94",{"_index":2350,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:97",{"_index":2347,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.component.ts:99",{"_index":2355,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["columns.find(c",{"_index":1035,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["columns.module",{"_index":2222,"title":{},"body":{"modules/UiGridModule.html":{}}}],["columns.module.ts",{"_index":2429,"title":{},"body":{"modules/UiGridToggleColumnsModule.html":{}}}],["columns/ui",{"_index":2221,"title":{},"body":{"modules/UiGridModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsortedascending",{"_index":2089,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["columnsorteddescending",{"_index":2090,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["columntitle",{"_index":2129,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["columnttile",{"_index":2183,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["columnunsorted",{"_index":2091,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["combination",{"_index":1051,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["combinations",{"_index":1075,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["combinelatest",{"_index":2647,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{}}}],["combo",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["combobox",{"_index":4167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comes",{"_index":3979,"title":{},"body":{"index.html":{}}}],["coming",{"_index":4073,"title":{},"body":{"index.html":{}}}],["commit",{"_index":3969,"title":{},"body":{"index.html":{}}}],["commitizen",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["commitlint",{"_index":3981,"title":{},"body":{"index.html":{}}}],["commitlint/cli",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["commits",{"_index":3987,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1616,"title":{},"body":{"modules/UiContentLoaderModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{}}}],["compact",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["comparevalue",{"_index":522,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["comparevalue.gettime",{"_index":524,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["comparisons",{"_index":755,"title":{},"body":{"interfaces/ISelectionDiff.html":{}}}],["complete",{"_index":581,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{}}}],["complexity",{"_index":686,"title":{},"body":{"interfaces/IRegexLike.html":{},"injectables/UiPasswordComplexityIntl.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["complexityvalidator",{"_index":696,"title":{},"body":{"interfaces/IRegexLike.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["compodoc",{"_index":3967,"title":{},"body":{"index.html":{}}}],["component",{"_index":82,"title":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component_selector",{"_index":2310,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_selector'},{'name",{"_index":1343,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["component_template",{"_index":1331,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["componentfactory",{"_index":2786,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["componentfactoryresolver",{"_index":1555,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["componentportal",{"_index":792,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["componentref",{"_index":1569,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["components",{"_index":418,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["components/ui",{"_index":2217,"title":{},"body":{"modules/UiGridModule.html":{}}}],["componenttype",{"_index":785,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["computed",{"_index":2117,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["computes",{"_index":3033,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["concatjoin",{"_index":3874,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["concatjoin(...inputs",{"_index":3921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condition",{"_index":1259,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["conditions",{"_index":4103,"title":{},"body":{"license.html":{}}}],["config",{"_index":844,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiGridRowConfigDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["config'},{'name",{"_index":1392,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["config.directive",{"_index":2216,"title":{},"body":{"modules/UiGridModule.html":{}}}],["config.directive.ts",{"_index":2231,"title":{},"body":{"directives/UiGridRowConfigDirective.html":{},"coverage.html":{}}}],["config.directive.ts:22",{"_index":2235,"title":{},"body":{"directives/UiGridRowConfigDirective.html":{}}}],["config.duration",{"_index":885,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["config?.actionmessage",{"_index":883,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["config?.duration",{"_index":884,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["config?.extracssclasses",{"_index":887,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["config?.payload",{"_index":886,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["configurable",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["configuraiton",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2232,"title":{},"body":{"directives/UiGridRowConfigDirective.html":{},"changelog.html":{}}}],["configure",{"_index":1251,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["configured",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":1671,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["conflict",{"_index":3991,"title":{},"body":{"index.html":{}}}],["conflicts",{"_index":4000,"title":{},"body":{"index.html":{}}}],["connection",{"_index":4129,"title":{},"body":{"license.html":{}}}],["console.error(`width",{"_index":1866,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["console.warn(`did",{"_index":1037,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["console.warn(mat_tooltip_missing_warning",{"_index":1221,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{}}}],["const",{"_index":158,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/IVisibleDiff.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":243,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridFooterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["constructor(_el",{"_index":3140,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["constructor(_elementref",{"_index":2323,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["constructor(_intl",{"_index":2729,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["constructor(_liveannouncer",{"_index":1107,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["constructor(_overlay",{"_index":2469,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["constructor(_renderer",{"_index":1790,"title":{},"body":{"directives/UiFormatDirective.html":{}}}],["constructor(_resolver",{"_index":1554,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["constructor(_snackbar",{"_index":2917,"title":{},"body":{"injectables/UiSnackBarService.html":{}}}],["constructor(button",{"_index":2935,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["constructor(changedetectorref",{"_index":1913,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["constructor(componentfactory",{"_index":2784,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["constructor(data",{"_index":2887,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["constructor(elementref",{"_index":1192,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{}}}],["constructor(files",{"_index":244,"title":{},"body":{"classes/FakeFileList.html":{}}}],["constructor(intl",{"_index":2632,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["constructor(loadertype",{"_index":2434,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["constructor(private",{"_index":1118,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"directives/UiClipboardDirective.html":{}}}],["constructor(public",{"_index":277,"title":{},"body":{"classes/FakeFileList.html":{}}}],["consumer",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["consumers",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["container",{"_index":781,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiGridCustomPaginatorComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["containing",{"_index":2178,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["contains('form",{"_index":3062,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["content",{"_index":349,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridNoContentDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["content'},{'name",{"_index":1386,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["content.directive",{"_index":2214,"title":{},"body":{"modules/UiGridModule.html":{}}}],["content.directive.ts",{"_index":2228,"title":{},"body":{"directives/UiGridNoContentDirective.html":{},"coverage.html":{}}}],["content.directive.ts:14",{"_index":2229,"title":{},"body":{"directives/UiGridNoContentDirective.html":{}}}],["contentchild",{"_index":1853,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["contentchild('itemtemplate",{"_index":3210,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["contentchild(cdkvirtualforof",{"_index":3322,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["contentchild(matformfieldcontrol",{"_index":2504,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["contentchild(templateref",{"_index":1885,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{}}}],["contentchild(uigriddropdownfilterdirective",{"_index":1883,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["contentchild(uigridsearchfilterdirective",{"_index":1881,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["contentchildren",{"_index":2067,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["contentchildren(uigridheaderbuttondirective",{"_index":2072,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["contenttype",{"_index":343,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["context",{"_index":2579,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["contract",{"_index":4125,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributing",{"_index":3968,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":4075,"title":{},"body":{"index.html":{}}}],["control",{"_index":579,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiScrollIntoViewDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"miscellaneous/variables.html":{}}}],["control.value",{"_index":698,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":301,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":2997,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["convention",{"_index":1858,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"index.html":{}}}],["conventional",{"_index":3977,"title":{},"body":{"index.html":{}}}],["convert",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["cookie",{"_index":3927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cookies",{"_index":3926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cookies.ts",{"_index":3856,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["coordinates",{"_index":99,"title":{},"body":{"classes/EventGenerator.html":{}}}],["copied",{"_index":1524,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["copies",{"_index":1515,"title":{},"body":{"directives/UiClipboardDirective.html":{},"license.html":{}}}],["copy",{"_index":1522,"title":{},"body":{"directives/UiClipboardDirective.html":{},"license.html":{}}}],["copyright",{"_index":4081,"title":{},"body":{"license.html":{}}}],["core",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":3716,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["correctly",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["corresponding",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":272,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/ISuggestValues.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"injectables/UiGridIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["coverage",{"_index":3779,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":22,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"changelog.html":{},"index.html":{}}}],["creates",{"_index":246,"title":{},"body":{"classes/FakeFileList.html":{}}}],["creation",{"_index":236,"title":{},"body":{"classes/FakeFileList.html":{},"changelog.html":{}}}],["cross",{"_index":1692,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["css",{"_index":778,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{}}}],["ctor",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["ctrlkey",{"_index":217,"title":{},"body":{"classes/EventGenerator.html":{}}}],["cubic",{"_index":1443,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":315,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISuggestValue.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["currentcolor",{"_index":1984,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["currentitemlabel",{"_index":2967,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["currently",{"_index":2153,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["currentpage",{"_index":1929,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["currentselectednodes",{"_index":3158,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["cursor",{"_index":27,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiDragAndDropFileDirective.html":{},"components/UiGridSearchComponent.html":{},"changelog.html":{}}}],["cursor_img",{"_index":66,"title":{},"body":{"classes/EventGenerator.html":{}}}],["custom",{"_index":942,"title":{},"body":{"interfaces/ISuggestValue.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["customitemsize",{"_index":2998,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["customizable",{"_index":870,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["customize",{"_index":871,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["customspecoptions",{"_index":3791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["customvaluealreadyselected",{"_index":2968,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["customvaluelabel",{"_index":2969,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["customvaluelivelabel",{"_index":2970,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["cyclic",{"_index":3094,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["d",{"_index":615,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["damages",{"_index":4122,"title":{},"body":{"license.html":{}}}],["dangle",{"_index":177,"title":{},"body":{"classes/EventGenerator.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["data",{"_index":329,"title":{},"body":{"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"classes/TreeUtils.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["data(value",{"_index":3227,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["data.actionmessage",{"_index":2894,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["data.icon",{"_index":2893,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["data.message",{"_index":817,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["datamanager",{"_index":4202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":3168,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["datatransfer",{"_index":113,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDropEvent.html":{}}}],["date",{"_index":340,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IFilterModel.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["date(date",{"_index":423,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["dateformat",{"_index":350,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["dateformat'},{'name",{"_index":1361,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["dateformat.directive",{"_index":1654,"title":{},"body":{"modules/UiDateFormatModule.html":{}}}],["dateformat.directive.ts",{"_index":339,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dateformat.directive.ts:117",{"_index":1641,"title":{},"body":{"directives/UiDateFormatDirective.html":{}}}],["dateformat.directive.ts:127",{"_index":1645,"title":{},"body":{"directives/UiDateFormatDirective.html":{}}}],["dateformat.directive.ts:133",{"_index":1644,"title":{},"body":{"directives/UiDateFormatDirective.html":{}}}],["dateformat.directive.ts:139",{"_index":1642,"title":{},"body":{"directives/UiDateFormatDirective.html":{}}}],["dateformat.directive.ts:167",{"_index":1647,"title":{},"body":{"directives/UiDateFormatDirective.html":{}}}],["dateformat.directive.ts:175",{"_index":1643,"title":{},"body":{"directives/UiDateFormatDirective.html":{}}}],["dateformat.module.ts",{"_index":1653,"title":{},"body":{"modules/UiDateFormatModule.html":{}}}],["dateformat/src/ui",{"_index":338,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dblclick",{"_index":142,"title":{},"body":{"classes/EventGenerator.html":{},"components/UiTreeItemComponent.html":{}}}],["deal",{"_index":4091,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4130,"title":{},"body":{"license.html":{}}}],["debounce",{"_index":2057,"title":{},"body":{"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{}}}],["debouncetime",{"_index":2258,"title":{},"body":{"components/UiGridSearchComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["debouncetime(100",{"_index":3332,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["debouncetime(1000",{"_index":3381,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["debouncetime(this.debounce",{"_index":2264,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["declaration",{"_index":2569,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["declarations",{"_index":1096,"title":{},"body":{"modules/KeyboardShortcutModule.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{}}}],["declare",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["decorated",{"_index":1233,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiNgLetDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"changelog.html":{}}}],["decorators",{"_index":1069,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["default",{"_index":46,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/TreeUtils.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default_duration",{"_index":2912,"title":{},"body":{"modules/UiSnackBarModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_horizontal",{"_index":2913,"title":{},"body":{"modules/UiSnackBarModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_suggest_debounce_time",{"_index":3832,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_suggest_drilldown_character",{"_index":3833,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_vertical",{"_index":2914,"title":{},"body":{"modules/UiSnackBarModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_virtual_scroll_item_size",{"_index":3810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":456,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["defaults.formfieldappearance",{"_index":1937,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["defaults?.formfieldappearance",{"_index":1935,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["defaultvalue",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["define",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["defined",{"_index":75,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["defines",{"_index":527,"title":{},"body":{"interfaces/IDropEvent.html":{}}}],["definition",{"_index":226,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDropdownOption.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"injectables/UiSuggestIntl.html":{},"miscellaneous/typealiases.html":{}}}],["definitions",{"_index":3768,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["delay",{"_index":363,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"changelog.html":{},"index.html":{}}}],["delay(0",{"_index":453,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["delayed",{"_index":3920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delayms",{"_index":3915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delete",{"_index":2929,"title":{},"body":{"injectables/UiSnackbarIntl.html":{}}}],["demo's",{"_index":4078,"title":{},"body":{"index.html":{}}}],["depend",{"_index":4059,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":1089,"title":{"dependencies.html":{}},"body":{"modules/KeyboardShortcutModule.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":3095,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["depending",{"_index":3034,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["depends",{"_index":396,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["deprecated",{"_index":296,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{}}}],["deps",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1861,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["descending",{"_index":1862,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{}}}],["describedby",{"_index":3080,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiNgLetDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["deselect",{"_index":2176,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["deselected",{"_index":3000,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["design",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["designed",{"_index":3287,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["desired",{"_index":3936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["destroy",{"_index":68,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IVisibleDiff.html":{},"changelog.html":{}}}],["detail.jasmine",{"_index":4222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details",{"_index":4199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectchanges",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["detection",{"_index":444,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"changelog.html":{}}}],["determine",{"_index":955,"title":{},"body":{"interfaces/ISuggestValues.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["determines",{"_index":2115,"title":{},"body":{"injectables/UiGridIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"miscellaneous/functions.html":{}}}],["devkit/build",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["diameter",{"_index":1437,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["difference",{"_index":753,"title":{},"body":{"interfaces/ISelectionDiff.html":{},"directives/UiNgLetDirective.html":{}}}],["differentiate",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["dir=\"rtl",{"_index":1980,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["direct",{"_index":913,"title":{},"body":{"interfaces/ISortModel.html":{}}}],["direction",{"_index":906,"title":{},"body":{"interfaces/ISortModel.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/typealiases.html":{}}}],["directionality",{"_index":2483,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["directive",{"_index":369,"title":{"directives/KeyboardShortcutDirective.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiNgLetDirective.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directives",{"_index":1046,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["dirty",{"_index":2317,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["disable",{"_index":173,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"injectables/UiPasswordComplexityIntl.html":{},"injectables/UiPasswordToggleIntl.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["disable_auto_accessible_label_attribute",{"_index":1197,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":920,"title":{},"body":{"interfaces/ISuggestValue.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/UiDragAndDropFileDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{}}}],["disabled/not",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["disabletoggle",{"_index":1800,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["disabletoggle]=\"true",{"_index":1039,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["discard",{"_index":1018,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["dismiss",{"_index":878,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["dismisswithaction",{"_index":770,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["dispatching",{"_index":18,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDropEvent.html":{}}}],["displace",{"_index":1632,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["display",{"_index":378,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"miscellaneous/typealiases.html":{}}}],["displayed",{"_index":357,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValue.html":{},"directives/UiDateFormatDirective.html":{},"injectables/UiGridIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSuggestIntl.html":{}}}],["displaypriority",{"_index":2999,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["displaytype",{"_index":347,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"miscellaneous/typealiases.html":{}}}],["displayvaluefactory",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["dispose",{"_index":1742,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["distinctuntilchanged",{"_index":712,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["distinctuntilchanged(([list1",{"_index":3328,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["distribute",{"_index":4096,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":4038,"title":{},"body":{"index.html":{}}}],["divider",{"_index":2406,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"changelog.html":{}}}],["docheck",{"_index":2996,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["docs",{"_index":3963,"title":{},"body":{"index.html":{}}}],["document",{"_index":1467,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["document).body",{"_index":1496,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["document.createelement('div",{"_index":54,"title":{},"body":{"classes/EventGenerator.html":{}}}],["document.createelement('span",{"_index":892,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["document.createevent('event",{"_index":194,"title":{},"body":{"classes/EventGenerator.html":{}}}],["document.createevent('mouseevent",{"_index":159,"title":{},"body":{"classes/EventGenerator.html":{}}}],["document:keydown",{"_index":1060,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["document:keyup",{"_index":1061,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["documentation",{"_index":3780,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":432,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISuggestValue.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dom",{"_index":1298,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["don't",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["done",{"_index":443,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"index.html":{}}}],["doubleclick",{"_index":39,"title":{},"body":{"classes/EventGenerator.html":{}}}],["down",{"_index":2278,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["drag",{"_index":1655,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"changelog.html":{},"coverage.html":{}}}],["dragend",{"_index":42,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["dragenter",{"_index":1669,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["dragevent",{"_index":1688,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["dragevent('drop",{"_index":184,"title":{},"body":{"classes/EventGenerator.html":{}}}],["dragging",{"_index":1668,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["dragleave",{"_index":41,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["dragover",{"_index":40,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["dragoverevent",{"_index":165,"title":{},"body":{"classes/EventGenerator.html":{}}}],["dragoverevent.initevent('dragend",{"_index":170,"title":{},"body":{"classes/EventGenerator.html":{}}}],["dragoverevent.initevent('dragleave",{"_index":169,"title":{},"body":{"classes/EventGenerator.html":{}}}],["dragoverevent.initevent('dragover",{"_index":168,"title":{},"body":{"classes/EventGenerator.html":{}}}],["drastically",{"_index":1479,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["draws",{"_index":78,"title":{},"body":{"classes/EventGenerator.html":{}}}],["drill",{"_index":2277,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["drilldown",{"_index":926,"title":{},"body":{"interfaces/ISuggestValue.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["drop",{"_index":30,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"components/UiGridCustomPaginatorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["drop(files",{"_index":107,"title":{},"body":{"classes/EventGenerator.html":{}}}],["dropdown",{"_index":534,"title":{},"body":{"interfaces/IDropdownOption.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dropevent",{"_index":530,"title":{},"body":{"interfaces/IDropEvent.html":{}}}],["due",{"_index":3660,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dummy",{"_index":4037,"title":{},"body":{"index.html":{}}}],["duration",{"_index":764,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{}}}],["dynamic",{"_index":157,"title":{},"body":{"classes/EventGenerator.html":{},"changelog.html":{},"dependencies.html":{}}}],["e",{"_index":590,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/UiClipboardDirective.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["e.preventdefault",{"_index":2389,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["e.stopimmediatepropagation",{"_index":2385,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["e.stoppropagation",{"_index":2392,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["e.trim().tolowercase",{"_index":1764,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["each",{"_index":3645,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["eager",{"_index":311,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["early",{"_index":3333,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["ease",{"_index":3990,"title":{},"body":{"index.html":{}}}],["easier",{"_index":3974,"title":{},"body":{"index.html":{}}}],["easily",{"_index":249,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["easy",{"_index":235,"title":{},"body":{"classes/FakeFileList.html":{},"index.html":{}}}],["ed",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["edge",{"_index":447,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["edge.ts",{"_index":3865,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["edgy",{"_index":2712,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["efefef!important",{"_index":4217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":2854,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["effects",{"_index":87,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eg",{"_index":419,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IFilterModel.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{}}}],["el",{"_index":1286,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["el.childnodes",{"_index":1288,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["el.children",{"_index":1287,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["elegant",{"_index":4024,"title":{},"body":{"index.html":{}}}],["element",{"_index":1129,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDragAndDropFileDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["element.children.length",{"_index":1773,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["element.contains((ev.target",{"_index":1505,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["element.focus",{"_index":1276,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["element_node",{"_index":1262,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["elementref",{"_index":370,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{}}}],["elementref(this._labelelement",{"_index":2529,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["elementref.nativeelement",{"_index":1222,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{}}}],["elements",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["ellipsis",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["embedded",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["emission",{"_index":1003,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["emissions",{"_index":1481,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["emit",{"_index":304,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{}}}],["emitevent",{"_index":1183,"title":{},"body":{"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["emits",{"_index":1052,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["emitted",{"_index":3320,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/functions.html":{}}}],["emittedfiles",{"_index":1768,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["emittedfiles.length",{"_index":1770,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["emmited",{"_index":3296,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["empty",{"_index":436,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{},"index.html":{}}}],["emptystatevalue",{"_index":550,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{}}}],["enable",{"_index":1214,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"changelog.html":{}}}],["enablecustomvalue",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["enabled",{"_index":2145,"title":{},"body":{"injectables/UiGridIntl.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["encapsulation",{"_index":810,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["enclosing",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":1126,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"components/UiGridSearchComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"index.html":{}}}],["ends",{"_index":3297,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["enforce",{"_index":4051,"title":{},"body":{"index.html":{}}}],["enhanced",{"_index":4077,"title":{},"body":{"index.html":{}}}],["enough",{"_index":1472,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["enqueue",{"_index":1106,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["enqueue(msg",{"_index":1111,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["enqueuefocus",{"_index":1239,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["enqueues",{"_index":1253,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["ensure",{"_index":1029,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["enter",{"_index":658,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"injectables/UiSuggestIntl.html":{},"components/UiTreeSelectComponent.html":{}}}],["entity",{"_index":574,"title":{},"body":{"interfaces/IFilterModel.html":{}}}],["entry",{"_index":575,"title":{},"body":{"interfaces/IGridDataEntry.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"directives/UiGridRowConfigDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["enum",{"_index":831,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["enumerations",{"_index":3905,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":4035,"title":{},"body":{"index.html":{}}}],["equals",{"_index":570,"title":{},"body":{"interfaces/IFilterModel.html":{}}}],["error",{"_index":833,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('`componentportal",{"_index":815,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["error('missing",{"_index":1531,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["error('the",{"_index":692,"title":{},"body":{"interfaces/IRegexLike.html":{},"components/UiPasswordToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["error(`key",{"_index":225,"title":{},"body":{"classes/EventGenerator.html":{}}}],["error(`node",{"_index":1180,"title":{},"body":{"classes/TreeUtils.html":{}}}],["errorstate",{"_index":3081,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["errorstatematcher",{"_index":3044,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["es",{"_index":3891,"title":{},"body":{"dependencies.html":{}}}],["es/clonedeep",{"_index":3040,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["es/isequal",{"_index":965,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["es/startcase",{"_index":2621,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["escape",{"_index":672,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["eslint",{"_index":172,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"injectables/UiPasswordComplexityIntl.html":{},"injectables/UiPasswordToggleIntl.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["eslint/component",{"_index":731,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["eslint/directive",{"_index":1215,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiNgLetDirective.html":{}}}],["eslint/member",{"_index":976,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["eslint/naming",{"_index":1857,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["eslint/no",{"_index":1930,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["eslint/prefer",{"_index":1289,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["etc",{"_index":572,"title":{},"body":{"interfaces/IFilterModel.html":{}}}],["ev",{"_index":183,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["ev.datatransfer",{"_index":1749,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["ev.datatransfer.items",{"_index":1750,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["ev.datatransfer.items.length",{"_index":1751,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["ev.preventdefault",{"_index":1780,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["ev.stoppropagation",{"_index":1781,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["ev.target",{"_index":1733,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["evaluated",{"_index":2420,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["even",{"_index":2034,"title":{},"body":{"directives/UiGridFooterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiNgLetDirective.html":{},"changelog.html":{}}}],["event",{"_index":17,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDropEvent.html":{},"interfaces/ISortModel.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"license.html":{}}}],["event('dragevent",{"_index":167,"title":{},"body":{"classes/EventGenerator.html":{}}}],["event('inputevent",{"_index":188,"title":{},"body":{"classes/EventGenerator.html":{}}}],["event.initevent('click",{"_index":160,"title":{},"body":{"classes/EventGenerator.html":{}}}],["event.initevent('dblclick",{"_index":164,"title":{},"body":{"classes/EventGenerator.html":{}}}],["event.initevent('input",{"_index":195,"title":{},"body":{"classes/EventGenerator.html":{}}}],["event.initevent('mouseenter",{"_index":162,"title":{},"body":{"classes/EventGenerator.html":{}}}],["event.initevent('mouseleave",{"_index":163,"title":{},"body":{"classes/EventGenerator.html":{}}}],["event.initevent('mousemove",{"_index":199,"title":{},"body":{"classes/EventGenerator.html":{}}}],["event.stoppropagation",{"_index":3263,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["event.ts",{"_index":526,"title":{},"body":{"interfaces/IDropEvent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["eventemitter",{"_index":1063,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["eventgenerator",{"_index":1,"title":{"classes/EventGenerator.html":{}},"body":{"classes/EventGenerator.html":{},"changelog.html":{},"coverage.html":{}}}],["eventgenerator._getkey(key",{"_index":205,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator._key('keydown",{"_index":178,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator._key('keyup",{"_index":179,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator.cursor.ref",{"_index":53,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator.cursor.ref.style.background",{"_index":65,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator.cursor.ref.style.display",{"_index":57,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator.cursor.ref.style.height",{"_index":64,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator.cursor.ref.style.left",{"_index":59,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator.cursor.ref.style.position",{"_index":55,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator.cursor.ref.style.top",{"_index":61,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventgenerator.cursor.ref.style.width",{"_index":62,"title":{},"body":{"classes/EventGenerator.html":{}}}],["eventkey",{"_index":3267,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["eventname",{"_index":1727,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["events",{"_index":150,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["events/page",{"_index":2028,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["everyone",{"_index":3975,"title":{},"body":{"index.html":{}}}],["everything",{"_index":3952,"title":{},"body":{"index.html":{}}}],["evolution",{"_index":4071,"title":{},"body":{"index.html":{}}}],["exact",{"_index":450,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["example",{"_index":3419,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["exist",{"_index":227,"title":{},"body":{"classes/EventGenerator.html":{}}}],["existing",{"_index":2983,"title":{},"body":{"injectables/UiSuggestIntl.html":{},"changelog.html":{}}}],["exists",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["expand",{"_index":3161,"title":{},"body":{"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["expand(node",{"_index":3188,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["expandable",{"_index":921,"title":{},"body":{"interfaces/ISuggestValue.html":{}}}],["expanded",{"_index":1369,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridExpandedRowDirective.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expandinline",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["experimental",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":3938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["explorer.ts",{"_index":3868,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":156,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["exportas",{"_index":2797,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["exports",{"_index":1097,"title":{},"body":{"modules/KeyboardShortcutModule.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"changelog.html":{}}}],["expose",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["exposed",{"_index":415,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["express",{"_index":4110,"title":{},"body":{"license.html":{}}}],["extend",{"_index":3294,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["extends",{"_index":331,"title":{},"body":{"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ITreeNode.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["extensions",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["extensions.json",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":777,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{}}}],["extracssclasses",{"_index":765,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["extract",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["extractcookies",{"_index":3857,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extrapanelclasses",{"_index":896,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["f",{"_index":618,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["fab",{"_index":1452,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["fab[style",{"_index":1447,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["fab]:not([${disable_auto_accessible_label_attribute",{"_index":1216,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{}}}],["fab][ui",{"_index":1413,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["fab][uispinnerbutton",{"_index":1415,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["facilitates",{"_index":234,"title":{},"body":{"classes/FakeFileList.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["fact",{"_index":4065,"title":{},"body":{"index.html":{}}}],["factory",{"_index":1592,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"miscellaneous/functions.html":{}}}],["fade",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["failed",{"_index":4223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fake",{"_index":152,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDropEvent.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["fakefilelist",{"_index":151,"title":{"classes/FakeFileList.html":{}},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/IDropEvent.html":{},"changelog.html":{},"coverage.html":{}}}],["fakefilelist(files",{"_index":182,"title":{},"body":{"classes/EventGenerator.html":{}}}],["fallback",{"_index":2419,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"index.html":{}}}],["false",{"_index":200,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/variables.html":{}}}],["feat",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":4057,"title":{},"body":{"index.html":{}}}],["features",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3954,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":952,"title":{},"body":{"interfaces/ISuggestValues.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["fetching",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["fetchsize",{"_index":2289,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["fetchstrategy",{"_index":300,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["field",{"_index":907,"title":{},"body":{"interfaces/ISortModel.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"modules/UiGridSearchModule.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"miscellaneous/variables.html":{}}}],["field'},{'name",{"_index":1399,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["field.ts",{"_index":2995,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"coverage.html":{}}}],["field.ts:101",{"_index":3030,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:111",{"_index":3007,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:117",{"_index":3032,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:127",{"_index":3036,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:135",{"_index":3038,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:144",{"_index":3014,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:177",{"_index":3009,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:195",{"_index":3017,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:202",{"_index":3016,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:275",{"_index":3021,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:44",{"_index":3022,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:51",{"_index":3018,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:60",{"_index":3012,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:81",{"_index":3020,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:88",{"_index":3027,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["field.ts:97",{"_index":3011,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["file.directive",{"_index":1787,"title":{},"body":{"modules/UiDragAndDropModule.html":{}}}],["file.directive.ts",{"_index":1657,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"coverage.html":{}}}],["file.directive.ts:167",{"_index":1696,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:180",{"_index":1695,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:198",{"_index":1694,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:210",{"_index":1686,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:221",{"_index":1689,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:31",{"_index":1677,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:38",{"_index":1673,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:45",{"_index":1675,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:52",{"_index":1679,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:59",{"_index":1670,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:66",{"_index":1681,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:73",{"_index":1683,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.directive.ts:76",{"_index":1685,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file.module.ts",{"_index":1786,"title":{},"body":{"modules/UiDragAndDropModule.html":{}}}],["file.name.tolowercase().endswith(extension",{"_index":1767,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["file/src/ui",{"_index":1656,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"coverage.html":{}}}],["filebrowseref",{"_index":1661,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["filechange",{"_index":1665,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["fileclear",{"_index":1666,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["fileclearref",{"_index":1662,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["filelist",{"_index":181,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["files",{"_index":109,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/IDropEvent.html":{},"directives/UiDragAndDropFileDirective.html":{},"license.html":{}}}],["files.foreach((file",{"_index":278,"title":{},"body":{"classes/FakeFileList.html":{}}}],["files.foreach(file",{"_index":282,"title":{},"body":{"classes/FakeFileList.html":{}}}],["files?.length",{"_index":1759,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["filetype",{"_index":1663,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["fill",{"_index":1957,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["filter",{"_index":364,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["filter'},{'name",{"_index":1366,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["filter(_",{"_index":2372,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["filter(boolean",{"_index":3255,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["filter(c",{"_index":1016,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["filter(ev",{"_index":1504,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["filter(o",{"_index":997,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["filter(property",{"_index":1892,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["filter(this._filtertouchedrange",{"_index":3336,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["filter(this._isvalidrange",{"_index":3344,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["filter.directive",{"_index":1855,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{}}}],["filter.directive.ts",{"_index":535,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"coverage.html":{}}}],["filter.directive.ts:32",{"_index":2279,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["filter.directive.ts:39",{"_index":2283,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["filter.directive.ts:46",{"_index":2282,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["filter.directive.ts:48",{"_index":2000,"title":{},"body":{"directives/UiGridDropdownFilterDirective.html":{}}}],["filter.directive.ts:53",{"_index":2275,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["filter.directive.ts:55",{"_index":2001,"title":{},"body":{"directives/UiGridDropdownFilterDirective.html":{}}}],["filter.directive.ts:62",{"_index":2002,"title":{},"body":{"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["filter.directive.ts:69",{"_index":1999,"title":{},"body":{"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["filter.directive.ts:75",{"_index":2003,"title":{},"body":{"directives/UiGridDropdownFilterDirective.html":{}}}],["filter.directive.ts:76",{"_index":2005,"title":{},"body":{"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["filter.directive.ts:77",{"_index":2287,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["filter.directive.ts:84",{"_index":2281,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["filter.directive.ts:87",{"_index":2004,"title":{},"body":{"directives/UiGridDropdownFilterDirective.html":{}}}],["filter.directive.ts:95",{"_index":2286,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["filtering",{"_index":1826,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["filters",{"_index":303,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["filters/ui",{"_index":1854,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{}}}],["filterscount",{"_index":2179,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["find",{"_index":1038,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"directives/UiMatFormFieldRequiredDirective.html":{}}}],["firefox",{"_index":3955,"title":{},"body":{"index.html":{}}}],["first",{"_index":1234,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["firstcolumn",{"_index":1034,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["firstcolumn.disabletoggle",{"_index":1042,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["firstcolumn.property",{"_index":1041,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["firstvaluefrom",{"_index":1114,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["firstvaluefrom(of(void",{"_index":1136,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["fit",{"_index":4154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":4115,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2416,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["fixme",{"_index":2530,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["fixup",{"_index":4026,"title":{},"body":{"index.html":{}}}],["flag",{"_index":922,"title":{},"body":{"interfaces/ISuggestValue.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["flaky",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["flat",{"_index":1407,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["flattened",{"_index":3173,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["flattreecontrol",{"_index":1159,"title":{},"body":{"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{}}}],["flattreecontrol(treeutils.getnodelevel",{"_index":3232,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["flex",{"_index":1971,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["flexbox",{"_index":1963,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["flickering",{"_index":1691,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["float",{"_index":3019,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["fn",{"_index":3117,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["focus",{"_index":1240,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiTreeItemComponent.html":{}}}],["focus(element",{"_index":1254,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["focusable",{"_index":1235,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["focusable_elements_query",{"_index":3811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["focusableoption",{"_index":3137,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["focused",{"_index":1249,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["focuskeymanager",{"_index":3219,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["focuskeymanager(this.items",{"_index":3240,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["focusmonitor",{"_index":2480,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["folder",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":405,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":1972,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{}}}],["fonts",{"_index":2711,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["footer",{"_index":2009,"title":{},"body":{"directives/UiGridFooterDirective.html":{},"changelog.html":{}}}],["footer'},{'name",{"_index":1373,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["footer.directive",{"_index":2224,"title":{},"body":{"modules/UiGridModule.html":{}}}],["footer.directive.ts",{"_index":2008,"title":{},"body":{"directives/UiGridFooterDirective.html":{},"coverage.html":{}}}],["footer.directive.ts:28",{"_index":2016,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["footer.directive.ts:35",{"_index":2018,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["footer.directive.ts:44",{"_index":2017,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["footer.directive.ts:53",{"_index":2019,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["footer.directive.ts:60",{"_index":2015,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["footer.directive.ts:66",{"_index":2014,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["footer.directive.ts:73",{"_index":2020,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["footer.directive.ts:79",{"_index":2025,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["footer/ui",{"_index":2223,"title":{},"body":{"modules/UiGridModule.html":{}}}],["force",{"_index":2708,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["foreach(action",{"_index":2458,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["foreach(c",{"_index":1005,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["form",{"_index":1398,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":341,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["format(this.dateformat",{"_index":469,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["format.ts",{"_index":1789,"title":{},"body":{"directives/UiFormatDirective.html":{},"coverage.html":{}}}],["format.ts:15",{"_index":1791,"title":{},"body":{"directives/UiFormatDirective.html":{}}}],["format.ts:22",{"_index":1792,"title":{},"body":{"directives/UiFormatDirective.html":{}}}],["format.ts:26",{"_index":1793,"title":{},"body":{"directives/UiFormatDirective.html":{}}}],["formats",{"_index":394,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["formatted",{"_index":421,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["formatting",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["formgroupdirective",{"_index":3041,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["forms",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["forwardref",{"_index":3148,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["found",{"_index":1181,"title":{},"body":{"classes/TreeUtils.html":{},"changelog.html":{}}}],["free",{"_index":4087,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":577,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["fromevent",{"_index":1463,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["fromevent((document",{"_index":1495,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["fromevent(this._document.defaultview",{"_index":3380,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["fromnow",{"_index":465,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["func",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":393,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiDateFormatDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridRowConfigDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSuggestIntl.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":3341,"title":{"miscellaneous/functions.html":{}},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":4102,"title":{},"body":{"license.html":{}}}],["g",{"_index":621,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["generated",{"_index":3405,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":97,"title":{},"body":{"classes/EventGenerator.html":{},"injectables/UiGridIntl.html":{},"miscellaneous/functions.html":{}}}],["generator",{"_index":89,"title":{},"body":{"classes/EventGenerator.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{}}}],["generator.ts",{"_index":7,"title":{},"body":{"classes/EventGenerator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["generator.ts:107",{"_index":146,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:117",{"_index":148,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:130",{"_index":119,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:142",{"_index":129,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:153",{"_index":108,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:173",{"_index":88,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:195",{"_index":114,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:208",{"_index":96,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:229",{"_index":131,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:26",{"_index":76,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:57",{"_index":134,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:67",{"_index":137,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:77",{"_index":139,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:87",{"_index":141,"title":{},"body":{"classes/EventGenerator.html":{}}}],["generator.ts:97",{"_index":144,"title":{},"body":{"classes/EventGenerator.html":{}}}],["getariasort",{"_index":1845,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["getclick",{"_index":133,"title":{},"body":{"classes/EventGenerator.html":{}}}],["getcomponentportal",{"_index":2891,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["getdatasource",{"_index":3214,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["getdate",{"_index":1646,"title":{},"body":{"directives/UiDateFormatDirective.html":{}}}],["getdoubleclick",{"_index":140,"title":{},"body":{"classes/EventGenerator.html":{}}}],["getdragend",{"_index":147,"title":{},"body":{"classes/EventGenerator.html":{}}}],["getdragleave",{"_index":145,"title":{},"body":{"classes/EventGenerator.html":{}}}],["getdragover",{"_index":143,"title":{},"body":{"classes/EventGenerator.html":{}}}],["getempty",{"_index":3035,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["getisdown",{"_index":3037,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["getisformcontrol",{"_index":3025,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["getisnodeexpandable",{"_index":1143,"title":{},"body":{"classes/TreeUtils.html":{}}}],["getisnodeexpandable(undefined",{"_index":1155,"title":{},"body":{"classes/TreeUtils.html":{}}}],["getitemsize",{"_index":3031,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["getlength",{"_index":269,"title":{},"body":{"classes/FakeFileList.html":{}}}],["getminheight",{"_index":1636,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["getmouseenter",{"_index":136,"title":{},"body":{"classes/EventGenerator.html":{}}}],["getmouseleave",{"_index":138,"title":{},"body":{"classes/EventGenerator.html":{}}}],["getnodebykey",{"_index":1144,"title":{},"body":{"classes/TreeUtils.html":{}}}],["getnodebykey(key",{"_index":1157,"title":{},"body":{"classes/TreeUtils.html":{}}}],["getnodechildren",{"_index":1145,"title":{},"body":{"classes/TreeUtils.html":{}}}],["getnodechildren(undefined",{"_index":1161,"title":{},"body":{"classes/TreeUtils.html":{}}}],["getnodelevel",{"_index":1146,"title":{},"body":{"classes/TreeUtils.html":{}}}],["getnodelevel(undefined",{"_index":1163,"title":{},"body":{"classes/TreeUtils.html":{}}}],["getoptions",{"_index":2351,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["getpagecount",{"_index":1922,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["getpagelabel",{"_index":2563,"title":{},"body":{"injectables/UiMatPaginatorIntl.html":{}}}],["getpagelabel(currentpage",{"_index":1928,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["getplaceholder",{"_index":3028,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["getprimary",{"_index":1847,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["getrequired",{"_index":3024,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["gets",{"_index":135,"title":{},"body":{"classes/EventGenerator.html":{},"index.html":{}}}],["getseconds",{"_index":2878,"title":{},"body":{"components/UiSecondFormatDirective.html":{}}}],["getselected",{"_index":2354,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["getshouldlabelfloat",{"_index":3023,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["getstate",{"_index":2024,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["getter",{"_index":816,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["getting",{"_index":3393,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getvalue",{"_index":2255,"title":{},"body":{"components/UiGridSearchComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["getvisible",{"_index":1850,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["getwidth",{"_index":1842,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["gh_npm_registry_token",{"_index":4036,"title":{},"body":{"index.html":{}}}],["git",{"_index":4022,"title":{},"body":{"index.html":{}}}],["github",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":395,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiSecondFormatDirective.html":{}}}],["global",{"_index":1485,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["globaloptions",{"_index":4164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glow",{"_index":2702,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["go",{"_index":3966,"title":{},"body":{"index.html":{}}}],["goals",{"_index":3949,"title":{},"body":{"index.html":{}}}],["goes",{"_index":3996,"title":{},"body":{"index.html":{}}}],["gone",{"_index":3972,"title":{},"body":{"index.html":{}}}],["good",{"_index":4017,"title":{},"body":{"index.html":{}}}],["granted",{"_index":4086,"title":{},"body":{"license.html":{}}}],["great",{"_index":3946,"title":{},"body":{"index.html":{}}}],["greaterthan",{"_index":571,"title":{},"body":{"interfaces/IFilterModel.html":{}}}],["grid",{"_index":289,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IVisibleDiff.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grid'},{'name",{"_index":1337,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["grid.component",{"_index":2227,"title":{},"body":{"modules/UiGridModule.html":{}}}],["grid.component.ts",{"_index":3808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["grid.intl.ts",{"_index":2083,"title":{},"body":{"injectables/UiGridIntl.html":{},"coverage.html":{}}}],["grid.intl.ts:100",{"_index":2118,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:105",{"_index":2133,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:110",{"_index":2138,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:115",{"_index":2161,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:120",{"_index":2123,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:125",{"_index":2149,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:132",{"_index":2114,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:144",{"_index":2173,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:154",{"_index":2142,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:167",{"_index":2144,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:170",{"_index":2134,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:180",{"_index":2170,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:188",{"_index":2126,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:196",{"_index":2130,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:204",{"_index":2131,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:22",{"_index":2119,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:28",{"_index":2156,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:34",{"_index":2158,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:39",{"_index":2160,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:44",{"_index":2125,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:49",{"_index":2124,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:54",{"_index":2146,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:60",{"_index":2151,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:65",{"_index":2159,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:70",{"_index":2169,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:75",{"_index":2165,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:80",{"_index":2167,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:85",{"_index":2164,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:90",{"_index":2148,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.intl.ts:95",{"_index":2154,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["grid.module.ts",{"_index":2197,"title":{},"body":{"modules/UiGridModule.html":{}}}],["grid/src/body/ui",{"_index":1798,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"coverage.html":{}}}],["grid/src/components/ui",{"_index":1902,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"components/UiGridSearchComponent.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grid/src/events/page",{"_index":4146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["grid/src/filters/ui",{"_index":533,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"coverage.html":{}}}],["grid/src/footer/ui",{"_index":2007,"title":{},"body":{"directives/UiGridFooterDirective.html":{},"coverage.html":{}}}],["grid/src/header/ui",{"_index":2042,"title":{},"body":{"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"coverage.html":{}}}],["grid/src/managers/data",{"_index":4147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["grid/src/managers/visibility",{"_index":960,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"coverage.html":{}}}],["grid/src/models/datamodel.ts",{"_index":288,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"coverage.html":{}}}],["grid/src/models/filtermodel.ts",{"_index":566,"title":{},"body":{"interfaces/IFilterModel.html":{},"coverage.html":{}}}],["grid/src/models/selectiondiff.ts",{"_index":751,"title":{},"body":{"interfaces/ISelectionDiff.html":{},"coverage.html":{}}}],["grid/src/models/sortmodel.ts",{"_index":903,"title":{},"body":{"interfaces/ISortModel.html":{},"coverage.html":{}}}],["grid/src/models/visiblemodel.ts",{"_index":1044,"title":{},"body":{"interfaces/IVisibleModel.html":{},"coverage.html":{}}}],["grid/src/ui",{"_index":2082,"title":{},"body":{"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gridheaderactionsnotice",{"_index":2092,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["gridoptions",{"_index":285,"title":{"interfaces/GridOptions.html":{}},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"coverage.html":{}}}],["group",{"_index":4246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guidline",{"_index":4053,"title":{},"body":{"index.html":{}}}],["guidlines",{"_index":4076,"title":{},"body":{"index.html":{}}}],["h",{"_index":624,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["hack",{"_index":440,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["half",{"_index":1477,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["handlemultiple(value",{"_index":2292,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["handler",{"_index":1490,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["handles",{"_index":2171,"title":{},"body":{"injectables/UiGridIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["hard",{"_index":1471,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["haschildren",{"_index":334,"title":{},"body":{"interfaces/IBaseNode.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/ITreeNode.html":{},"classes/TreeUtils.html":{}}}],["hash",{"_index":3894,"title":{},"body":{"dependencies.html":{}}}],["hassle",{"_index":4043,"title":{},"body":{"index.html":{}}}],["hassupportforpreferscolorscheme",{"_index":3861,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["hasvalue",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["having",{"_index":4068,"title":{},"body":{"index.html":{}}}],["head",{"_index":4031,"title":{},"body":{"index.html":{}}}],["header",{"_index":1376,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["header'},{'name",{"_index":1380,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["header.directive",{"_index":2226,"title":{},"body":{"modules/UiGridModule.html":{}}}],["header.directive.ts",{"_index":2048,"title":{},"body":{"directives/UiGridHeaderDirective.html":{},"coverage.html":{}}}],["header.directive.ts:29",{"_index":2054,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["header.directive.ts:36",{"_index":2062,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["header.directive.ts:43",{"_index":2056,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["header.directive.ts:50",{"_index":2061,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["header.directive.ts:57",{"_index":2063,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["header.directive.ts:64",{"_index":2064,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["header/ui",{"_index":2225,"title":{},"body":{"modules/UiGridModule.html":{}}}],["headers",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":1449,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["height.px",{"_index":1624,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["help",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":120,"title":{},"body":{"classes/EventGenerator.html":{}}}],["helper.ts",{"_index":3786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["helpful",{"_index":90,"title":{},"body":{"classes/EventGenerator.html":{}}}],["helps",{"_index":2844,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{},"index.html":{}}}],["here",{"_index":3964,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":4085,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1020,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"components/UiButtonProgressBarComponent.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridFooterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["hide",{"_index":2700,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"changelog.html":{}}}],["hidepagesize",{"_index":2010,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["hidevalidruledefinition",{"_index":2630,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["hiding",{"_index":2033,"title":{},"body":{"directives/UiGridFooterDirective.html":{},"changelog.html":{}}}],["historical",{"_index":4069,"title":{},"body":{"index.html":{}}}],["history",{"_index":4012,"title":{},"body":{"index.html":{}}}],["holders",{"_index":4119,"title":{},"body":{"license.html":{}}}],["hook",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["hooks",{"_index":3983,"title":{},"body":{"index.html":{}}}],["horizontalposition",{"_index":2916,"title":{},"body":{"modules/UiSnackBarModule.html":{}}}],["hostbinding",{"_index":1195,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDragAndDropFileDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{}}}],["hostbinding('attr.aria",{"_index":1220,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{}}}],["hostbinding('class",{"_index":1921,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["hostbinding('class.file",{"_index":1701,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["hostbinding('class.floating",{"_index":3050,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["hostbinding('class.form",{"_index":3057,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["hostbinding('style",{"_index":3226,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["hostbinding('style.min",{"_index":1637,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["hostbinding(`class.${component_selector",{"_index":2357,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["hostbindings",{"_index":1622,"title":{},"body":{"components/UiContentSpinnerComponent.html":{},"directives/UiDragAndDropFileDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["hostclass",{"_index":1911,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["hostlistener",{"_index":1073,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["hostlistener('document:keydown",{"_index":1070,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["hostlistener('document:keyup",{"_index":1072,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["hostlistener('dragend",{"_index":1754,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["hostlistener('dragenter",{"_index":1756,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["hostlistener('dragleave",{"_index":1752,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["hostlistener('dragover",{"_index":1747,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["hostlistener('drop",{"_index":1743,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["hostlisteners",{"_index":1059,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["hotfix1",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["hover",{"_index":86,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":1329,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["htmlbuttonelement",{"_index":2444,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["htmlelement",{"_index":49,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["htmlinputelement",{"_index":1278,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"components/UiPasswordToggleComponent.html":{}}}],["htmlinputelement`s",{"_index":180,"title":{},"body":{"classes/EventGenerator.html":{}}}],["htmlinputelements",{"_index":91,"title":{},"body":{"classes/EventGenerator.html":{}}}],["https://github.com/angular/angular/issues/8785",{"_index":2534,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["https://github.com/angular/components/blob/master/src/material/menu/menu",{"_index":4256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/angular/material2/blob/master/src/lib/button/_button",{"_index":1439,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["human",{"_index":719,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["husky",{"_index":3982,"title":{},"body":{"index.html":{}}}],["ibasenode",{"_index":326,"title":{"interfaces/IBaseNode.html":{}},"body":{"interfaces/IBaseNode.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/ITreeNode.html":{},"coverage.html":{}}}],["icon",{"_index":79,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValue.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icon[tabindex",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["icon[tabindex]:not([${disable_auto_accessible_label_attribute",{"_index":1219,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{}}}],["icon_map",{"_index":837,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icon_map.get(type",{"_index":875,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["icononly",{"_index":944,"title":{},"body":{"interfaces/ISuggestValue.html":{}}}],["icons",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":324,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/ISuggestValue.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["idateformatoptions",{"_index":336,"title":{"interfaces/IDateFormatOptions.html":{}},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identical",{"_index":3340,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["identification",{"_index":1841,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["identifier",{"_index":314,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/ISuggestValue.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["identifier(length",{"_index":3934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["idproperty",{"_index":307,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{}}}],["idropdownoption",{"_index":532,"title":{"interfaces/IDropdownOption.html":{}},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"coverage.html":{}}}],["idropdownoption['value",{"_index":551,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{}}}],["idropevent",{"_index":112,"title":{"interfaces/IDropEvent.html":{}},"body":{"classes/EventGenerator.html":{},"interfaces/IDropEvent.html":{},"coverage.html":{}}}],["ids.join",{"_index":3109,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["idx",{"_index":263,"title":{},"body":{"classes/FakeFileList.html":{}}}],["ie",{"_index":431,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"changelog.html":{},"index.html":{}}}],["ie11",{"_index":1968,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"index.html":{}}}],["ifiltermodel",{"_index":565,"title":{"interfaces/IFilterModel.html":{}},"body":{"interfaces/IFilterModel.html":{},"directives/UiGridHeaderDirective.html":{},"coverage.html":{}}}],["iflatnodeobject",{"_index":333,"title":{"interfaces/IFlatNodeObject.html":{}},"body":{"interfaces/IBaseNode.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/ITreeNode.html":{},"classes/TreeUtils.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["ignore",{"_index":386,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValue.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridRowActionDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["ignored",{"_index":924,"title":{},"body":{"interfaces/ISuggestValue.html":{}}}],["igriddataentry",{"_index":313,"title":{"interfaces/IGridDataEntry.html":{}},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"coverage.html":{}}}],["ikey",{"_index":154,"title":{"interfaces/IKey.html":{}},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"coverage.html":{}}}],["ikeymodifier",{"_index":118,"title":{"interfaces/IKeyModifier.html":{}},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"coverage.html":{}}}],["image",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":3249,"title":{},"body":{"components/UiTreeSelectComponent.html":{},"changelog.html":{},"index.html":{}}}],["implements",{"_index":232,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["implicit",{"_index":2583,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["implied",{"_index":4111,"title":{},"body":{"license.html":{}}}],["import",{"_index":149,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/IVisibleDiff.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["important",{"_index":1448,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["imported",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["importent",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["imports",{"_index":1619,"title":{},"body":{"modules/UiContentLoaderModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"changelog.html":{}}}],["improve",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["inandout(invalid_rule_in",{"_index":4189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inandout(progress_in",{"_index":4187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inandout(rule_list_in",{"_index":4191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inc",{"_index":4083,"title":{},"body":{"license.html":{}}}],["include",{"_index":3285,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["included",{"_index":1831,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"license.html":{}}}],["including",{"_index":4093,"title":{},"body":{"license.html":{}}}],["incomplete",{"_index":4229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["increment",{"_index":2679,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indefinitely",{"_index":3942,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indeterminate",{"_index":2790,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"changelog.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":267,"title":{},"body":{"classes/FakeFileList.html":{}}}],["indexes",{"_index":3303,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["indicate",{"_index":3302,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["indicator",{"_index":2624,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"changelog.html":{}}}],["indicator'},{'name",{"_index":1345,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["indicator.animations",{"_index":2651,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.animations.ts",{"_index":3815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indicator.component",{"_index":2724,"title":{},"body":{"modules/UiPasswordIndicatorModule.html":{}}}],["indicator.component.html",{"_index":2626,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.scss",{"_index":2625,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":2623,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["indicator.component.ts:121",{"_index":2638,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:126",{"_index":2645,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:52",{"_index":2635,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:55",{"_index":2637,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:58",{"_index":2636,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:60",{"_index":2644,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:61",{"_index":2643,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:62",{"_index":2646,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:63",{"_index":2642,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:64",{"_index":2641,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:66",{"_index":2634,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:69",{"_index":2640,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.component.ts:73",{"_index":2639,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.intl",{"_index":2652,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.intl.ts",{"_index":2609,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{},"coverage.html":{}}}],["indicator.intl.ts:11",{"_index":2616,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["indicator.intl.ts:12",{"_index":2617,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["indicator.intl.ts:13",{"_index":2615,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["indicator.intl.ts:15",{"_index":2619,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["indicator.intl.ts:16",{"_index":2618,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["indicator.module.ts",{"_index":2721,"title":{},"body":{"modules/UiPasswordIndicatorModule.html":{}}}],["indicator.validator",{"_index":2653,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["indicator.validator.ts",{"_index":679,"title":{},"body":{"interfaces/IRegexLike.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator/src/ui",{"_index":678,"title":{},"body":{"interfaces/IRegexLike.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":788,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"injectables/UiGridIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["ini",{"_index":3641,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["initial",{"_index":428,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["initialize",{"_index":50,"title":{},"body":{"classes/EventGenerator.html":{}}}],["initialized",{"_index":2577,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["initially",{"_index":3970,"title":{},"body":{"index.html":{}}}],["initialselection",{"_index":3165,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["initialselection(value",{"_index":3222,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["inject",{"_index":371,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["inject(cdkvirtualscrollviewport",{"_index":3324,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["inject(document",{"_index":1493,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["inject(forwardref",{"_index":3150,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["inject(mat_paginator_default_options",{"_index":1933,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["inject(mat_snack_bar_data",{"_index":825,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["inject(mat_snack_bar_default_options",{"_index":856,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["inject(mat_tooltip_default_options",{"_index":2514,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["inject(mat_tooltip_scroll_strategy",{"_index":2513,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["inject(ui_dateformat_options",{"_index":475,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["inject(ui_mat_snack_bar_default_options",{"_index":859,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["inject(ui_secondformat_options",{"_index":739,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["inject(uipasswordtoggleintl",{"_index":2743,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["injectable",{"_index":794,"title":{"injectables/QueuedAnnouncer.html":{},"injectables/UiClickOutsideService.html":{},"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"injectables/UiPasswordComplexityIntl.html":{},"injectables/UiPasswordToggleIntl.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{}},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"injectables/UiPasswordComplexityIntl.html":{},"injectables/UiPasswordToggleIntl.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"coverage.html":{}}}],["injectables",{"_index":1102,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"injectables/UiClickOutsideService.html":{},"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"injectables/UiPasswordComplexityIntl.html":{},"injectables/UiPasswordToggleIntl.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"overview.html":{}}}],["injecting",{"_index":790,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["injection",{"_index":382,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":372,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiDateFormatDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["injectiontoken('uidateformat",{"_index":385,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('uimatsnackbarconfig",{"_index":848,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('uisnackbarservice",{"_index":849,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken>('uigrid",{"_index":4201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('uisecondformat",{"_index":717,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":795,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["injector.create",{"_index":819,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["injects",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":2045,"title":{},"body":{"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"changelog.html":{}}}],["inlinebuttons",{"_index":2071,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["input",{"_index":31,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISuggestValue.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["input:not([hidden",{"_index":4197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input`s",{"_index":274,"title":{},"body":{"classes/FakeFileList.html":{}}}],["inputcontrol",{"_index":3079,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["inputs",{"_index":253,"title":{},"body":{"classes/FakeFileList.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["inside",{"_index":1236,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiNgLetDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["installation",{"_index":3960,"title":{},"body":{"index.html":{}}}],["instance",{"_index":276,"title":{},"body":{"classes/FakeFileList.html":{}}}],["instanceof",{"_index":463,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["instantiate",{"_index":2533,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["instead",{"_index":299,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"changelog.html":{}}}],["integrate",{"_index":416,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"index.html":{}}}],["integration",{"_index":3950,"title":{},"body":{"index.html":{}}}],["intent",{"_index":914,"title":{},"body":{"interfaces/ISortModel.html":{}}}],["interaction",{"_index":13,"title":{},"body":{"classes/EventGenerator.html":{}}}],["interactive",{"_index":4027,"title":{},"body":{"index.html":{}}}],["interactivitychecker",{"_index":1261,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["interface",{"_index":233,"title":{"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"interfaces/VirtualScrollItem.html":{}},"body":{"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":286,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"interfaces/VirtualScrollItem.html":{},"overview.html":{}}}],["internal",{"_index":153,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValue.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["internal/ui",{"_index":1570,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{}}}],["internalkey",{"_index":222,"title":{},"body":{"classes/EventGenerator.html":{}}}],["internally",{"_index":4041,"title":{},"body":{"index.html":{}}}],["internationalization",{"_index":2084,"title":{},"body":{"injectables/UiGridIntl.html":{},"injectables/UiSuggestIntl.html":{}}}],["internet",{"_index":3867,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["interval",{"_index":360,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/functions.html":{}}}],["interval(relative_time_update_interval).pipe",{"_index":491,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["intervals",{"_index":3321,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["intl",{"_index":540,"title":{},"body":{"interfaces/IDropdownOption.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"changelog.html":{}}}],["intl.rulelabel(rule",{"_index":2697,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["introduced",{"_index":4047,"title":{},"body":{"index.html":{}}}],["invalid_rule_in",{"_index":3817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalid_rule_out",{"_index":3818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipasswordruleset",{"_index":683,"title":{},"body":{"interfaces/IRegexLike.html":{},"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ipasswordvalidationfn",{"_index":682,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iregexlike",{"_index":676,"title":{"interfaces/IRegexLike.html":{}},"body":{"interfaces/IRegexLike.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iregexlike).test.bind(obj",{"_index":691,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["irulevalidationstate",{"_index":684,"title":{},"body":{"interfaces/IRegexLike.html":{},"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["isaccepted",{"_index":1765,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["isanypropertychanged",{"_index":1890,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["isbrowserplatform",{"_index":3864,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["iscomponenttype(property",{"_index":830,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["iscustom",{"_index":943,"title":{},"body":{"interfaces/ISuggestValue.html":{}}}],["isdevmode",{"_index":966,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"directives/UiGridColumnDirective.html":{}}}],["isdirty",{"_index":984,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["isdown",{"_index":3006,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["isecondformatoptions",{"_index":709,"title":{"interfaces/ISecondFormatOptions.html":{}},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{},"coverage.html":{}}}],["isedge",{"_index":3866,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["iselectiondiff",{"_index":750,"title":{"interfaces/ISelectionDiff.html":{}},"body":{"interfaces/ISelectionDiff.html":{},"coverage.html":{}}}],["isequal",{"_index":963,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["isequal(checkednewvalue",{"_index":3074,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["isequal(current",{"_index":990,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["isequal(this._options",{"_index":2359,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["isequal(value",{"_index":3112,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["iserrorstate",{"_index":2627,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["isexpanded",{"_index":3162,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["isexpanded(node",{"_index":3191,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["isformcontrol",{"_index":3004,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["isformcontrol(value",{"_index":3063,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["isinternetexplorer",{"_index":1699,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnackbaralert",{"_index":759,"title":{"interfaces/ISnackBarAlert.html":{}},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"coverage.html":{}}}],["isnackbaroptions",{"_index":850,"title":{"interfaces/ISnackBarOptions.html":{}},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"coverage.html":{}}}],["isnan(total",{"_index":2177,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["isnan(width",{"_index":1870,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["isnottrimmedatbothends",{"_index":3359,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["isortmodel",{"_index":902,"title":{"interfaces/ISortModel.html":{}},"body":{"interfaces/ISortModel.html":{},"coverage.html":{}}}],["ispropertystring(property",{"_index":828,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["isregexlike",{"_index":689,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["isround",{"_index":1428,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["isselected",{"_index":2285,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["isselected(node",{"_index":3193,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["issue",{"_index":2846,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{},"changelog.html":{}}}],["issues",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["istemplateref(property",{"_index":829,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["istrimmedafter",{"_index":3356,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["istrimmedbefore",{"_index":3355,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["isuggestvalue",{"_index":916,"title":{"interfaces/ISuggestValue.html":{}},"body":{"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["isuggestvalue[]).push(value",{"_index":2293,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["isuggestvaluedata",{"_index":947,"title":{"interfaces/ISuggestValueData.html":{}},"body":{"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"coverage.html":{}}}],["isuggestvalues",{"_index":950,"title":{"interfaces/ISuggestValues.html":{}},"body":{"interfaces/ISuggestValues.html":{},"directives/UiGridSearchFilterDirective.html":{},"coverage.html":{}}}],["isvisible",{"_index":2728,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["it's",{"_index":1203,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiGridFooterDirective.html":{},"components/UiTreeSelectComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["italics",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":241,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"directives/UiGridFooterDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["item').focus",{"_index":3154,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item(idx",{"_index":259,"title":{},"body":{"classes/FakeFileList.html":{}}}],["item.component",{"_index":3221,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["item.component.html",{"_index":3139,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item.component.ts",{"_index":3136,"title":{},"body":{"components/UiTreeItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:30",{"_index":3143,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item.component.ts:33",{"_index":3142,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item.component.ts:36",{"_index":3144,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item.component.ts:39",{"_index":3141,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item.component.ts:46",{"_index":3145,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item.component.ts:50",{"_index":3146,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item.component.ts:55",{"_index":3147,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item.id",{"_index":2297,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["item.text",{"_index":932,"title":{},"body":{"interfaces/ISuggestValue.html":{}}}],["item/ui",{"_index":3135,"title":{},"body":{"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["item[node",{"_index":3138,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["item[node]'},{'name",{"_index":1350,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["itemcount",{"_index":2980,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["itemno",{"_index":2979,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["itempadding",{"_index":3166,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["items",{"_index":547,"title":{},"body":{"interfaces/IDropdownOption.html":{},"interfaces/ISuggestValue.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["items.length",{"_index":3343,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["items[end].loading",{"_index":3364,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["itemsize",{"_index":3005,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{}}}],["itemtemplate",{"_index":3159,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["iterable",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["iterableiterator",{"_index":266,"title":{},"body":{"classes/FakeFileList.html":{}}}],["itreenode",{"_index":330,"title":{"interfaces/ITreeNode.html":{}},"body":{"interfaces/IBaseNode.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/ITreeNode.html":{},"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["ivisiblediff",{"_index":959,"title":{"interfaces/IVisibleDiff.html":{}},"body":{"interfaces/IVisibleDiff.html":{},"coverage.html":{}}}],["ivisiblemodel",{"_index":970,"title":{"interfaces/IVisibleModel.html":{}},"body":{"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"components/UiGridToggleColumnsComponent.html":{},"coverage.html":{}}}],["ivy",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["j",{"_index":627,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["jamine",{"_index":4231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jasmine",{"_index":3625,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["jasmine_html",{"_index":4207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jasmine_styles",{"_index":3851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jasmineaxe.configureaxe",{"_index":4163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join.ts",{"_index":3873,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["jumps",{"_index":2842,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["justify",{"_index":1975,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiSnackBarComponent.html":{}}}],["k",{"_index":630,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/KeyboardShortcutDirective.html":{}}}],["karma",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["keep",{"_index":3171,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["kept",{"_index":4254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":121,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ITreeNode.html":{},"directives/KeyboardShortcutDirective.html":{},"classes/TreeUtils.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["key[key",{"_index":223,"title":{},"body":{"classes/EventGenerator.html":{}}}],["keya",{"_index":611,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyb",{"_index":647,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyboard",{"_index":1099,"title":{},"body":{"modules/KeyboardShortcutModule.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["keyboard_arrow_down",{"_index":2401,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["keyboardevent",{"_index":124,"title":{},"body":{"classes/EventGenerator.html":{},"directives/KeyboardShortcutDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["keyboardevent(type",{"_index":219,"title":{},"body":{"classes/EventGenerator.html":{}}}],["keyboardeventinit",{"_index":207,"title":{},"body":{"classes/EventGenerator.html":{}}}],["keyboardshortcutdirective",{"_index":1045,"title":{"directives/KeyboardShortcutDirective.html":{}},"body":{"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["keyboardshortcutmodule",{"_index":1087,"title":{"modules/KeyboardShortcutModule.html":{}},"body":{"modules/KeyboardShortcutModule.html":{},"modules/UiSnackBarModule.html":{},"modules.html":{},"overview.html":{}}}],["keyc",{"_index":641,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keycode",{"_index":208,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{}}}],["keycombination.every(key",{"_index":1081,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["keycombination.find(k",{"_index":1085,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["keyd",{"_index":616,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keydown",{"_index":32,"title":{},"body":{"classes/EventGenerator.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["keydown(key",{"_index":115,"title":{},"body":{"classes/EventGenerator.html":{}}}],["keydown.enter",{"_index":1722,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["keydown.space'].foreach(eventname",{"_index":1723,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["keye",{"_index":591,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyf",{"_index":619,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyg",{"_index":622,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyh",{"_index":625,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyi",{"_index":603,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyj",{"_index":628,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyk",{"_index":631,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyl",{"_index":633,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keym",{"_index":653,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyn",{"_index":650,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyo",{"_index":606,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyof",{"_index":155,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/GridOptions.html":{},"interfaces/IFilterModel.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/ISortModel.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["keyorkeyname",{"_index":116,"title":{},"body":{"classes/EventGenerator.html":{},"miscellaneous/typealiases.html":{}}}],["keyp",{"_index":609,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyq",{"_index":585,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyr",{"_index":594,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keys",{"_index":582,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"components/UiTreeSelectComponent.html":{}}}],["keyt",{"_index":596,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyu",{"_index":601,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyup",{"_index":33,"title":{},"body":{"classes/EventGenerator.html":{}}}],["keyup(key",{"_index":128,"title":{},"body":{"classes/EventGenerator.html":{}}}],["keyv",{"_index":644,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyw",{"_index":588,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyx",{"_index":638,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyy",{"_index":598,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["keyz",{"_index":636,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["kill",{"_index":3358,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["kind",{"_index":4109,"title":{},"body":{"license.html":{}}}],["know",{"_index":2162,"title":{},"body":{"injectables/UiGridIntl.html":{},"index.html":{}}}],["kv",{"_index":3928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["l",{"_index":457,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/UiDateFormatDirective.html":{}}}],["label",{"_index":537,"title":{},"body":{"interfaces/IDropdownOption.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["label.directive",{"_index":1228,"title":{},"body":{"modules/UiAutoAccessibleLabelModule.html":{}}}],["label.directive.ts",{"_index":1190,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label.directive.ts:31",{"_index":1193,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{}}}],["label.module.ts",{"_index":1227,"title":{},"body":{"modules/UiAutoAccessibleLabelModule.html":{}}}],["label/ui",{"_index":1189,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["labelelementref",{"_index":2528,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["labels",{"_index":2122,"title":{},"body":{"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiSuggestIntl.html":{}}}],["last",{"_index":3958,"title":{},"body":{"index.html":{}}}],["later",{"_index":3988,"title":{},"body":{"index.html":{}}}],["layout",{"_index":294,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{}}}],["lazily",{"_index":3315,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/enumerations.html":{}}}],["lazy",{"_index":957,"title":{},"body":{"interfaces/ISuggestValues.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["leaf",{"_index":3281,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["leaking",{"_index":2701,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["left",{"_index":933,"title":{},"body":{"interfaces/ISuggestValue.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["left'].includes(eventkey",{"_index":3271,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["legacy",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":1328,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["len",{"_index":1199,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{}}}],["length",{"_index":242,"title":{},"body":{"classes/FakeFileList.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"miscellaneous/functions.html":{}}}],["let.directive",{"_index":2597,"title":{},"body":{"modules/UiNgLetModule.html":{}}}],["let.directive.ts",{"_index":2567,"title":{},"body":{"directives/UiNgLetDirective.html":{},"coverage.html":{}}}],["let.directive.ts:36",{"_index":2578,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["let.module.ts",{"_index":2596,"title":{},"body":{"modules/UiNgLetModule.html":{}}}],["let/src/ui",{"_index":2566,"title":{},"body":{"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"coverage.html":{}}}],["level",{"_index":335,"title":{},"body":{"interfaces/IBaseNode.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/ITreeNode.html":{},"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{}}}],["li.jasmine",{"_index":4218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":4123,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4120,"title":{},"body":{"license.html":{}}}],["library",{"_index":3945,"title":{},"body":{"index.html":{}}}],["license",{"_index":4079,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":2548,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["limitation",{"_index":4094,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4112,"title":{},"body":{"license.html":{}}}],["line",{"_index":175,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["linear",{"_index":4248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":110,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/IDropEvent.html":{},"interfaces/ISelectionDiff.html":{},"components/UiPasswordIndicatorComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["list.ts",{"_index":231,"title":{},"body":{"classes/FakeFileList.html":{},"coverage.html":{}}}],["list.ts:14",{"_index":270,"title":{},"body":{"classes/FakeFileList.html":{}}}],["list.ts:16",{"_index":245,"title":{},"body":{"classes/FakeFileList.html":{}}}],["list.ts:24",{"_index":254,"title":{},"body":{"classes/FakeFileList.html":{}}}],["list.ts:30",{"_index":265,"title":{},"body":{"classes/FakeFileList.html":{}}}],["list.ts:40",{"_index":260,"title":{},"body":{"classes/FakeFileList.html":{}}}],["list.ts:49",{"_index":256,"title":{},"body":{"classes/FakeFileList.html":{}}}],["list.ts:7",{"_index":268,"title":{},"body":{"classes/FakeFileList.html":{}}}],["list1.start}${list1.end",{"_index":3330,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["list2",{"_index":3329,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["list2.start}${list2.end",{"_index":3331,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["listen(this.filebrowseref",{"_index":1726,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["listen(this.fileclearref",{"_index":1738,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["listener",{"_index":1488,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["listens",{"_index":1050,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["listrange",{"_index":3295,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["literal",{"_index":531,"title":{},"body":{"interfaces/IDropEvent.html":{},"interfaces/ISuggestValue.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":1128,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"injectables/UiGridIntl.html":{},"injectables/UiSuggestIntl.html":{}}}],["liveannouncer",{"_index":1108,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"components/UiPasswordIndicatorComponent.html":{}}}],["load",{"_index":3290,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["loaded",{"_index":1822,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/enumerations.html":{}}}],["loadedpage",{"_index":2093,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["loader",{"_index":940,"title":{},"body":{"interfaces/ISuggestValue.html":{},"directives/UiLoaderButtonDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{}}}],["loader'},{'name",{"_index":1419,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["loader.directive",{"_index":1618,"title":{},"body":{"modules/UiContentLoaderModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{}}}],["loader.directive.ts",{"_index":1546,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loader.directive.ts:100",{"_index":3305,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{}}}],["loader.directive.ts:30",{"_index":1560,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["loader.directive.ts:35",{"_index":1563,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["loader.directive.ts:38",{"_index":1562,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["loader.directive.ts:41",{"_index":1564,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["loader.directive.ts:44",{"_index":1561,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["loader.directive.ts:48",{"_index":1558,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["loader.directive.ts:56",{"_index":1567,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["loader.directive.ts:68",{"_index":1565,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["loader.directive.ts:72",{"_index":1566,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["loader.directive.ts:83",{"_index":3293,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{}}}],["loader.directive.ts:90",{"_index":3301,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{}}}],["loader.module.ts",{"_index":1615,"title":{},"body":{"modules/UiContentLoaderModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{}}}],["loader/src/internal/ui",{"_index":1620,"title":{},"body":{"components/UiContentSpinnerComponent.html":{},"coverage.html":{}}}],["loader/src/ui",{"_index":1545,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"interfaces/VirtualScrollItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loadertype",{"_index":2437,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["loading",{"_index":941,"title":{},"body":{"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValues.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["loading'},{'name",{"_index":1383,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["loading.directive",{"_index":2213,"title":{},"body":{"modules/UiGridModule.html":{}}}],["loading.directive.ts",{"_index":2185,"title":{},"body":{"directives/UiGridLoadingDirective.html":{},"coverage.html":{}}}],["loading.directive.ts:14",{"_index":2186,"title":{},"body":{"directives/UiGridLoadingDirective.html":{}}}],["loadinglabel",{"_index":2971,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["loadingpage",{"_index":2094,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["local",{"_index":4061,"title":{},"body":{"index.html":{}}}],["locales",{"_index":408,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["localization",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["location",{"_index":1248,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["locked",{"_index":1019,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["locking",{"_index":1040,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["lodash",{"_index":964,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiPasswordComplexityIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"dependencies.html":{}}}],["logging",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":775,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["longer",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":3953,"title":{},"body":{"index.html":{}}}],["loop",{"_index":445,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["lot",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["lower",{"_index":2421,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["lts",{"_index":458,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["m",{"_index":652,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["macrotasks",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":2044,"title":{},"body":{"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"changelog.html":{},"index.html":{}}}],["mainbuttons",{"_index":2069,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["mainly",{"_index":4253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":4029,"title":{},"body":{"index.html":{}}}],["manager",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["manager.ts",{"_index":961,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["many",{"_index":4046,"title":{},"body":{"index.html":{}}}],["map",{"_index":713,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/IVisibleDiff.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridSearchComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map(([current",{"_index":989,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["map(([isvisible",{"_index":2748,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["map(cols",{"_index":980,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["map(diameter",{"_index":1631,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["map(e",{"_index":1763,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["map(o",{"_index":987,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["map(property",{"_index":1894,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["map(seconds",{"_index":743,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["map(this._calculatepercentage",{"_index":2669,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["map(this._mapcolumnoption",{"_index":1023,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["map(this._mapdirtystate",{"_index":2662,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["map(this._mapvisiblerules",{"_index":2667,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["map(v",{"_index":3253,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["map(value",{"_index":2265,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["margin",{"_index":1949,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{}}}],["mark",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["marked",{"_index":3013,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["markforcheck",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["marking",{"_index":3314,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/enumerations.html":{}}}],["marks",{"_index":923,"title":{},"body":{"interfaces/ISuggestValue.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["master",{"_index":4058,"title":{},"body":{"index.html":{}}}],["mat",{"_index":442,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mat_chip_input_selector",{"_index":3834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mat_paginator_default_options",{"_index":1926,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["mat_snack_bar_data",{"_index":800,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["mat_snack_bar_default_options",{"_index":801,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{}}}],["mat_tooltip_default_options",{"_index":2500,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["mat_tooltip_missing_warning",{"_index":1200,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mat_tooltip_scroll_strategy",{"_index":2501,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["matanchor",{"_index":2345,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["matbutton",{"_index":2936,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["matbuttonmodule",{"_index":1992,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSnackBarModule.html":{}}}],["match",{"_index":2409,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["matcheckboxmodule",{"_index":2201,"title":{},"body":{"modules/UiGridModule.html":{},"modules/UiSuggestModule.html":{}}}],["matching",{"_index":229,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchips",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["matchipsmodule",{"_index":3128,"title":{},"body":{"modules/UiSuggestModule.html":{}}}],["matcontrol",{"_index":2468,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["matcontrol(matcontrol",{"_index":2505,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["matcontrol.disabled",{"_index":2525,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["matcontrol.required",{"_index":2524,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["matcontrol.statechanges.pipe",{"_index":2508,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["matdividermodule",{"_index":2430,"title":{},"body":{"modules/UiGridToggleColumnsModule.html":{}}}],["material",{"_index":782,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{}}}],["matformfield",{"_index":2465,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matformfield_label_selector",{"_index":2503,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matformfieldappearance",{"_index":1918,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["matformfieldcontrol",{"_index":2494,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["matformfieldmodule",{"_index":2305,"title":{},"body":{"modules/UiGridSearchModule.html":{}}}],["math.ceil(this.length",{"_index":1931,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["math.max(start",{"_index":3362,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["math.min(end",{"_index":3361,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["maticon",{"_index":946,"title":{},"body":{"interfaces/ISuggestValue.html":{}}}],["maticonmodule",{"_index":2203,"title":{},"body":{"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSuggestModule.html":{}}}],["matinputmodule",{"_index":2306,"title":{},"body":{"modules/UiGridSearchModule.html":{},"modules/UiSuggestModule.html":{}}}],["matlistmodule",{"_index":2722,"title":{},"body":{"modules/UiPasswordIndicatorModule.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["matmenumodule",{"_index":2205,"title":{},"body":{"modules/UiGridModule.html":{}}}],["matpaginatordefaultoptions",{"_index":1915,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["matpaginatorintl",{"_index":1925,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["matpaginatormodule",{"_index":2207,"title":{},"body":{"modules/UiGridModule.html":{}}}],["matprogressbar",{"_index":1317,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"directives/UiProgressButtonDirective.html":{}}}],["matprogressbar['buffervalue",{"_index":2801,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["matprogressbar['color",{"_index":2802,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["matprogressbar['mode",{"_index":2799,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["matprogressbar['value",{"_index":2800,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["matprogressbarmodule",{"_index":2208,"title":{},"body":{"modules/UiGridModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiProgressButtonModule.html":{}}}],["matprogressspinner",{"_index":1435,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["matprogressspinner['color",{"_index":1577,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["matprogressspinner['diameter",{"_index":1575,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["matprogressspinner['mode",{"_index":1574,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["matprogressspinner['value",{"_index":1576,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["matprogressspinnermodule",{"_index":1617,"title":{},"body":{"modules/UiContentLoaderModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{}}}],["matripplemodule",{"_index":3130,"title":{},"body":{"modules/UiSuggestModule.html":{}}}],["matselect",{"_index":2348,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["matselectchange",{"_index":2343,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["matselectmodule",{"_index":1994,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridToggleColumnsModule.html":{}}}],["matsnackbar",{"_index":797,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["matsnackbarconfig",{"_index":798,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["matsnackbarmodule",{"_index":2907,"title":{},"body":{"modules/UiSnackBarModule.html":{}}}],["matsnackbarref",{"_index":799,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["matter",{"_index":4045,"title":{},"body":{"index.html":{}}}],["mattooltip",{"_index":1191,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mattooltipdefaultoptions",{"_index":2485,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["mattooltipmodule",{"_index":1996,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSuggestModule.html":{}}}],["mattreeflatdatasource",{"_index":3218,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["mattreeflattener",{"_index":1149,"title":{},"body":{"classes/TreeUtils.html":{}}}],["max",{"_index":1198,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiSnackBarComponent.html":{}}}],["max($padding",{"_index":3283,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["max_clicks_per_second",{"_index":1482,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["maxlength",{"_index":2242,"title":{},"body":{"components/UiGridSearchComponent.html":{},"changelog.html":{}}}],["member",{"_index":694,"title":{},"body":{"interfaces/IRegexLike.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":4213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":4114,"title":{},"body":{"license.html":{}}}],["merge",{"_index":361,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["merged",{"_index":4056,"title":{},"body":{"index.html":{}}}],["message",{"_index":766,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"injectables/UiGridIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":3690,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["met",{"_index":2614,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{},"injectables/UiSuggestIntl.html":{}}}],["metadata",{"_index":127,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IFilterModel.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["method",{"_index":568,"title":{},"body":{"interfaces/IFilterModel.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"changelog.html":{}}}],["methods",{"_index":20,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["migrate",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":1967,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["minchars",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["mincharslength",{"_index":2972,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["mind",{"_index":3172,"title":{},"body":{"components/UiTreeSelectComponent.html":{},"index.html":{}}}],["minheight",{"_index":1625,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["mini",{"_index":1217,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["minimist",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":1816,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{}}}],["minor",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["minute",{"_index":724,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["minwidth",{"_index":1801,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["miscellaneous",{"_index":3904,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misclick",{"_index":1480,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["missing",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":4080,"title":{},"body":{"license.html":{}}}],["mixin",{"_index":3278,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["mock",{"_index":247,"title":{},"body":{"classes/FakeFileList.html":{}}}],["mocked",{"_index":275,"title":{},"body":{"classes/FakeFileList.html":{}}}],["mocks",{"_index":237,"title":{},"body":{"classes/FakeFileList.html":{}}}],["mode",{"_index":1306,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{}}}],["model",{"_index":567,"title":{},"body":{"interfaces/IFilterModel.html":{},"interfaces/ISortModel.html":{},"directives/UiGridHeaderDirective.html":{}}}],["models",{"_index":971,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["models/tree.models",{"_index":1172,"title":{},"body":{"classes/TreeUtils.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["modifier",{"_index":126,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{}}}],["modifiers",{"_index":117,"title":{},"body":{"classes/EventGenerator.html":{},"changelog.html":{}}}],["modifiers.includes(key.alt",{"_index":216,"title":{},"body":{"classes/EventGenerator.html":{}}}],["modifiers.includes(key.control",{"_index":218,"title":{},"body":{"classes/EventGenerator.html":{}}}],["modifiers.includes(key.shift",{"_index":214,"title":{},"body":{"classes/EventGenerator.html":{}}}],["modify",{"_index":4067,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":1086,"title":{"modules/KeyboardShortcutModule.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{}},"body":{"changelog.html":{}}}],["modules",{"_index":1088,"title":{"modules.html":{}},"body":{"modules/KeyboardShortcutModule.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":359,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["moment(this.date",{"_index":464,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["moment.duration(seconds",{"_index":744,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["moment.js",{"_index":351,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["moment](https://www.npmjs.com/package/moment",{"_index":397,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["more",{"_index":1212,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"miscellaneous/variables.html":{}}}],["mostly",{"_index":4010,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":1207,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"miscellaneous/variables.html":{}}}],["mouseenter",{"_index":37,"title":{},"body":{"classes/EventGenerator.html":{}}}],["mouseevent",{"_index":105,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{}}}],["mouseleave",{"_index":38,"title":{},"body":{"classes/EventGenerator.html":{}}}],["mousemove",{"_index":132,"title":{},"body":{"classes/EventGenerator.html":{}}}],["move",{"_index":2137,"title":{},"body":{"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["movexy",{"_index":34,"title":{},"body":{"classes/EventGenerator.html":{}}}],["movexy(offsetx",{"_index":130,"title":{},"body":{"classes/EventGenerator.html":{}}}],["ms",{"_index":2059,"title":{},"body":{"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{}}}],["msg",{"_index":1113,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"changelog.html":{}}}],["much",{"_index":2849,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{},"index.html":{}}}],["multi",{"_index":319,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"injectables/UiGridIntl.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["multipageselectioninfotooltip",{"_index":2095,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["multiple",{"_index":1664,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{},"index.html":{}}}],["multiple=false",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["multiselect",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["n",{"_index":649,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["n.key",{"_index":1178,"title":{},"body":{"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{}}}],["name",{"_index":101,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/IBaseNode.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ITreeNode.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["naming",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["nan",{"_index":1887,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiGridFooterDirective.html":{}}}],["nativeelement",{"_index":3060,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["need",{"_index":292,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":441,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["needed](https://www.npmjs.com/package/scroll",{"_index":2860,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["needlessly",{"_index":4013,"title":{},"body":{"index.html":{}}}],["needs",{"_index":420,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiPasswordToggleComponent.html":{}}}],["nested",{"_index":1874,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["new",{"_index":166,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValue.html":{},"interfaces/IVisibleDiff.html":{},"directives/KeyboardShortcutDirective.html":{},"classes/TreeUtils.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newlines",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["newstate",{"_index":3103,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["next",{"_index":174,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"injectables/UiPasswordComplexityIntl.html":{},"injectables/UiPasswordToggleIntl.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["ng",{"_index":2211,"title":{},"body":{"modules/UiGridModule.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSuggestModule.html":{},"changelog.html":{},"coverage.html":{}}}],["ngafterviewinit",{"_index":1715,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiTreeSelectComponent.html":{}}}],["ngclass",{"_index":2237,"title":{},"body":{"directives/UiGridRowConfigDirective.html":{}}}],["ngclassfn",{"_index":2233,"title":{},"body":{"directives/UiGridRowConfigDirective.html":{}}}],["ngcontrol",{"_index":3042,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["ngdocheck",{"_index":3097,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["ngform",{"_index":3043,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["ngif",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["ngif=\"source",{"_index":2572,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["nglet",{"_index":2573,"title":{},"body":{"directives/UiNgLetDirective.html":{},"changelog.html":{}}}],["nglet(value",{"_index":2585,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["nglet]'},{'name",{"_index":1401,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["ngletcontext",{"_index":2582,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["ngmodule",{"_index":1098,"title":{},"body":{"modules/KeyboardShortcutModule.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{}}}],["ngonchanges",{"_index":1549,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["ngonchanges(changes",{"_index":1711,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["ngondestroy",{"_index":562,"title":{},"body":{"interfaces/IDropdownOption.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["ngoninit",{"_index":1270,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiGridFooterDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["ngzone",{"_index":373,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["nicely",{"_index":434,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{}}}],["nl2br",{"_index":2601,"title":{},"body":{"pipes/UiNl2BrPipe.html":{},"changelog.html":{}}}],["nl2br/nl2br.pipe",{"_index":2777,"title":{},"body":{"modules/UiPipeModule.html":{}}}],["nodatamessage",{"_index":2096,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["nodatamessagealternative",{"_index":2097,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["node",{"_index":1167,"title":{},"body":{"classes/TreeUtils.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["node.children",{"_index":1176,"title":{},"body":{"classes/TreeUtils.html":{}}}],["node.data",{"_index":1175,"title":{},"body":{"classes/TreeUtils.html":{}}}],["node.haschildren",{"_index":3258,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["node.key",{"_index":1173,"title":{},"body":{"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{}}}],["node.level",{"_index":1179,"title":{},"body":{"classes/TreeUtils.html":{}}}],["node.name",{"_index":1174,"title":{},"body":{"classes/TreeUtils.html":{}}}],["nodebacktransformer",{"_index":1147,"title":{},"body":{"classes/TreeUtils.html":{}}}],["nodebacktransformer(node",{"_index":1165,"title":{},"body":{"classes/TreeUtils.html":{}}}],["nodes",{"_index":3170,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["nodetransformer",{"_index":1148,"title":{},"body":{"classes/TreeUtils.html":{}}}],["nodetransformer(node",{"_index":1168,"title":{},"body":{"classes/TreeUtils.html":{}}}],["nofilterplaceholder",{"_index":2098,"title":{},"body":{"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["none",{"_index":836,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridSearchComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/enumerations.html":{}}}],["none!important",{"_index":4215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":4117,"title":{},"body":{"license.html":{}}}],["noresultslabel",{"_index":2973,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["noselectionmessage",{"_index":2099,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["not(.node",{"_index":3280,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["not(.ui",{"_index":1451,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["not(:last",{"_index":2714,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["note",{"_index":1962,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["notice",{"_index":4104,"title":{},"body":{"license.html":{}}}],["notification",{"_index":2128,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["notify",{"_index":2120,"title":{},"body":{"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiSuggestIntl.html":{}}}],["notmet",{"_index":2611,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["now",{"_index":3622,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm",{"_index":3530,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npmrc",{"_index":3638,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":425,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IFilterModel.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":72,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"classes/TreeUtils.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number(parsefloat(value).tofixed(1",{"_index":1869,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["o",{"_index":605,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["o.checked",{"_index":998,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["o.disabled",{"_index":1033,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["o.label",{"_index":2403,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["o.map(this._maptovisiblediff",{"_index":988,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["o.property",{"_index":999,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["obj",{"_index":688,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["obj.test",{"_index":690,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":45,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IRegexLike.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(changeevent",{"_index":190,"title":{},"body":{"classes/EventGenerator.html":{}}}],["object.defineproperty(changeevent.target",{"_index":193,"title":{},"body":{"classes/EventGenerator.html":{}}}],["object.defineproperty(ev",{"_index":185,"title":{},"body":{"classes/EventGenerator.html":{}}}],["object.defineproperty(ev.datatransfer",{"_index":186,"title":{},"body":{"classes/EventGenerator.html":{}}}],["object.defineproperty(event",{"_index":197,"title":{},"body":{"classes/EventGenerator.html":{}}}],["object.keys(changes",{"_index":1891,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["object.keys(rules",{"_index":700,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.passwordrules",{"_index":2664,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["object.keys(validitymap).length",{"_index":708,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["object.values(left).join",{"_index":2671,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["object.values(right).join",{"_index":2672,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["observable",{"_index":352,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"miscellaneous/functions.html":{}}}],["observedvalueof",{"_index":4137,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["obtaining",{"_index":4090,"title":{},"body":{"license.html":{}}}],["occured",{"_index":2121,"title":{},"body":{"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{}}}],["occurred",{"_index":2976,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["occurs",{"_index":1458,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["of(null",{"_index":489,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["of.ts",{"_index":3870,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["offers",{"_index":4023,"title":{},"body":{"index.html":{}}}],["official",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":104,"title":{},"body":{"classes/EventGenerator.html":{}}}],["offsetx",{"_index":103,"title":{},"body":{"classes/EventGenerator.html":{}}}],["offsety",{"_index":95,"title":{},"body":{"classes/EventGenerator.html":{}}}],["old",{"_index":293,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{}}}],["oldstate",{"_index":3098,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["once",{"_index":3993,"title":{},"body":{"index.html":{}}}],["onchanges",{"_index":1547,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["oncontainerclick(event",{"_index":3105,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["ondestroy",{"_index":543,"title":{},"body":{"interfaces/IDropdownOption.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["one",{"_index":1030,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"index.html":{}}}],["oninit",{"_index":1237,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiGridFooterDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["onkeydown",{"_index":3163,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["onkeydown(event",{"_index":3196,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["onopen",{"_index":312,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["opacity",{"_index":1446,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":3678,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["opened",{"_index":1828,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["operator",{"_index":3916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optgroup",{"_index":2410,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["optimize",{"_index":322,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{}}}],["option",{"_index":536,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["option.label",{"_index":2180,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["optional",{"_index":102,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":206,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/GridOptions.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options(options",{"_index":2358,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["options.duration",{"_index":900,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["options.extracssclasses",{"_index":897,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["options.message",{"_index":890,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["options.redraw",{"_index":740,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["options.timezone",{"_index":390,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"miscellaneous/variables.html":{}}}],["options['block",{"_index":2861,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["opts",{"_index":3189,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["opts.emitevent",{"_index":3256,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["order",{"_index":248,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"index.html":{}}}],["ordering",{"_index":977,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["orientation",{"_index":4174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original",{"_index":1462,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"components/UiTreeSelectComponent.html":{}}}],["os",{"_index":3932,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["others",{"_index":4066,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":4127,"title":{},"body":{"license.html":{}}}],["out",{"_index":1094,"title":{},"body":{"modules/KeyboardShortcutModule.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"modules/UiSuggestModule.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":1970,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["outline",{"_index":1955,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"changelog.html":{}}}],["output",{"_index":722,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["outputs",{"_index":1057,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"directives/UiClickOutsideDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{}}}],["outside",{"_index":1459,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"modules/UiSuggestModule.html":{},"changelog.html":{}}}],["outside.directive",{"_index":1511,"title":{},"body":{"modules/UiClickOutsideModule.html":{}}}],["outside.directive.ts",{"_index":1457,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"coverage.html":{}}}],["outside.directive.ts:52",{"_index":1512,"title":{},"body":{"injectables/UiClickOutsideService.html":{}}}],["outside.directive.ts:95",{"_index":1461,"title":{},"body":{"directives/UiClickOutsideDirective.html":{}}}],["outside.module.ts",{"_index":1510,"title":{},"body":{"modules/UiClickOutsideModule.html":{}}}],["outside/src/ui",{"_index":1456,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"coverage.html":{}}}],["over",{"_index":80,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["overall",{"_index":4224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overflow",{"_index":1327,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiSnackBarComponent.html":{}}}],["overlay",{"_index":2414,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{}}}],["overridable",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":4132,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrites",{"_index":348,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["p",{"_index":608,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["package",{"_index":3881,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":4039,"title":{},"body":{"index.html":{}}}],["padding",{"_index":1947,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["page",{"_index":320,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"changelog.html":{},"index.html":{}}}],["pagechange",{"_index":2013,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["pagechangeevent",{"_index":2027,"title":{},"body":{"directives/UiGridFooterDirective.html":{},"miscellaneous/typealiases.html":{}}}],["pagecount",{"_index":1912,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["pageindex",{"_index":2011,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["pageindex(value",{"_index":2031,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["pagerefreshing",{"_index":2100,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["pagesize",{"_index":1939,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridFooterDirective.html":{}}}],["pagesize(value",{"_index":2029,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["pagesizeoption",{"_index":1946,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["pagesizes",{"_index":2012,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["paginator",{"_index":1906,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["paginator'},{'name",{"_index":1339,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["paginator.component",{"_index":1997,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{}}}],["paginator.component.html",{"_index":1908,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["paginator.component.scss",{"_index":1907,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["paginator.component.ts",{"_index":1904,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"coverage.html":{}}}],["paginator.component.ts:21",{"_index":2564,"title":{},"body":{"injectables/UiMatPaginatorIntl.html":{}}}],["paginator.component.ts:40",{"_index":1919,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["paginator.component.ts:42",{"_index":1920,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["paginator.component.ts:45",{"_index":1917,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["paginator.component.ts:47",{"_index":1923,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["paginator.component.ts:49",{"_index":1916,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["paginator.module",{"_index":2218,"title":{},"body":{"modules/UiGridModule.html":{}}}],["paginator.module.ts",{"_index":1991,"title":{},"body":{"modules/UiGridCustomPaginatorModule.html":{}}}],["paginator/ui",{"_index":1903,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"coverage.html":{}}}],["pairs",{"_index":3929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["panel",{"_index":2415,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["panelclass",{"_index":851,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panelclass(type",{"_index":901,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["param",{"_index":171,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiDragAndDropFileDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSuggestIntl.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":51,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"miscellaneous/typealiases.html":{}}}],["parent.appendchild(eventgenerator.cursor.ref",{"_index":67,"title":{},"body":{"classes/EventGenerator.html":{}}}],["parent.removechild(eventgenerator.cursor.ref",{"_index":69,"title":{},"body":{"classes/EventGenerator.html":{}}}],["parents",{"_index":2839,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["partial",{"_index":757,"title":{},"body":{"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["particular",{"_index":4116,"title":{},"body":{"license.html":{}}}],["pass",{"_index":789,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["passed",{"_index":4219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passed:before",{"_index":4220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":677,"title":{},"body":{"interfaces/IRegexLike.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["passwordrules",{"_index":2631,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["patch",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":3175,"title":{},"body":{"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["payload",{"_index":767,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["peacock",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["peasy",{"_index":4062,"title":{},"body":{"index.html":{}}}],["peer",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["peerdependencies",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["pending",{"_index":3316,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/enumerations.html":{}}}],["people",{"_index":4019,"title":{},"body":{"index.html":{}}}],["per",{"_index":1951,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["percentage",{"_index":1817,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{}}}],["percentagetitle",{"_index":2612,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["percentual",{"_index":1867,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["performance",{"_index":3696,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["perlevelpadding($i",{"_index":3286,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["perlevelpadding($level",{"_index":3279,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["permission",{"_index":4084,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4100,"title":{},"body":{"license.html":{}}}],["persist",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["person",{"_index":4089,"title":{},"body":{"license.html":{}}}],["personally",{"_index":4004,"title":{},"body":{"index.html":{}}}],["persons",{"_index":4101,"title":{},"body":{"license.html":{}}}],["picked",{"_index":1134,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["pipe",{"_index":438,"title":{"pipes/UiNl2BrPipe.html":{}},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(startwith(void",{"_index":2747,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["pipe(takeuntil(this._destroyed",{"_index":3347,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["pipes",{"_index":2599,"title":{},"body":{"pipes/UiNl2BrPipe.html":{},"modules/UiPipeModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipetransform",{"_index":2604,"title":{},"body":{"pipes/UiNl2BrPipe.html":{}}}],["place",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["placeholder",{"_index":2152,"title":{},"body":{"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["placeholder(placeholder",{"_index":3065,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["plain",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":2476,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"miscellaneous/functions.html":{}}}],["platform.ts",{"_index":3863,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["play",{"_index":433,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{}}}],["playground",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":2992,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["plugin",{"_index":410,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["plugin](https://www.npmjs.com/package/moment",{"_index":409,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["plugins",{"_index":407,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{}}}],["point",{"_index":449,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"index.html":{}}}],["pointer",{"_index":1721,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"components/UiGridSearchComponent.html":{}}}],["polite",{"_index":2696,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["polluting",{"_index":4011,"title":{},"body":{"index.html":{}}}],["populated",{"_index":106,"title":{},"body":{"classes/EventGenerator.html":{}}}],["port",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["portalmodule",{"_index":2906,"title":{},"body":{"modules/UiSnackBarModule.html":{}}}],["portions",{"_index":4107,"title":{},"body":{"license.html":{}}}],["position",{"_index":1279,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"changelog.html":{}}}],["post",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["pr",{"_index":3994,"title":{},"body":{"index.html":{}}}],["practice",{"_index":4018,"title":{},"body":{"index.html":{}}}],["preconfigured",{"_index":3980,"title":{},"body":{"index.html":{}}}],["prefer",{"_index":4005,"title":{},"body":{"index.html":{}}}],["preference",{"_index":3933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefers",{"_index":3859,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["present",{"_index":3176,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["press",{"_index":2135,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["pressed",{"_index":122,"title":{},"body":{"classes/EventGenerator.html":{}}}],["prevent",{"_index":3093,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{}}}],["prevents",{"_index":1271,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["previous",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["previouspageindex",{"_index":2037,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["primary",{"_index":1802,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["primary(primary",{"_index":1876,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["primitive",{"_index":2838,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["priority",{"_index":3010,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"miscellaneous/typealiases.html":{}}}],["private",{"_index":201,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["probabily",{"_index":4014,"title":{},"body":{"index.html":{}}}],["process",{"_index":3999,"title":{},"body":{"index.html":{}}}],["programmatic",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["progress",{"_index":1299,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["progress_animation",{"_index":2648,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["progress_in",{"_index":3819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["progress_out",{"_index":3820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["progressanimation",{"_index":4186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progressbuttonbuffervalue",{"_index":2779,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["progressbuttoncolor",{"_index":2780,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["progressbuttonloading",{"_index":2781,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["progressbuttonmode",{"_index":2782,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["progressbuttonvalue",{"_index":2783,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["project",{"_index":3626,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projects/.../async",{"_index":3907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../axe",{"_index":4151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../concat",{"_index":3908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../data",{"_index":4141,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../event",{"_index":4136,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../extract",{"_index":3909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../has",{"_index":3910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../identifier.ts",{"_index":3911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../is",{"_index":3912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../observed",{"_index":4138,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../page",{"_index":4139,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../pipe.module.ts",{"_index":4153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../repeat",{"_index":3913,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../suggestdirection.ts",{"_index":4142,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../suggestdisplaypriority.ts",{"_index":4143,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../test.theme.ts",{"_index":4152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tree.utils.ts",{"_index":4144,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ui",{"_index":3906,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/angular/a11y/src/queued",{"_index":1103,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"coverage.html":{}}}],["projects/angular/a11y/src/ui",{"_index":1186,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/angular/axe",{"_index":3785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/angular/components/ui",{"_index":287,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"classes/TreeUtils.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/angular/directives/internal/src/ui",{"_index":1788,"title":{},"body":{"directives/UiFormatDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"coverage.html":{}}}],["projects/angular/directives/keyboard",{"_index":1047,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"coverage.html":{}}}],["projects/angular/directives/ui",{"_index":337,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/angular/pipes/src/nl2br/nl2br.pipe.ts",{"_index":2600,"title":{},"body":{"pipes/UiNl2BrPipe.html":{},"coverage.html":{}}}],["projects/angular/pipes/src/nl2br/nl2br.pipe.ts:8",{"_index":2603,"title":{},"body":{"pipes/UiNl2BrPipe.html":{}}}],["projects/angular/pipes/src/pipe.module.ts",{"_index":2776,"title":{},"body":{"modules/UiPipeModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/angular/test.theme.ts",{"_index":3850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/angular/testing/src/utilities/event",{"_index":6,"title":{},"body":{"classes/EventGenerator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projects/angular/testing/src/utilities/events/drop",{"_index":525,"title":{},"body":{"interfaces/IDropEvent.html":{},"coverage.html":{}}}],["projects/angular/testing/src/utilities/fake",{"_index":230,"title":{},"body":{"classes/FakeFileList.html":{},"coverage.html":{}}}],["projects/angular/testing/src/utilities/key.ts",{"_index":576,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"coverage.html":{}}}],["projects/angular/utilities/src/browser/extract",{"_index":3855,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/angular/utilities/src/browser/has",{"_index":3858,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/angular/utilities/src/browser/is",{"_index":3862,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/angular/utilities/src/rxjs/async",{"_index":3869,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/angular/utilities/src/rxjs/concat",{"_index":3872,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/angular/utilities/src/rxjs/internal/observed",{"_index":4145,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/angular/utilities/src/rxjs/repeat",{"_index":3875,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/angular/utilities/src/string/identifier.ts",{"_index":3878,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promotes",{"_index":4054,"title":{},"body":{"index.html":{}}}],["propagate",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["proper",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2418,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["properties",{"_index":21,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"classes/TreeUtils.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"injectables/UiClickOutsideService.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["property",{"_index":569,"title":{},"body":{"interfaces/IFilterModel.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{}}}],["protected",{"_index":459,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["provide",{"_index":821,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{},"index.html":{}}}],["provided",{"_index":125,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["providedin",{"_index":852,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"classes/UiMatSnackBarConfig.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["providers",{"_index":820,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{}}}],["providing",{"_index":19,"title":{},"body":{"classes/EventGenerator.html":{}}}],["pt1m1s",{"_index":725,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["public",{"_index":239,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{}}}],["publicly",{"_index":4040,"title":{},"body":{"index.html":{}}}],["publish",{"_index":3573,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["publishing",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1204,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["push",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["q",{"_index":584,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"index.html":{}}}],["queries",{"_index":305,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"changelog.html":{}}}],["querylist",{"_index":2066,"title":{},"body":{"directives/UiGridHeaderDirective.html":{},"components/UiTreeSelectComponent.html":{}}}],["queryproperty",{"_index":1803,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["queued",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["queuedannouncer",{"_index":1101,"title":{"injectables/QueuedAnnouncer.html":{}},"body":{"injectables/QueuedAnnouncer.html":{},"coverage.html":{}}}],["r",{"_index":593,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["raised",{"_index":1405,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["random",{"_index":3935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range",{"_index":939,"title":{},"body":{"interfaces/ISuggestValue.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rangeload",{"_index":3292,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["raw",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["rc.0",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":355,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSuggestIntl.html":{}}}],["reach",{"_index":1473,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["react",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["reactive",{"_index":1839,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["reactive_input_list",{"_index":1863,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["reactive_input_list.includes(property",{"_index":1893,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["reactiveformsmodule",{"_index":2304,"title":{},"body":{"modules/UiGridSearchModule.html":{},"modules/UiSuggestModule.html":{}}}],["reacts",{"_index":1697,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["read",{"_index":3931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readable",{"_index":720,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["reader",{"_index":1135,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["readers",{"_index":773,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["readonly",{"_index":857,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["reads",{"_index":3924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["realize",{"_index":3973,"title":{},"body":{"index.html":{}}}],["really",{"_index":4044,"title":{},"body":{"index.html":{}}}],["reason",{"_index":4049,"title":{},"body":{"index.html":{}}}],["rebase",{"_index":4003,"title":{},"body":{"index.html":{}}}],["rebased",{"_index":4007,"title":{},"body":{"index.html":{}}}],["received",{"_index":3319,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["recommend",{"_index":403,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["recommended",{"_index":3681,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["record",{"_index":583,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["redesign",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["redirects",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["redraw",{"_index":344,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["reduce",{"_index":399,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDateFormatDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/variables.html":{}}}],["reduces",{"_index":3309,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["ref",{"_index":48,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["ref.nativeelement",{"_index":1501,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["refactor",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1257,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"miscellaneous/variables.html":{}}}],["refetch",{"_index":1804,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["refferences",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["refocus",{"_index":1241,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"changelog.html":{}}}],["refocus(condition",{"_index":1265,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["refocus]=\"refocu",{"_index":1245,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["refocused",{"_index":1244,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["refresh",{"_index":2157,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["refreshing",{"_index":2155,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["refreshtooltip",{"_index":2101,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["regex",{"_index":695,"title":{},"body":{"interfaces/IRegexLike.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["regions",{"_index":1658,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["registerchange",{"_index":3113,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["registeronchange(fn",{"_index":3115,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["registerontouched(fn",{"_index":3118,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["registertouch",{"_index":3114,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["relative",{"_index":379,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relative_time_update_interval",{"_index":387,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["release",{"_index":3776,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remain",{"_index":776,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["removable",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":756,"title":{},"body":{"interfaces/ISelectionDiff.html":{},"changelog.html":{}}}],["removed",{"_index":758,"title":{},"body":{"interfaces/ISelectionDiff.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["removeelement(value",{"_index":2295,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["rename",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":306,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{}}}],["rendered",{"_index":553,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiNgLetDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["rendereditemcount",{"_index":2143,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["renderedrangestream",{"_index":3307,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["renderer",{"_index":479,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["renderer2",{"_index":374,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["rendering",{"_index":323,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"changelog.html":{}}}],["repair",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":3944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repeats",{"_index":3941,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repeatstream",{"_index":3877,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["repeatstream(stream",{"_index":3939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace(/\\n/g",{"_index":2607,"title":{},"body":{"pipes/UiNl2BrPipe.html":{}}}],["replace(/\\r/g",{"_index":2606,"title":{},"body":{"pipes/UiNl2BrPipe.html":{}}}],["replace(/\\r\\n/g",{"_index":2605,"title":{},"body":{"pipes/UiNl2BrPipe.html":{}}}],["reporter",{"_index":4208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":3317,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["requested",{"_index":98,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"miscellaneous/functions.html":{}}}],["require",{"_index":11,"title":{},"body":{"classes/EventGenerator.html":{},"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiSuggestIntl.html":{}}}],["required",{"_index":23,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDropEvent.html":{},"interfaces/IRegexLike.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["required(required",{"_index":3054,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["required.directive",{"_index":2562,"title":{},"body":{"modules/UiMatFormFieldRequiredModule.html":{}}}],["required.directive.intl",{"_index":2502,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["required.directive.intl.ts",{"_index":2552,"title":{},"body":{"injectables/UiMatFormFieldRequiredIntl.html":{},"coverage.html":{}}}],["required.directive.intl.ts:15",{"_index":2555,"title":{},"body":{"injectables/UiMatFormFieldRequiredIntl.html":{}}}],["required.directive.intl.ts:17",{"_index":2556,"title":{},"body":{"injectables/UiMatFormFieldRequiredIntl.html":{}}}],["required.directive.intl.ts:19",{"_index":2554,"title":{},"body":{"injectables/UiMatFormFieldRequiredIntl.html":{}}}],["required.directive.ts",{"_index":2467,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["required.directive.ts:48",{"_index":2495,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["required.directive.ts:60",{"_index":2488,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["required.directive.ts:81",{"_index":2492,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["required.directive.ts:85",{"_index":2490,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["required.directive.ts:95",{"_index":2491,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["required.module.ts",{"_index":2561,"title":{},"body":{"modules/UiMatFormFieldRequiredModule.html":{}}}],["required/src/ui",{"_index":2466,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requiredattrs",{"_index":4170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredowned",{"_index":4169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requried",{"_index":529,"title":{},"body":{"interfaces/IDropEvent.html":{}}}],["reset",{"_index":995,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"modules/KeyboardShortcutModule.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"changelog.html":{},"overview.html":{}}}],["reset/refetch",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["resetbtn",{"_index":2313,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["resetcolumns",{"_index":2320,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["resetkeydown",{"_index":2315,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["resetkeydown(e",{"_index":2340,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["resetting",{"_index":2166,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["resettodefaults",{"_index":2318,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["resize",{"_index":1423,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"changelog.html":{}}}],["resize.directive",{"_index":3392,"title":{},"body":{"modules/UiVirtualScrollViewportResizeModule.html":{}}}],["resize.directive.ts",{"_index":3369,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{},"coverage.html":{}}}],["resize.directive.ts:42",{"_index":3373,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["resize.module.ts",{"_index":3391,"title":{},"body":{"modules/UiVirtualScrollViewportResizeModule.html":{}}}],["resize/src/ui",{"_index":3368,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"coverage.html":{}}}],["resizeable",{"_index":1805,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["resized",{"_index":3372,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["resizing",{"_index":1818,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["resolution",{"_index":3992,"title":{},"body":{"index.html":{}}}],["resolve",{"_index":2284,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["resolvefn",{"_index":687,"title":{},"body":{"interfaces/IRegexLike.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvefn(validator)(value",{"_index":706,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["resolver",{"_index":380,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["resolvetimezone",{"_index":389,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvetimezone(this._options",{"_index":468,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["respect",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":953,"title":{},"body":{"interfaces/ISuggestValues.html":{}}}],["responsibility",{"_index":4055,"title":{},"body":{"index.html":{}}}],["restricthtml",{"_index":846,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["restriction",{"_index":4092,"title":{},"body":{"license.html":{}}}],["result",{"_index":912,"title":{},"body":{"interfaces/ISortModel.html":{},"miscellaneous/variables.html":{}}}],["result.jasmine",{"_index":4225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":228,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":261,"title":{},"body":{"classes/FakeFileList.html":{}}}],["return",{"_index":52,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":3919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":92,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":3947,"title":{},"body":{"index.html":{}}}],["revealed",{"_index":2141,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["reverse",{"_index":1978,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["reversed",{"_index":3304,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["review",{"_index":3998,"title":{},"body":{"index.html":{}}}],["rgba(10",{"_index":4237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["right",{"_index":1950,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{}}}],["right'].includes(eventkey",{"_index":3269,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["rights",{"_index":4095,"title":{},"body":{"license.html":{}}}],["rigorous",{"_index":3997,"title":{},"body":{"index.html":{}}}],["role",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":451,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDateFormatDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["rotate(0.03deg",{"_index":2713,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["rotate(180deg",{"_index":1986,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["row",{"_index":316,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridExpandedRowDirective.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["row'},{'name",{"_index":1370,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["row.directive",{"_index":2212,"title":{},"body":{"modules/UiGridModule.html":{}}}],["row.directive.ts",{"_index":2006,"title":{},"body":{"directives/UiGridExpandedRowDirective.html":{},"coverage.html":{}}}],["rowindex",{"_index":2113,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["rows",{"_index":2238,"title":{},"body":{"directives/UiGridRowConfigDirective.html":{},"changelog.html":{}}}],["rowsize",{"_index":308,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"changelog.html":{}}}],["rule",{"_index":2689,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["rule_item_animation",{"_index":2649,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule_list_animation",{"_index":2650,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule_list_in",{"_index":3821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule_list_out",{"_index":3822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ruleanimation",{"_index":4188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rulekey",{"_index":703,"title":{},"body":{"interfaces/IRegexLike.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["rulekeys",{"_index":699,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["rulelabel",{"_index":2613,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["rulelistanimation",{"_index":4190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rules",{"_index":697,"title":{},"body":{"interfaces/IRegexLike.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rules.filter(rule",{"_index":2685,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["rules.length",{"_index":2680,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["rules[rulekey",{"_index":705,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["rulesandstate",{"_index":2665,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["rulesandstates",{"_index":2654,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["rulesnotmet",{"_index":2688,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["rulesnotmet.join",{"_index":2694,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["rulesnotmet.length",{"_index":2692,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["rulestatemap",{"_index":702,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["rulestatemap[rulekey",{"_index":707,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":3460,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runoptions",{"_index":4161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rx",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":362,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"dependencies.html":{}}}],["rxjs/finnish",{"_index":1491,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiPasswordComplexityIntl.html":{},"injectables/UiPasswordToggleIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["rxjs/operators",{"_index":367,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridFooterDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["s",{"_index":613,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["safari",{"_index":3957,"title":{},"body":{"index.html":{}}}],["safekey",{"_index":204,"title":{},"body":{"classes/EventGenerator.html":{}}}],["safekey.code",{"_index":210,"title":{},"body":{"classes/EventGenerator.html":{}}}],["safekey.keycode",{"_index":212,"title":{},"body":{"classes/EventGenerator.html":{}}}],["safekey.name",{"_index":211,"title":{},"body":{"classes/EventGenerator.html":{}}}],["same",{"_index":2575,"title":{},"body":{"directives/UiNgLetDirective.html":{},"changelog.html":{},"index.html":{}}}],["scale(0.8",{"_index":4244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale(1",{"_index":4251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scenario",{"_index":3544,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scenarios",{"_index":252,"title":{},"body":{"classes/FakeFileList.html":{},"directives/UiScrollIntoViewDirective.html":{},"changelog.html":{},"index.html":{}}}],["schema",{"_index":342,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["schemal",{"_index":905,"title":{},"body":{"interfaces/ISortModel.html":{}}}],["scheme.ts",{"_index":3860,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["screen",{"_index":772,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"injectables/QueuedAnnouncer.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["script",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":938,"title":{},"body":{"interfaces/ISuggestValue.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["scrollbar",{"_index":4236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scrollbar:hover",{"_index":4240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scrolldispatcher",{"_index":2472,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["scrolled",{"_index":2856,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["scrolling",{"_index":2837,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{},"changelog.html":{}}}],["scrollingmodule",{"_index":2199,"title":{},"body":{"modules/UiGridModule.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeSelectComponent.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{}}}],["scrollintoviewifneeded",{"_index":2851,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["scrolls",{"_index":2835,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["search",{"_index":1395,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["search'},{'name",{"_index":1341,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["search.component",{"_index":2308,"title":{},"body":{"modules/UiGridSearchModule.html":{}}}],["search.component.html",{"_index":2241,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.scss",{"_index":2240,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts",{"_index":2239,"title":{},"body":{"components/UiGridSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:123",{"_index":2254,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts:39",{"_index":2246,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts:45",{"_index":2249,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts:51",{"_index":2247,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts:57",{"_index":2250,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts:63",{"_index":2245,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts:69",{"_index":2251,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts:76",{"_index":2252,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts:79",{"_index":2257,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.component.ts:93",{"_index":2253,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["search.module",{"_index":2220,"title":{},"body":{"modules/UiGridModule.html":{}}}],["search.module.ts",{"_index":2303,"title":{},"body":{"modules/UiGridSearchModule.html":{}}}],["search/ui",{"_index":2219,"title":{},"body":{"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"modules/UiGridSearchModule.html":{},"coverage.html":{}}}],["searchable",{"_index":302,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/ISuggestValue.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["searchabledropdown",{"_index":1882,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["searchchange",{"_index":2244,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["searchdebounce",{"_index":2049,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["searched",{"_index":2288,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["searches",{"_index":1813,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["searchfilter",{"_index":2052,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["searchmaxlength",{"_index":2050,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["searchplaceholder",{"_index":2102,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["searchshortcutkeydownhandler",{"_index":1054,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["searchshortcutkeydownhandler(event",{"_index":1068,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["searchshortcutkeyuphandler",{"_index":1055,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["searchshortcutkeyuphandler(event",{"_index":1071,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["searchsource",{"_index":928,"title":{},"body":{"interfaces/ISuggestValue.html":{}}}],["searchsourcefactory",{"_index":2274,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["searchterm",{"_index":2053,"title":{},"body":{"directives/UiGridHeaderDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["searchtooltip",{"_index":2103,"title":{},"body":{"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{}}}],["searchvalue",{"_index":2051,"title":{},"body":{"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{}}}],["second",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["secondformat",{"_index":715,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["secondformat'},{'name",{"_index":1348,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["secondformat.directive",{"_index":2886,"title":{},"body":{"modules/UiSecondFormatModule.html":{}}}],["secondformat.directive.ts",{"_index":711,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["secondformat.directive.ts:66",{"_index":2875,"title":{},"body":{"components/UiSecondFormatDirective.html":{}}}],["secondformat.directive.ts:67",{"_index":2880,"title":{},"body":{"components/UiSecondFormatDirective.html":{}}}],["secondformat.directive.ts:72",{"_index":2877,"title":{},"body":{"components/UiSecondFormatDirective.html":{}}}],["secondformat.directive.ts:77",{"_index":2876,"title":{},"body":{"components/UiSecondFormatDirective.html":{}}}],["secondformat.module.ts",{"_index":2885,"title":{},"body":{"modules/UiSecondFormatModule.html":{}}}],["secondformat/src/ui",{"_index":710,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seconds",{"_index":718,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["seconds$.pipe",{"_index":746,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["seconds(seconds",{"_index":735,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["seconds?.humanize",{"_index":747,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["seconds?.toisostring",{"_index":749,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["seen",{"_index":446,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"index.html":{}}}],["select",{"_index":1352,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["select(node",{"_index":3198,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.html",{"_index":3157,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.scss",{"_index":3156,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts",{"_index":3155,"title":{},"body":{"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:101",{"_index":3169,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:105",{"_index":3215,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:109",{"_index":3207,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:122",{"_index":3195,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:129",{"_index":3197,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:142",{"_index":3192,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:146",{"_index":3194,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:150",{"_index":3204,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:154",{"_index":3199,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:171",{"_index":3190,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:181",{"_index":3187,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:189",{"_index":3202,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:55",{"_index":3209,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:58",{"_index":3211,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:61",{"_index":3180,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:68",{"_index":3174,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:77",{"_index":3178,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:83",{"_index":3184,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:89",{"_index":3183,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select.component.ts:95",{"_index":3181,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["select/src/models/tree.models.ts",{"_index":328,"title":{},"body":{"interfaces/IBaseNode.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/ITreeNode.html":{},"coverage.html":{}}}],["select/src/ui",{"_index":3134,"title":{},"body":{"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["select/src/utils/tree.utils.ts",{"_index":1141,"title":{},"body":{"classes/TreeUtils.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["select/src/utils/tree.utils.ts:15",{"_index":1169,"title":{},"body":{"classes/TreeUtils.html":{}}}],["select/src/utils/tree.utils.ts:25",{"_index":1166,"title":{},"body":{"classes/TreeUtils.html":{}}}],["select/src/utils/tree.utils.ts:33",{"_index":1164,"title":{},"body":{"classes/TreeUtils.html":{}}}],["select/src/utils/tree.utils.ts:37",{"_index":1156,"title":{},"body":{"classes/TreeUtils.html":{}}}],["select/src/utils/tree.utils.ts:41",{"_index":1162,"title":{},"body":{"classes/TreeUtils.html":{}}}],["select/src/utils/tree.utils.ts:45",{"_index":1160,"title":{},"body":{"classes/TreeUtils.html":{}}}],["select/src/utils/tree.utils.ts:8",{"_index":1154,"title":{},"body":{"classes/TreeUtils.html":{}}}],["selectcolumns",{"_index":2314,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["selected",{"_index":1676,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["selecting",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["selection",{"_index":752,"title":{},"body":{"interfaces/ISelectionDiff.html":{},"interfaces/ISuggestValue.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"injectables/UiSuggestIntl.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["selectionchange",{"_index":2316,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["selectionchange(undefined",{"_index":2342,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["selectionlocation",{"_index":1242,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["selections",{"_index":321,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{}}}],["selector",{"_index":411,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["self",{"_index":2407,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["sell",{"_index":4099,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3989,"title":{},"body":{"index.html":{}}}],["sent",{"_index":3318,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["sequence",{"_index":3923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["serve",{"_index":1521,"title":{},"body":{"directives/UiClipboardDirective.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["service",{"_index":541,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{}}}],["services",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":422,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiNgLetDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"index.html":{}}}],["setdata(value",{"_index":3213,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["setdate(date",{"_index":1648,"title":{},"body":{"directives/UiDateFormatDirective.html":{}}}],["setdescribedbyids(ids",{"_index":3107,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["setinitialselection(value",{"_index":3212,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["setisformcontrol(value",{"_index":3026,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["setmatcontrol(matcontrol",{"_index":2493,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["setnglet(value",{"_index":2581,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["setoptions(options",{"_index":2353,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["setpageindex(value",{"_index":2023,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["setpagesize(value",{"_index":2022,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["setplaceholder(placeholder",{"_index":3029,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["setprimary(primary",{"_index":1848,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["setrefocus(condition",{"_index":1260,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["setseconds(seconds",{"_index":2879,"title":{},"body":{"components/UiSecondFormatDirective.html":{}}}],["setspecfn",{"_index":3792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settimeout",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["setting",{"_index":1131,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"changelog.html":{}}}],["settings",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["settotal(value",{"_index":3374,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["setuiautofocus(condition",{"_index":1258,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["setuicontentloading(value",{"_index":1568,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["setuiscrollintoview(condition",{"_index":2859,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["setup",{"_index":3581,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["setvalue(value",{"_index":2256,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["setvisible(visible",{"_index":1851,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["setwidth(value",{"_index":1844,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["shall",{"_index":4105,"title":{},"body":{"license.html":{}}}],["share",{"_index":1465,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"components/UiPasswordIndicatorComponent.html":{}}}],["shares",{"_index":1484,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["sharing",{"_index":1486,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["shift",{"_index":578,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["shiftkey",{"_index":213,"title":{},"body":{"classes/EventGenerator.html":{}}}],["shortcut",{"_index":2909,"title":{},"body":{"modules/UiSnackBarModule.html":{},"injectables/UiSnackbarIntl.html":{},"changelog.html":{}}}],["shortcut.directive",{"_index":1100,"title":{},"body":{"modules/KeyboardShortcutModule.html":{}}}],["shortcut.directive.ts",{"_index":1049,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"coverage.html":{}}}],["shortcut.directive.ts:21",{"_index":1062,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["shortcut.directive.ts:24",{"_index":1064,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["shortcut.directive.ts:29",{"_index":1066,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["shortcut.directive.ts:39",{"_index":1067,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["shortcut.module.ts",{"_index":1095,"title":{},"body":{"modules/KeyboardShortcutModule.html":{}}}],["shortcut/src/keyboard",{"_index":1048,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"coverage.html":{}}}],["shortcutkeys",{"_index":1056,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["shortcutpressed",{"_index":1058,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["shouldlabelfloat",{"_index":3003,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["show",{"_index":872,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"injectables/UiPasswordToggleIntl.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"changelog.html":{}}}],["showalloption",{"_index":548,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{}}}],["showdivider",{"_index":2319,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["shown",{"_index":1206,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":2571,"title":{},"body":{"directives/UiNgLetDirective.html":{},"changelog.html":{}}}],["simple",{"_index":93,"title":{},"body":{"classes/EventGenerator.html":{}}}],["simplechange",{"_index":1002,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["simplechange(!primary",{"_index":1878,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["simplechange(!visible",{"_index":1880,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["simplechanges",{"_index":1698,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["simplify",{"_index":16,"title":{},"body":{"classes/EventGenerator.html":{}}}],["simply",{"_index":4032,"title":{},"body":{"index.html":{}}}],["single",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":1945,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"changelog.html":{}}}],["sizes",{"_index":401,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSecondFormatDirective.html":{}}}],["skipped",{"_index":4228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(start",{"_index":3349,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["slot",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":2710,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"changelog.html":{}}}],["smoothing",{"_index":2709,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["snack",{"_index":779,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["snackbar",{"_index":783,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["snackbar.component",{"_index":2911,"title":{},"body":{"modules/UiSnackBarModule.html":{}}}],["snackbar.component.html",{"_index":807,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["snackbar.component.scss",{"_index":809,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["snackbar.component.ts",{"_index":761,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["snackbar.component.ts:149",{"_index":2565,"title":{},"body":{"classes/UiMatSnackBarConfig.html":{}}}],["snackbar.component.ts:179",{"_index":2921,"title":{},"body":{"injectables/UiSnackBarService.html":{}}}],["snackbar.component.ts:186",{"_index":2920,"title":{},"body":{"injectables/UiSnackBarService.html":{}}}],["snackbar.component.ts:193",{"_index":2923,"title":{},"body":{"injectables/UiSnackBarService.html":{}}}],["snackbar.component.ts:200",{"_index":2924,"title":{},"body":{"injectables/UiSnackBarService.html":{}}}],["snackbar.component.ts:201",{"_index":2918,"title":{},"body":{"injectables/UiSnackBarService.html":{}}}],["snackbar.component.ts:228",{"_index":2922,"title":{},"body":{"injectables/UiSnackBarService.html":{}}}],["snackbar.component.ts:244",{"_index":2919,"title":{},"body":{"injectables/UiSnackBarService.html":{}}}],["snackbar.component.ts:69",{"_index":2892,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["snackbar.component.ts:90",{"_index":2888,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["snackbar.component.ts:94",{"_index":2889,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["snackbar.component.ts:95",{"_index":2890,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["snackbar.intl",{"_index":804,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["snackbar.intl.ts",{"_index":2925,"title":{},"body":{"injectables/UiSnackbarIntl.html":{},"coverage.html":{}}}],["snackbar.intl.ts:10",{"_index":2928,"title":{},"body":{"injectables/UiSnackbarIntl.html":{}}}],["snackbar.intl.ts:11",{"_index":2930,"title":{},"body":{"injectables/UiSnackbarIntl.html":{}}}],["snackbar.intl.ts:14",{"_index":2927,"title":{},"body":{"injectables/UiSnackbarIntl.html":{}}}],["snackbar.module.ts",{"_index":2905,"title":{},"body":{"modules/UiSnackBarModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snackbar/src/ui",{"_index":760,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["snackbaraction",{"_index":843,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/typealiases.html":{}}}],["snackbarref",{"_index":826,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["snackbars",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["snackbartype",{"_index":832,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["snackbartype.error",{"_index":842,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["snackbartype.info",{"_index":838,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["snackbartype.none",{"_index":874,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["snackbartype.success",{"_index":839,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["snackbartype.warning",{"_index":841,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["snapshot",{"_index":754,"title":{},"body":{"interfaces/ISelectionDiff.html":{}}}],["software",{"_index":4064,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":2706,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["solution",{"_index":4025,"title":{},"body":{"index.html":{}}}],["some(change",{"_index":1896,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["sometimes",{"_index":3995,"title":{},"body":{"index.html":{}}}],["sonarjs/no",{"_index":3339,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["sort",{"_index":904,"title":{},"body":{"interfaces/ISortModel.html":{},"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["sortable",{"_index":1806,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["sortablemessage",{"_index":2104,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["sortbypriorityanddirection",{"_index":3048,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["sortdirection",{"_index":909,"title":{},"body":{"interfaces/ISortModel.html":{},"directives/UiGridColumnDirective.html":{}}}],["sorted",{"_index":910,"title":{},"body":{"interfaces/ISortModel.html":{},"injectables/UiGridIntl.html":{}}}],["sorting",{"_index":1825,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"modules/KeyboardShortcutModule.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{}}}],["source.next(value",{"_index":1608,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["source.value",{"_index":1607,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["space",{"_index":668,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiSnackBarComponent.html":{},"changelog.html":{}}}],["spacing",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["span",{"_index":891,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["span.innerhtml",{"_index":894,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["span.innertext",{"_index":893,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["span.remove",{"_index":895,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["spec",{"_index":4214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specified",{"_index":262,"title":{},"body":{"classes/FakeFileList.html":{},"directives/KeyboardShortcutDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["specify",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":1412,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["spinner'},{'name",{"_index":1334,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["spinner.component",{"_index":1571,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{}}}],["spinner.component.html",{"_index":1427,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":1426,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":1425,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"coverage.html":{}}}],["spinner.component.ts:19",{"_index":1431,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["spinner.component.ts:20",{"_index":1432,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["spinner.component.ts:22",{"_index":1433,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["spinner.component.ts:23",{"_index":1434,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["spinner.component.ts:24",{"_index":1430,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["spinner.component.ts:26",{"_index":1429,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["spinner.component.ts:27",{"_index":1635,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["spinner.component.ts:28",{"_index":1627,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["spinner.component.ts:29",{"_index":1629,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["spinner.component.ts:30",{"_index":1634,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["spinner.component.ts:41",{"_index":1626,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["spinnerbuttonclass",{"_index":2942,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{},"miscellaneous/enumerations.html":{}}}],["spinnerbuttonclass.base",{"_index":2951,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["spinnerbuttonclass.loading",{"_index":2956,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["spinnerbuttoncolor",{"_index":2931,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["spinnerbuttonloading",{"_index":2932,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["spinnerbuttonmode",{"_index":2933,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["spinnerbuttonvalue",{"_index":2934,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["split",{"_index":1762,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["squashed",{"_index":4034,"title":{},"body":{"index.html":{}}}],["stack",{"_index":4210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stage",{"_index":4030,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":3149,"title":{},"body":{"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["standard",{"_index":3978,"title":{},"body":{"index.html":{}}}],["standards",{"_index":4165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":1246,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"index.html":{}}}],["startcase",{"_index":2620,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["startcase(rulekey",{"_index":2622,"title":{},"body":{"injectables/UiPasswordComplexityIntl.html":{}}}],["started",{"_index":3394,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["startwith",{"_index":2739,"title":{},"body":{"components/UiPasswordToggleComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["state",{"_index":549,"title":{},"body":{"interfaces/IDropdownOption.html":{},"interfaces/ISuggestValue.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["state('closed",{"_index":4243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.isvisible",{"_index":2757,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["state[rule",{"_index":2686,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["state[rulekey",{"_index":2682,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["statechanges",{"_index":3082,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["statements",{"_index":3781,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":26,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"classes/TreeUtils.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["status",{"_index":3300,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["statuschanges",{"_index":2661,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["stay",{"_index":4008,"title":{},"body":{"index.html":{}}}],["still",{"_index":291,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["strategies",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":2280,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["stream",{"_index":353,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["stream.ts",{"_index":3876,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["streamfactory",{"_index":3940,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["streams",{"_index":2570,"title":{},"body":{"directives/UiNgLetDirective.html":{},"miscellaneous/functions.html":{}}}],["stricttemplates",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":203,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stringornumberkeyof",{"_index":4140,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["strings",{"_index":1076,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["stroke",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["stroked",{"_index":1406,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["strokewidth",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["strongly",{"_index":402,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["structural",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["structure",{"_index":528,"title":{},"body":{"interfaces/IDropEvent.html":{}}}],["style",{"_index":1621,"title":{},"body":{"components/UiContentSpinnerComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["style.min",{"_index":1623,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["styled",{"_index":1820,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["styles",{"_index":1297,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":808,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeSelectComponent.html":{}}}],["subject",{"_index":1464,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"license.html":{}}}],["sublicense",{"_index":4097,"title":{},"body":{"license.html":{}}}],["submitting",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["subscribe",{"_index":454,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["subscribe((open",{"_index":2376,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["subscribe(this._announcechanges",{"_index":2673,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["subscribe(this._onkeydown",{"_index":2374,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["subscribe(this._render",{"_index":1582,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["subscribe(this._updatedisabletooltipproperty(matcontrol",{"_index":2509,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["subscribe(value",{"_index":2267,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["subscription",{"_index":2496,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["substantial",{"_index":4106,"title":{},"body":{"license.html":{}}}],["succesfully",{"_index":1526,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["success",{"_index":835,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/enumerations.html":{}}}],["suffix",{"_index":732,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["suggest",{"_index":925,"title":{},"body":{"interfaces/ISuggestValue.html":{},"modules/UiGridModule.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{}}}],["suggest.animations.ts",{"_index":3829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["suggest.component",{"_index":3133,"title":{},"body":{"modules/UiSuggestModule.html":{}}}],["suggest.component.ts",{"_index":3831,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["suggest.intl.ts",{"_index":2965,"title":{},"body":{"injectables/UiSuggestIntl.html":{},"coverage.html":{}}}],["suggest.intl.ts:19",{"_index":2982,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.intl.ts:24",{"_index":2977,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.intl.ts:29",{"_index":2990,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.intl.ts:34",{"_index":2987,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.intl.ts:39",{"_index":2985,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.intl.ts:46",{"_index":2975,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.intl.ts:57",{"_index":2978,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.intl.ts:64",{"_index":2984,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.intl.ts:70",{"_index":2988,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.intl.ts:79",{"_index":2991,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["suggest.mat",{"_index":2994,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"coverage.html":{}}}],["suggest.module.ts",{"_index":3127,"title":{},"body":{"modules/UiSuggestModule.html":{}}}],["suggest/src/models/suggestdirection.ts",{"_index":4148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["suggest/src/models/suggestdisplaypriority.ts",{"_index":4149,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["suggest/src/models/suggestvalue.ts",{"_index":917,"title":{},"body":{"interfaces/ISuggestValue.html":{},"coverage.html":{}}}],["suggest/src/models/suggestvaluedata.ts",{"_index":948,"title":{},"body":{"interfaces/ISuggestValueData.html":{},"coverage.html":{}}}],["suggest/src/models/suggestvalues.ts",{"_index":951,"title":{},"body":{"interfaces/ISuggestValues.html":{},"coverage.html":{}}}],["suggest/src/ui",{"_index":2964,"title":{},"body":{"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["suggestdirection",{"_index":3046,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"miscellaneous/typealiases.html":{}}}],["suggestdisplaypriority",{"_index":3008,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"miscellaneous/typealiases.html":{}}}],["suggestion",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["suggestvalue",{"_index":949,"title":{},"body":{"interfaces/ISuggestValueData.html":{}}}],["suggestvaluedata",{"_index":958,"title":{},"body":{"interfaces/ISuggestValues.html":{}}}],["suite",{"_index":3559,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":3490,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":480,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["super(intl",{"_index":1934,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["super.ngondestroy",{"_index":563,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["support",{"_index":1969,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridFooterDirective.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":4131,"title":{},"body":{"modules.html":{}}}],["svg[style",{"_index":1450,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["svgicon",{"_index":945,"title":{},"body":{"interfaces/ISuggestValue.html":{}}}],["switch",{"_index":391,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"miscellaneous/variables.html":{}}}],["symbol",{"_index":4234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol.iterator",{"_index":280,"title":{},"body":{"classes/FakeFileList.html":{}}}],["sync",{"_index":4255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":325,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiNgLetDirective.html":{},"miscellaneous/functions.html":{}}}],["tab",{"_index":670,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["tabindex]:not([tabindex",{"_index":4200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":3880,"title":{},"body":{"coverage.html":{}}}],["table_chart",{"_index":2400,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3879,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":365,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["take(1",{"_index":439,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["takes",{"_index":3308,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["takeuntil",{"_index":366,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["takeuntil(this._destroy",{"_index":3385,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["takeuntil(this._destroyed",{"_index":494,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{}}}],["taking",{"_index":3298,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["tap",{"_index":2026,"title":{},"body":{"directives/UiGridFooterDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["tap(ev",{"_index":2039,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["tap(range",{"_index":3345,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["tar",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":191,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISortModel.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["target.files",{"_index":1734,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["targeted",{"_index":573,"title":{},"body":{"interfaces/IFilterModel.html":{}}}],["task",{"_index":435,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{}}}],["tasks",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":3951,"title":{},"body":{"index.html":{}}}],["technology",{"_index":1209,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":726,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{}}}],["templateref",{"_index":784,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["templateurl",{"_index":806,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["term",{"_index":2065,"title":{},"body":{"directives/UiGridHeaderDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["terser",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":250,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/IRegexLike.html":{},"changelog.html":{}}}],["tested",{"_index":81,"title":{},"body":{"classes/EventGenerator.html":{}}}],["testing",{"_index":85,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"changelog.html":{},"index.html":{}}}],["tests",{"_index":10,"title":{},"body":{"classes/EventGenerator.html":{},"changelog.html":{}}}],["text",{"_index":507,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISuggestValue.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{}}}],["textarea",{"_index":4198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thanks",{"_index":3965,"title":{},"body":{"index.html":{}}}],["theme",{"_index":3524,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["theming",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["then(this._announcenext",{"_index":1138,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["they've",{"_index":2163,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["think",{"_index":4063,"title":{},"body":{"index.html":{}}}],["thinking",{"_index":4015,"title":{},"body":{"index.html":{}}}],["this._absolutetime",{"_index":500,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._additionaloptions?.restricthtml",{"_index":889,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._addsafebuffer(start",{"_index":3354,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this._adjustloadingrange(start",{"_index":3337,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this._alert(type",{"_index":873,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._alertfactory(snackbartype.error",{"_index":865,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._alertfactory(snackbartype.info",{"_index":863,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._alertfactory(snackbartype.success",{"_index":867,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._alertfactory(snackbartype.warning",{"_index":869,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._announcenext",{"_index":1121,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["this._announcer.announce",{"_index":2691,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this._applybuffervalue",{"_index":2810,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._applycolor",{"_index":2812,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["this._applyloading",{"_index":2804,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["this._applymode",{"_index":2806,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["this._applyvalue",{"_index":2808,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["this._ariadescriber",{"_index":2540,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._autofocus",{"_index":1264,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["this._buttonelement",{"_index":2817,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["this._buttons.filter(b",{"_index":2075,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["this._cd.detectchanges",{"_index":1283,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["this._cd.markforcheck",{"_index":455,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._cdkvirtualforof.datastream.pipe",{"_index":3327,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this._change",{"_index":1583,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._change$.complete",{"_index":1588,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._change$.next",{"_index":1586,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._checker.isfocusable(el",{"_index":1285,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["this._clickservice",{"_index":1503,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["this._clipboard",{"_index":1532,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["this._clipboard.destroy",{"_index":1538,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["this._clipboard.on('error",{"_index":1536,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["this._clipboard.on('success",{"_index":1534,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["this._columns$.complete",{"_index":994,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this._columns$.getvalue",{"_index":1004,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this._columns$.next(columns",{"_index":993,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this._columns$.pipe",{"_index":979,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this._componentfactory.resolvecomponentfactory(type",{"_index":2462,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._componentportal",{"_index":818,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._container.clear",{"_index":1591,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._container.createcomponent(factory",{"_index":1594,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiLoaderButtonDirective.html":{}}}],["this._container.createembeddedview(this._ref",{"_index":1596,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._container.element.nativeelement",{"_index":2445,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._container.injector",{"_index":2463,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._context",{"_index":2592,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["this._context.$implicit",{"_index":2586,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["this._context.nglet",{"_index":2587,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["this._createloader(loadertype",{"_index":2448,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._createmattooltip",{"_index":2521,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._currentindex",{"_index":2368,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this._customkeydownhandle(event.key",{"_index":3245,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._datasource",{"_index":3229,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._datasource.data",{"_index":3228,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._date",{"_index":427,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._defaultoptions",{"_index":2544,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._destroy$.complete",{"_index":3387,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["this._destroy$.next",{"_index":3386,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["this._destroyed$.complete",{"_index":2270,"title":{},"body":{"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this._destroyed$.next",{"_index":1499,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiFormatDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiSnackbarIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this._destroyspinner",{"_index":1589,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._dir",{"_index":2543,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._direction",{"_index":3069,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._disposalcallbacks.foreach(dispose",{"_index":1741,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._disposalcallbacks.push",{"_index":1778,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._disposalcallbacks.push(browse",{"_index":1730,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._disposalcallbacks.push(change",{"_index":1736,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._disposalcallbacks.push(clear",{"_index":1740,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._document",{"_index":2545,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._doifchange(changes[key",{"_index":2455,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._el.nativeelement",{"_index":1277,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["this._el.nativeelement.queryselector('.mat",{"_index":3153,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["this._el.nativeelement.setselectionrange",{"_index":1282,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["this._el.nativeelement.value.length",{"_index":1281,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["this._element.nativeelement",{"_index":2864,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["this._element.nativeelement.parentelement",{"_index":2867,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["this._elementref",{"_index":3059,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._elementref.nativeelement",{"_index":1719,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["this._elementref.nativeelement.hasattribute('required",{"_index":3055,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._elemref.nativeelement.classlist.contains('mat",{"_index":2520,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._elemref.nativeelement.queryselector('[required",{"_index":2519,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._elemref.nativeelement.queryselector(matformfield_label_selector)?.parentnode",{"_index":2518,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._emitfiles(ev.datatransfer!.files",{"_index":1746,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._emitfiles(target.files",{"_index":1735,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._emitifchanged(spinner.color",{"_index":1602,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._emitifchanged(spinner.diameter",{"_index":1600,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._emitifchanged(spinner.mode",{"_index":1598,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._emitifchanged(spinner.value",{"_index":1604,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._errorstatematcher.iserrorstate(control",{"_index":3104,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._evaluate",{"_index":495,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._fileinput",{"_index":1707,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._fileinput.click",{"_index":1729,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._focusmonitor",{"_index":2541,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._focusonreset",{"_index":2393,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this._formfieldappearance",{"_index":1936,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["this._getfocusablenode(this._el.nativeelement",{"_index":1274,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["this._initial",{"_index":986,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this._initialize",{"_index":2813,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["this._initialselection",{"_index":3223,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._initialselection.foreach((key",{"_index":3274,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._initialselection.length",{"_index":3224,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._injector",{"_index":824,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._intl",{"_index":2744,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this._intl.changes",{"_index":2746,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this._intl.tooltiphide",{"_index":2749,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this._intl.tooltipshow",{"_index":2750,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this._isannouncing",{"_index":1120,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["this._isarrowdown(e",{"_index":2386,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this._isarrowup(e",{"_index":2384,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this._isdifferentvalue(date",{"_index":426,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._isdragging",{"_index":1745,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._isfirstvalidindex",{"_index":2391,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this._isformcontrol",{"_index":3058,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._isrelative(this.contenttype",{"_index":493,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._isrelative(this.titletype",{"_index":492,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._isrelative(type",{"_index":519,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._isresetindex",{"_index":2367,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this._isvalidrange",{"_index":3335,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this._isvisible",{"_index":2753,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this._items",{"_index":3077,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._keyinshortcut(event",{"_index":1078,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["this._keymanager",{"_index":3239,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._keymanager.activeitem?.node",{"_index":3242,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._keymanager.onkeydown(event",{"_index":3243,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._keymanager?.activeitemindex",{"_index":3200,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._keymanager?.updateactiveitem(i",{"_index":3248,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._labelelement",{"_index":2517,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._lastabsolutetime",{"_index":499,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._lastcontenttype",{"_index":503,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._lastrelativetime",{"_index":501,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._lasttitletype",{"_index":504,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._liveannouncer.announce(this._msgqueue.shift",{"_index":1124,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["this._loader",{"_index":2449,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._loader.buffervalue$.next(this.progressbuttonbuffervalue",{"_index":2823,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._loader.color$.next(this.progressbuttoncolor",{"_index":2819,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._loader.color$.next(this.spinnerbuttoncolor",{"_index":2952,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._loader.isround$.next(isround",{"_index":2946,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._loader.loading$.next(this.progressbuttonloading",{"_index":2827,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._loader.loading$.next(this.spinnerbuttonloading",{"_index":2958,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._loader.mode$.next(this.progressbuttonmode",{"_index":2825,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._loader.mode$.next(this.spinnerbuttonmode",{"_index":2954,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._loader.value$.next(this.progressbuttonvalue",{"_index":2821,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._loader.value$.next(this.spinnerbuttonvalue",{"_index":2953,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._loaderelement",{"_index":2451,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["this._loaderref",{"_index":2447,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._loaderref.destroy",{"_index":2456,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._loaderref.instance",{"_index":2450,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._loaderref.location.nativeelement",{"_index":2452,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._loading",{"_index":1581,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._loading$.complete",{"_index":1587,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._loading$.next(value",{"_index":1573,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._mapinitial(columns",{"_index":992,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this._mapoptions(columns",{"_index":1026,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this._mapoptions(columns).map(this._maptovisiblediff",{"_index":1014,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this._maptorenderedoptions(cols",{"_index":983,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this._matcontrolsubscription",{"_index":2506,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._matcontrolsubscription.unsubscribe",{"_index":2507,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._msgqueue.length",{"_index":1123,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["this._msgqueue.push(msg",{"_index":1119,"title":{},"body":{"injectables/QueuedAnnouncer.html":{}}}],["this._ngzone",{"_index":2538,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._options",{"_index":481,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["this._options.contenttype",{"_index":485,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._options.duration",{"_index":877,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._options.findindex(o",{"_index":2369,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this._options.format",{"_index":483,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._options.redraw",{"_index":488,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._options.titletype",{"_index":487,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._overlay",{"_index":2535,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._parentform",{"_index":3102,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._parentformgroup",{"_index":3101,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._placeholder",{"_index":3064,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._platform",{"_index":2539,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._pressedkeys[event.key",{"_index":1079,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["this._pressedkeys[key",{"_index":1082,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["this._preventall",{"_index":1777,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._preventall(ev",{"_index":1732,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._prevententeronchildren(this._elementref.nativeelement",{"_index":1717,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._primary",{"_index":1875,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["this._redraw",{"_index":490,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._redraw$.next",{"_index":1796,"title":{},"body":{"directives/UiFormatDirective.html":{}}}],["this._ref",{"_index":880,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._ref.dismiss",{"_index":881,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._registerwatcher('progressbuttonbuffervalue",{"_index":2809,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._registerwatcher('progressbuttoncolor",{"_index":2811,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._registerwatcher('progressbuttonloading",{"_index":2803,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._registerwatcher('progressbuttonmode",{"_index":2805,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._registerwatcher('progressbuttonvalue",{"_index":2807,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["this._registerwatcher('spinnerbuttoncolor",{"_index":2950,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._registerwatcher('spinnerbuttonloading",{"_index":2947,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._registerwatcher('spinnerbuttonmode",{"_index":2948,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._registerwatcher('spinnerbuttonvalue",{"_index":2949,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._relativetime",{"_index":502,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._renderer",{"_index":1725,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._renderer.addclass(this._buttonelement",{"_index":2814,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["this._renderer.appendchild",{"_index":2816,"title":{},"body":{"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["this._renderer.appendchild(this._elementref.nativeelement",{"_index":511,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{}}}],["this._renderer.createelement('input",{"_index":1708,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._renderer.createtext(text",{"_index":510,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._renderer.listen(child",{"_index":1776,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._renderer.listen(this._fileinput",{"_index":1731,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._renderer.removechild(this._elementref.nativeelement",{"_index":1797,"title":{},"body":{"directives/UiFormatDirective.html":{}}}],["this._renderer.removeclass(this._buttonelement",{"_index":2957,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this._renderer.setattribute(this._elementref.nativeelement",{"_index":515,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._renderer.setattribute(this._fileinput",{"_index":1710,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._renderer.setproperty(this._fileinput",{"_index":1709,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._renderer.setproperty(this.element",{"_index":2754,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this._renderer.setstyle(this.filebrowseref",{"_index":1720,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this._renderer.setvalue(this._text",{"_index":512,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._required",{"_index":3053,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._resolver.resolvecomponentfactory(uicontentspinnercomponent",{"_index":1593,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._reverseindex",{"_index":3342,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this._scrolldispatcher",{"_index":2536,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._scrollstrategy",{"_index":2542,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._seconds$.next(seconds",{"_index":736,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["this._seconds$.pipe(distinctuntilchanged",{"_index":741,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["this._seconds$.value",{"_index":734,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["this._selected",{"_index":2360,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this._selectinitialnode",{"_index":3225,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._snackbar.openfromcomponent(uisnackbarcomponent",{"_index":898,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._snackintl",{"_index":861,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._snackintl.closesnackbarshortcut",{"_index":899,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this._sortitems(this._items",{"_index":3078,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._spinner",{"_index":1584,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._spinner.destroy",{"_index":1610,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._state",{"_index":2035,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["this._state.pageindex",{"_index":2032,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["this._state.pagesize",{"_index":2030,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["this._templateref",{"_index":2591,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["this._text",{"_index":509,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiFormatDirective.html":{}}}],["this._timefortype(this.contenttype",{"_index":508,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._timefortype(this.titletype",{"_index":516,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._timefortypechanged(this.contenttype",{"_index":506,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._timefortypechanged(this.titletype",{"_index":514,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._togglevisibiltystate",{"_index":2752,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this._tooltip",{"_index":2523,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._tooltip!.message",{"_index":2551,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._tooltip.disabled",{"_index":2526,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._tooltip.message",{"_index":2546,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._tooltip.ngafterviewinit",{"_index":2549,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._total$.next(value",{"_index":3379,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["this._total$.pipe",{"_index":3383,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["this._treecontrol",{"_index":3236,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._treecontrol.collapse(node",{"_index":3261,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._treecontrol.expand(node",{"_index":3259,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._treecontrol.isexpanded(node",{"_index":3246,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this._triminterval(start",{"_index":3357,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this._updatecontent",{"_index":498,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._updatespinner(this._spinner!.instance",{"_index":1585,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._updatespinner(this._spinner.instance",{"_index":1595,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this._updatetitle",{"_index":497,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this._value",{"_index":3070,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._value.length",{"_index":3068,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this._vcr.createembeddedview",{"_index":2590,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["this._viewcontainerref",{"_index":2537,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this._viewport.checkviewportsize",{"_index":3384,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["this._viewport.getdatalength",{"_index":3378,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["this._viewport.renderedrangestream",{"_index":3326,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this._visible",{"_index":1879,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["this._watchers",{"_index":2454,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._watchers.set(key",{"_index":2460,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["this._width",{"_index":1871,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["this._zone.onmicrotaskempty",{"_index":430,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["this._zone.onstable",{"_index":437,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["this._zone.runoutsideangular",{"_index":429,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["this.actionbuttons",{"_index":2077,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["this.ascending",{"_index":2181,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["this.block",{"_index":2865,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["this.boundary",{"_index":2866,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["this.buffer",{"_index":3338,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this.buffervalue$.complete",{"_index":1322,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{}}}],["this.change$.complete",{"_index":1901,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["this.change$.next",{"_index":1877,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["this.change$.next(changes",{"_index":1900,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["this.changes.complete",{"_index":2184,"title":{},"body":{"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiSuggestIntl.html":{}}}],["this.click",{"_index":196,"title":{},"body":{"classes/EventGenerator.html":{}}}],["this.clipboarderror.emit(e",{"_index":1537,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["this.clipboardsuccess.emit(e",{"_index":1535,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["this.collapse(activenode",{"_index":3272,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.collapse(node",{"_index":3264,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.collapsed.emit(node",{"_index":3262,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.color$.complete",{"_index":1323,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["this.contenttype",{"_index":484,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this.control",{"_index":2657,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.control.dirty",{"_index":2676,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.control.geterror(validation_rule_name",{"_index":2659,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.control.haserror(validation_rule_name",{"_index":2677,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.currentselectednodes.clear",{"_index":3250,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.currentselectednodes.has(node.key",{"_index":3247,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.currentselectednodes.set(node.key",{"_index":3251,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.cursor.update(offsetx",{"_index":198,"title":{},"body":{"classes/EventGenerator.html":{}}}],["this.customitemsize",{"_index":3066,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.data.message",{"_index":814,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this.data.payload",{"_index":823,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this.date",{"_index":462,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this.dateformat",{"_index":482,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this.descending",{"_index":2182,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["this.describedby",{"_index":3108,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.diameter",{"_index":1630,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["this.diameter$.complete",{"_index":1640,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["this.diameter$.value",{"_index":1638,"title":{},"body":{"components/UiContentSpinnerComponent.html":{}}}],["this.dirty",{"_index":2373,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.disabled",{"_index":1728,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this.displaypriority",{"_index":3122,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.element",{"_index":1273,"title":{},"body":{"directives/UiAutofocusDirective.html":{},"components/UiPasswordToggleComponent.html":{}}}],["this.empty",{"_index":3052,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.enqueuefocus",{"_index":1266,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["this.error",{"_index":864,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this.errorstate",{"_index":3099,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.expand(activenode",{"_index":3270,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.expand(node",{"_index":3265,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.expanded.emit",{"_index":3152,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["this.expanded.emit(node",{"_index":3260,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.filebrowseref",{"_index":1718,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this.filechange.emit(emittedfiles",{"_index":1771,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this.fileclear.emit",{"_index":1739,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this.fileclearref",{"_index":1737,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this.files.length",{"_index":273,"title":{},"body":{"classes/FakeFileList.html":{}}}],["this.files.push(file",{"_index":284,"title":{},"body":{"classes/FakeFileList.html":{}}}],["this.files[symbol.iterator",{"_index":281,"title":{},"body":{"classes/FakeFileList.html":{}}}],["this.filetype",{"_index":1761,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["this.filterchange.complete",{"_index":564,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["this.focus(this.element",{"_index":1275,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["this.focused",{"_index":3051,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.getisnodeexpandable",{"_index":1152,"title":{},"body":{"classes/TreeUtils.html":{}}}],["this.getnodechildren",{"_index":1153,"title":{},"body":{"classes/TreeUtils.html":{}}}],["this.getnodelevel",{"_index":1151,"title":{},"body":{"classes/TreeUtils.html":{}}}],["this.handlemultiple(value",{"_index":2291,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["this.hidevalidruledefinition",{"_index":2684,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.info",{"_index":862,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this.inlinebuttons",{"_index":2078,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["this.inputcontrol.setvalue",{"_index":3106,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.intl",{"_index":2515,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this.intl.allmet",{"_index":2695,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.intl.changes.pipe",{"_index":2550,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this.intl.notmet",{"_index":2693,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.intl.rulelabel(rule",{"_index":2690,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.intl.tooltipmessage",{"_index":2547,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{}}}],["this.isdown",{"_index":3123,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this.iserrorstate",{"_index":2660,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.isformcontrol",{"_index":3067,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.isround$.complete",{"_index":1436,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{}}}],["this.isvisible",{"_index":2745,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this.isvisible$.complete",{"_index":2751,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this.isvisible$.next(!this._isvisible",{"_index":2756,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this.isvisible$.value",{"_index":2742,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["this.length",{"_index":2040,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["this.loading$.complete",{"_index":1319,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{}}}],["this.mainbuttons",{"_index":2074,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["this.mode$.complete",{"_index":1320,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["this.multiple",{"_index":1716,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["this.ngcontrol",{"_index":3092,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.ngcontrol.control",{"_index":3100,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":3096,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.nodetransformer",{"_index":1150,"title":{},"body":{"classes/TreeUtils.html":{}}}],["this.options$.pipe",{"_index":985,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this.pagechange.complete",{"_index":2041,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["this.pagechange.pipe",{"_index":2038,"title":{},"body":{"directives/UiGridFooterDirective.html":{}}}],["this.pagesize",{"_index":1932,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{}}}],["this.percentage",{"_index":2668,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.rangeload.emit(range",{"_index":3346,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["this.registerchange",{"_index":3116,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.registerchange(checkednewvalue",{"_index":3076,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.registertouch",{"_index":3119,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.removeelement(value",{"_index":2294,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["this.resetbtn?.focus('keyboard",{"_index":2399,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.resetcolumns.emit",{"_index":2381,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.rules",{"_index":2663,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.scrollintoviewifneeded",{"_index":2863,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["this.search.setvalue",{"_index":2271,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["this.search.setvalue(value",{"_index":2262,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["this.search.value",{"_index":2260,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["this.search.valuechanges.pipe",{"_index":2263,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["this.searchchange.complete",{"_index":2269,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["this.searchchange.emit(value",{"_index":2268,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["this.searchfilter.complete",{"_index":2079,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["this.searchterm.complete",{"_index":2080,"title":{},"body":{"directives/UiGridHeaderDirective.html":{}}}],["this.seconds",{"_index":742,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["this.select(activenode",{"_index":3268,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.select(node",{"_index":3276,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.selectcolumns",{"_index":2362,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.selectcolumns!.close",{"_index":2382,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.selectcolumns!.focus",{"_index":2383,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.selectcolumns!.openedchange",{"_index":2375,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.selectcolumns._keymanager.activeitemindex",{"_index":2363,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.selectcolumns._keymanager.setactiveitem(i",{"_index":2365,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.selectcolumns?._keymanager.setfirstitemactive",{"_index":2390,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.selectcolumns?.focus",{"_index":2387,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.selected.emit",{"_index":3151,"title":{},"body":{"components/UiTreeItemComponent.html":{}}}],["this.selected.emit(entry",{"_index":3075,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.selected.emit(selection",{"_index":3257,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["this.selectionlocation",{"_index":1280,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["this.shortcutkeys.find(keycombination",{"_index":1080,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["this.shortcutpressed.emit",{"_index":1083,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["this.source",{"_index":1494,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["this.spinnerbuttonloading",{"_index":2955,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["this.state",{"_index":2656,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.state$.pipe",{"_index":2670,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.statechanges.next",{"_index":3056,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.success",{"_index":866,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this.text",{"_index":745,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{}}}],["this.title",{"_index":1868,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["this.titletype",{"_index":486,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["this.tooltip",{"_index":748,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{}}}],["this.uiclickoutside",{"_index":1502,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["this.uiclipboard",{"_index":1530,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["this.uicontentloadingcolor",{"_index":1603,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this.uicontentloadingdiameter",{"_index":1601,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this.uicontentloadingmode",{"_index":1599,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this.uicontentloadingvalue",{"_index":1605,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["this.update",{"_index":996,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["this.value",{"_index":561,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["this.value$.complete",{"_index":1321,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{}}}],["this.value.findindex(item",{"_index":2296,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["this.value.splice(index",{"_index":2299,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["this.visible$.next(visible",{"_index":557,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["this.visible$.value",{"_index":555,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["this.visiblecolumns.emit(value",{"_index":2380,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.visiblecolumnstoggled.emit(open",{"_index":2377,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["this.visiblerules",{"_index":2666,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["this.warning",{"_index":868,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["this[idx",{"_index":279,"title":{},"body":{"classes/FakeFileList.html":{}}}],["this[this.files.length",{"_index":283,"title":{},"body":{"classes/FakeFileList.html":{}}}],["throttletime",{"_index":1466,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["throttletime(1000",{"_index":1498,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["through",{"_index":3284,"title":{},"body":{"components/UiTreeSelectComponent.html":{},"index.html":{}}}],["throw",{"_index":224,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/TreeUtils.html":{},"directives/UiClipboardDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["thumb",{"_index":4238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":2058,"title":{},"body":{"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{}}}],["timezone",{"_index":345,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["timezone](https://www.npmjs.com/package/moment",{"_index":398,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["timezoneresolver",{"_index":356,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":358,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISortModel.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["titletype",{"_index":346,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["tmp",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":1021,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"modules/UiGridModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiTreeSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle'},{'name",{"_index":1347,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["toggle(node",{"_index":3201,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["toggle.component",{"_index":2771,"title":{},"body":{"modules/UiPasswordToggleModule.html":{}}}],["toggle.component.html",{"_index":2727,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.component.ts",{"_index":2726,"title":{},"body":{"components/UiPasswordToggleComponent.html":{},"coverage.html":{}}}],["toggle.component.ts:37",{"_index":2733,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.component.ts:44",{"_index":2732,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.component.ts:50",{"_index":2737,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.component.ts:56",{"_index":2738,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.component.ts:62",{"_index":2731,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.component.ts:82",{"_index":2735,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.component.ts:91",{"_index":2734,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.component.ts:97",{"_index":2736,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.intl",{"_index":2740,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["toggle.intl.ts",{"_index":2759,"title":{},"body":{"injectables/UiPasswordToggleIntl.html":{},"coverage.html":{}}}],["toggle.intl.ts:10",{"_index":2764,"title":{},"body":{"injectables/UiPasswordToggleIntl.html":{}}}],["toggle.intl.ts:11",{"_index":2763,"title":{},"body":{"injectables/UiPasswordToggleIntl.html":{}}}],["toggle.intl.ts:8",{"_index":2762,"title":{},"body":{"injectables/UiPasswordToggleIntl.html":{}}}],["toggle.module.ts",{"_index":2770,"title":{},"body":{"modules/UiPasswordToggleModule.html":{}}}],["toggle/src/ui",{"_index":2725,"title":{},"body":{"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"modules/UiPasswordToggleModule.html":{},"coverage.html":{}}}],["toggled",{"_index":1811,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"components/UiPasswordToggleComponent.html":{}}}],["toggleplaceholdertitle",{"_index":2105,"title":{},"body":{"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["toggleresettodefaults",{"_index":2106,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["toggletitle",{"_index":2107,"title":{},"body":{"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["toggletooltip",{"_index":2108,"title":{},"body":{"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["token",{"_index":383,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toolip",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":417,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiDateFormatDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiGridSearchComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["tooltip's",{"_index":1205,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"miscellaneous/variables.html":{}}}],["tooltipdisabled",{"_index":2243,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["tooltiphide",{"_index":2760,"title":{},"body":{"injectables/UiPasswordToggleIntl.html":{}}}],["tooltipmessage",{"_index":2553,"title":{},"body":{"injectables/UiMatFormFieldRequiredIntl.html":{}}}],["tooltipshow",{"_index":2761,"title":{},"body":{"injectables/UiPasswordToggleIntl.html":{}}}],["tootlip",{"_index":2147,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["top",{"_index":1326,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiSnackBarModule.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":4126,"title":{},"body":{"license.html":{}}}],["total",{"_index":271,"title":{},"body":{"classes/FakeFileList.html":{},"interfaces/ISuggestValues.html":{},"directives/UiGridFooterDirective.html":{},"injectables/UiGridIntl.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["total(value",{"_index":3377,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["touched",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["trace",{"_index":4211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":318,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trackby",{"_index":3234,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["trackbyfunction",{"_index":3206,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["trackbyid",{"_index":3164,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["trackbyid(_idx",{"_index":3203,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["trackbykey",{"_index":2628,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["transaltions",{"_index":2172,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["transform",{"_index":1985,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"pipes/UiNl2BrPipe.html":{},"components/UiPasswordIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["transform(value",{"_index":2602,"title":{},"body":{"pipes/UiNl2BrPipe.html":{}}}],["transformmenulist",{"_index":4241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition",{"_index":1441,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["transition('closed",{"_index":4245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateable",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["translatedropdownoption",{"_index":2109,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["translatelabel",{"_index":2974,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["translatemultipageselectioncount",{"_index":2110,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["translatey",{"_index":4193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0",{"_index":4192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translation",{"_index":539,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{}}}],["translationkey",{"_index":538,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{}}}],["transparent!important",{"_index":4209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["traps",{"_index":1272,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["tree",{"_index":327,"title":{},"body":{"interfaces/IBaseNode.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/ITreeNode.html":{},"classes/TreeUtils.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tree_action_defaults",{"_index":1184,"title":{},"body":{"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treeactionoptions",{"_index":1182,"title":{},"body":{"classes/TreeUtils.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["treecontrol",{"_index":1158,"title":{},"body":{"classes/TreeUtils.html":{}}}],["treecontrol.datanodes.find(n",{"_index":1177,"title":{},"body":{"classes/TreeUtils.html":{}}}],["treeflattener",{"_index":1142,"title":{},"body":{"classes/TreeUtils.html":{}}}],["treeutils",{"_index":1140,"title":{"classes/TreeUtils.html":{}},"body":{"classes/TreeUtils.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["treeutils.getisnodeexpandable",{"_index":3233,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["treeutils.getnodebykey(key",{"_index":3275,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["treeutils.nodebacktransformer(v",{"_index":3254,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["treeutils.treeflattener",{"_index":3237,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["trigger",{"_index":927,"title":{},"body":{"interfaces/ISuggestValue.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiClipboardDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiSuggestIntl.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["trigger('displaystate",{"_index":4242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggers",{"_index":354,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"changelog.html":{}}}],["trim",{"_index":1213,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":161,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IRegexLike.html":{},"interfaces/IVisibleDiff.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":1470,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["tsconfig",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":3898,"title":{},"body":{"dependencies.html":{}}}],["turned",{"_index":1836,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["type",{"_index":43,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/GridOptions.html":{},"interfaces/IBaseNode.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropEvent.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IFlatNodeObject.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISortModel.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"interfaces/ISuggestValues.html":{},"interfaces/ITreeNode.html":{},"interfaces/IVisibleDiff.html":{},"interfaces/IVisibleModel.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"classes/TreeUtils.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridLoadingDirective.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type=\"button",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["type=buttons",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["typealiases",{"_index":4134,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":221,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":975,"title":{},"body":{"interfaces/IVisibleDiff.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiGridColumnDirective.html":{},"changelog.html":{}}}],["typing",{"_index":2993,"title":{},"body":{"injectables/UiSuggestIntl.html":{}}}],["typings",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["tz(this.timezone",{"_index":467,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["u",{"_index":600,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["ui",{"_index":381,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/ISecondFormatOptions.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValue.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridExpandedRowDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"directives/UiGridRowActionDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"modules/UiNgLetModule.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"modules/UiPasswordToggleModule.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ui_dateformat_options",{"_index":384,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_grid_options",{"_index":3812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_mat_snack_bar_default_options",{"_index":847,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_mat_snack_bar_payload",{"_index":791,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_secondformat_options",{"_index":716,"title":{},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiSecondFormatDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_suggest_animations",{"_index":3830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uiautoaccessiblelabeldirective",{"_index":1185,"title":{"directives/UiAutoAccessibleLabelDirective.html":{}},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiautoaccessiblelabelmodule",{"_index":1223,"title":{"modules/UiAutoAccessibleLabelModule.html":{}},"body":{"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSuggestModule.html":{},"modules.html":{},"overview.html":{}}}],["uiautofocus",{"_index":1238,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["uiautofocus(condition",{"_index":1263,"title":{},"body":{"directives/UiAutofocusDirective.html":{}}}],["uiautofocus]'},{'name",{"_index":1354,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uiautofocusdirective",{"_index":1229,"title":{"directives/UiAutofocusDirective.html":{}},"body":{"directives/UiAutofocusDirective.html":{},"modules/UiAutofocusModule.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiautofocusmodule",{"_index":1290,"title":{"modules/UiAutofocusModule.html":{}},"body":{"modules/UiAutofocusModule.html":{},"modules/UiSuggestModule.html":{},"modules.html":{},"overview.html":{}}}],["uibuttonprogressbarcomponent",{"_index":1296,"title":{"components/UiButtonProgressBarComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uibuttonprogressspinnercomponent",{"_index":1333,"title":{"components/UiButtonProgressSpinnerComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiclickoutside",{"_index":1460,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["uiclickoutside]'},{'name",{"_index":1356,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uiclickoutsidedirective",{"_index":1355,"title":{"directives/UiClickOutsideDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClickOutsideDirective.html":{},"modules/UiClickOutsideModule.html":{},"injectables/UiClickOutsideService.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiclickoutsidemodule",{"_index":1506,"title":{"modules/UiClickOutsideModule.html":{}},"body":{"modules/UiClickOutsideModule.html":{},"modules/UiSuggestModule.html":{},"modules.html":{},"overview.html":{}}}],["uiclickoutsideservice",{"_index":1489,"title":{"injectables/UiClickOutsideService.html":{}},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"coverage.html":{}}}],["uiclipboard",{"_index":1517,"title":{},"body":{"directives/UiClipboardDirective.html":{}}}],["uiclipboard]'},{'name",{"_index":1358,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uiclipboarddirective",{"_index":1357,"title":{"directives/UiClipboardDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiClipboardDirective.html":{},"modules/UiClipboardModule.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiclipboardmodule",{"_index":1539,"title":{"modules/UiClipboardModule.html":{}},"body":{"modules/UiClipboardModule.html":{},"modules.html":{},"overview.html":{}}}],["uicontentloaderdirective",{"_index":1359,"title":{"directives/UiContentLoaderDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uicontentloadermodule",{"_index":1611,"title":{"modules/UiContentLoaderModule.html":{}},"body":{"modules/UiContentLoaderModule.html":{},"components/UiTreeSelectComponent.html":{},"modules.html":{},"overview.html":{}}}],["uicontentloading",{"_index":1548,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"changelog.html":{}}}],["uicontentloading(value",{"_index":1572,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["uicontentloading]'},{'name",{"_index":1360,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uicontentloadingcolor",{"_index":1550,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["uicontentloadingdiameter",{"_index":1551,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["uicontentloadingmode",{"_index":1552,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["uicontentloadingvalue",{"_index":1553,"title":{},"body":{"directives/UiContentLoaderDirective.html":{}}}],["uicontentspinnercomponent",{"_index":1335,"title":{"components/UiContentSpinnerComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"modules/UiContentLoaderModule.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uidateformat",{"_index":412,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uidateformatdirective",{"_index":413,"title":{"directives/UiDateFormatDirective.html":{}},"body":{"interfaces/IDateFormatOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"modules/UiDateFormatModule.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uidateformatmodule",{"_index":1649,"title":{"modules/UiDateFormatModule.html":{}},"body":{"modules/UiDateFormatModule.html":{},"modules.html":{},"overview.html":{}}}],["uidraganddropfile",{"_index":1660,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{}}}],["uidraganddropfile]'},{'name",{"_index":1363,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uidraganddropfiledirective",{"_index":1362,"title":{"directives/UiDragAndDropFileDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDragAndDropFileDirective.html":{},"modules/UiDragAndDropModule.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uidraganddropmodule",{"_index":1782,"title":{"modules/UiDragAndDropModule.html":{}},"body":{"modules/UiDragAndDropModule.html":{},"modules.html":{},"overview.html":{}}}],["uievents",{"_index":24,"title":{},"body":{"classes/EventGenerator.html":{}}}],["uiformatdirective",{"_index":376,"title":{"directives/UiFormatDirective.html":{}},"body":{"interfaces/IDateFormatOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiFormatDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["uigrid",{"_index":2085,"title":{},"body":{"injectables/UiGridIntl.html":{},"changelog.html":{}}}],["uigridcolumn",{"_index":1364,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigridcolumndirective",{"_index":967,"title":{"directives/UiGridColumnDirective.html":{}},"body":{"interfaces/IVisibleDiff.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridcomponent",{"_index":1336,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridcustompaginatorcomponent",{"_index":1338,"title":{"components/UiGridCustomPaginatorComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridCustomPaginatorModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridcustompaginatormodule",{"_index":1987,"title":{"modules/UiGridCustomPaginatorModule.html":{}},"body":{"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules.html":{},"overview.html":{}}}],["uigriddropdownfilter",{"_index":545,"title":{},"body":{"interfaces/IDropdownOption.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigriddropdownfilterdirective",{"_index":546,"title":{"directives/UiGridDropdownFilterDirective.html":{}},"body":{"interfaces/IDropdownOption.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridexpandedrow",{"_index":1368,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridExpandedRowDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigridexpandedrowdirective",{"_index":1367,"title":{"directives/UiGridExpandedRowDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridExpandedRowDirective.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridfilter",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["uigridfilterdirective",{"_index":544,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["uigridfooter",{"_index":1372,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridFooterDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigridfooterdirective",{"_index":1371,"title":{"directives/UiGridFooterDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridFooterDirective.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridheader",{"_index":1379,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridHeaderDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigridheaderbuttondirective",{"_index":1374,"title":{"directives/UiGridHeaderButtonDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridheaderdirective",{"_index":1378,"title":{"directives/UiGridHeaderDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridHeaderDirective.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridintl",{"_index":2081,"title":{"injectables/UiGridIntl.html":{}},"body":{"injectables/UiGridIntl.html":{},"coverage.html":{}}}],["uigridloading",{"_index":1382,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridLoadingDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigridloadingdirective",{"_index":1381,"title":{"directives/UiGridLoadingDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridLoadingDirective.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridmodule",{"_index":2187,"title":{"modules/UiGridModule.html":{}},"body":{"modules/UiGridModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{}}}],["uigridnocontent",{"_index":1385,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridNoContentDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigridnocontentdirective",{"_index":1384,"title":{"directives/UiGridNoContentDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"directives/UiGridNoContentDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridrowaction",{"_index":1388,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridRowActionDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigridrowactiondirective",{"_index":1387,"title":{"directives/UiGridRowActionDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"directives/UiGridRowActionDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridrowconfig",{"_index":1391,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigridrowconfigdirective",{"_index":1390,"title":{"directives/UiGridRowConfigDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridsearchcomponent",{"_index":1340,"title":{"components/UiGridSearchComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"modules/UiGridSearchModule.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridsearchfilter",{"_index":1394,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uigridsearchfilterdirective",{"_index":1393,"title":{"directives/UiGridSearchFilterDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridsearchmodule",{"_index":2192,"title":{"modules/UiGridSearchModule.html":{}},"body":{"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["uigridtogglecolumnscomponent",{"_index":1342,"title":{"components/UiGridToggleColumnsComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"modules/UiGridToggleColumnsModule.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uigridtogglecolumnsmodule",{"_index":2193,"title":{"modules/UiGridToggleColumnsModule.html":{}},"body":{"modules/UiGridModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules.html":{},"overview.html":{}}}],["uiheaderbutton",{"_index":1375,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridHeaderButtonDirective.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uikeyboardshortcut][shortcutkeys",{"_index":1053,"title":{},"body":{"directives/KeyboardShortcutDirective.html":{}}}],["uikeyboardshortcut][shortcutkeys]'},{'name",{"_index":1353,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uiloaderbuttondirective",{"_index":1396,"title":{"directives/UiLoaderButtonDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["uimatformfieldrequireddirective",{"_index":1397,"title":{"directives/UiMatFormFieldRequiredDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uimatformfieldrequiredintl",{"_index":2487,"title":{"injectables/UiMatFormFieldRequiredIntl.html":{}},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"coverage.html":{}}}],["uimatformfieldrequiredmodule",{"_index":2557,"title":{"modules/UiMatFormFieldRequiredModule.html":{}},"body":{"modules/UiMatFormFieldRequiredModule.html":{},"modules.html":{},"overview.html":{}}}],["uimatpaginatorintl",{"_index":1914,"title":{"injectables/UiMatPaginatorIntl.html":{}},"body":{"components/UiGridCustomPaginatorComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"coverage.html":{}}}],["uimatsnackbarconfig",{"_index":845,"title":{"classes/UiMatSnackBarConfig.html":{}},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"coverage.html":{}}}],["uingletdirective",{"_index":1400,"title":{"directives/UiNgLetDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiNgLetDirective.html":{},"modules/UiNgLetModule.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uingletmodule",{"_index":2194,"title":{"modules/UiNgLetModule.html":{}},"body":{"modules/UiGridModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSuggestModule.html":{},"modules.html":{},"overview.html":{}}}],["uinl2brpipe",{"_index":2598,"title":{"pipes/UiNl2BrPipe.html":{}},"body":{"pipes/UiNl2BrPipe.html":{},"modules/UiPipeModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["uipasswordcomplexityintl",{"_index":2608,"title":{"injectables/UiPasswordComplexityIntl.html":{}},"body":{"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"coverage.html":{}}}],["uipasswordindicatorcomponent",{"_index":1344,"title":{"components/UiPasswordIndicatorComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"modules/UiPasswordIndicatorModule.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uipasswordindicatormodule",{"_index":2716,"title":{"modules/UiPasswordIndicatorModule.html":{}},"body":{"modules/UiPasswordIndicatorModule.html":{},"modules.html":{},"overview.html":{}}}],["uipasswordtogglecomponent",{"_index":1346,"title":{"components/UiPasswordToggleComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"modules/UiPasswordToggleModule.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uipasswordtoggleintl",{"_index":2730,"title":{"injectables/UiPasswordToggleIntl.html":{}},"body":{"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"coverage.html":{}}}],["uipasswordtogglemodule",{"_index":2765,"title":{"modules/UiPasswordToggleModule.html":{}},"body":{"modules/UiPasswordToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["uipath",{"_index":4082,"title":{},"body":{"license.html":{}}}],["uipath/angular",{"_index":3961,"title":{},"body":{"index.html":{}}}],["uipath/angular/a11y",{"_index":2209,"title":{},"body":{"modules/UiGridModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSuggestModule.html":{}}}],["uipath/angular/components",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["uipath/angular/components/ui",{"_index":2210,"title":{},"body":{"modules/UiGridModule.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["uipath/angular/components/{{name",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["uipath/angular/directives",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["uipath/angular/directives/internal",{"_index":377,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["uipath/angular/directives/keyboard",{"_index":2908,"title":{},"body":{"modules/UiSnackBarModule.html":{}}}],["uipath/angular/directives/ui",{"_index":936,"title":{},"body":{"interfaces/ISuggestValue.html":{},"modules/UiGridModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeSelectComponent.html":{}}}],["uipath/angular/directives/{{name",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["uipath/angular/pipes",{"_index":2910,"title":{},"body":{"modules/UiSnackBarModule.html":{}}}],["uipath/angular/utilities",{"_index":1700,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["uipipemodule",{"_index":2772,"title":{"modules/UiPipeModule.html":{}},"body":{"modules/UiPipeModule.html":{},"modules/UiSnackBarModule.html":{},"modules.html":{},"overview.html":{}}}],["uiprogressbutton",{"_index":2798,"title":{},"body":{"directives/UiProgressButtonDirective.html":{}}}],["uiprogressbuttondirective",{"_index":1402,"title":{"directives/UiProgressButtonDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"modules/UiProgressButtonModule.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiprogressbuttonmodule",{"_index":2828,"title":{"modules/UiProgressButtonModule.html":{}},"body":{"modules/UiProgressButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["uiscrollintoview",{"_index":2850,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["uiscrollintoview(condition",{"_index":2862,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["uiscrollintoview]'},{'name",{"_index":1410,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["uiscrollintoview]=\"isfocused",{"_index":2857,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["uiscrollintoviewdirective",{"_index":1409,"title":{"directives/UiScrollIntoViewDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiscrollintoviewmodule",{"_index":2869,"title":{"modules/UiScrollIntoViewModule.html":{}},"body":{"modules/UiScrollIntoViewModule.html":{},"modules.html":{},"overview.html":{}}}],["uisecondformatdirective",{"_index":733,"title":{"components/UiSecondFormatDirective.html":{}},"body":{"interfaces/ISecondFormatOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"modules/UiSecondFormatModule.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uisecondformatmodule",{"_index":2881,"title":{"modules/UiSecondFormatModule.html":{}},"body":{"modules/UiSecondFormatModule.html":{},"modules.html":{},"overview.html":{}}}],["uisnackbarcomponent",{"_index":812,"title":{"components/UiSnackBarComponent.html":{}},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uisnackbarintl",{"_index":803,"title":{"injectables/UiSnackbarIntl.html":{}},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"changelog.html":{},"coverage.html":{}}}],["uisnackbarintlservice",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["uisnackbarmodule",{"_index":2901,"title":{"modules/UiSnackBarModule.html":{}},"body":{"modules/UiSnackBarModule.html":{},"modules.html":{},"overview.html":{}}}],["uisnackbarservice",{"_index":853,"title":{"injectables/UiSnackBarService.html":{}},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"coverage.html":{}}}],["uispinnerbutton",{"_index":2943,"title":{},"body":{"directives/UiSpinnerButtonDirective.html":{}}}],["uispinnerbuttondirective",{"_index":1411,"title":{"directives/UiSpinnerButtonDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSpinnerButtonDirective.html":{},"modules/UiSpinnerButtonModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uispinnerbuttonmodule",{"_index":2959,"title":{"modules/UiSpinnerButtonModule.html":{}},"body":{"modules/UiSpinnerButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["uisuggest",{"_index":918,"title":{},"body":{"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValueData.html":{},"injectables/UiSuggestIntl.html":{},"miscellaneous/variables.html":{}}}],["uisuggestcomponent",{"_index":3132,"title":{},"body":{"modules/UiSuggestModule.html":{}}}],["uisuggestintl",{"_index":2963,"title":{"injectables/UiSuggestIntl.html":{}},"body":{"injectables/UiSuggestIntl.html":{},"coverage.html":{}}}],["uisuggestmatformfielddirective",{"_index":1416,"title":{"directives/UiSuggestMatFormFieldDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["uisuggestmodule",{"_index":2195,"title":{"modules/UiSuggestModule.html":{}},"body":{"modules/UiGridModule.html":{},"modules/UiSuggestModule.html":{},"modules.html":{},"overview.html":{}}}],["uitreeitemcomponent",{"_index":1349,"title":{"components/UiTreeItemComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["uitreeselectcomponent",{"_index":1351,"title":{"components/UiTreeSelectComponent.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"coverage.html":{}}}],["uivirtualscrollrangeloader",{"_index":1418,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["uivirtualscrollrangeloaderdirective",{"_index":1417,"title":{"directives/UiVirtualScrollRangeLoaderDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"interfaces/VirtualScrollItem.html":{},"coverage.html":{},"overview.html":{}}}],["uivirtualscrollrangeloadermodule",{"_index":3126,"title":{"modules/UiVirtualScrollRangeLoaderModule.html":{}},"body":{"modules/UiSuggestModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules.html":{},"overview.html":{}}}],["uivirtualscrollviewportresize",{"_index":1421,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["uivirtualscrollviewportresizedirective",{"_index":1420,"title":{"directives/UiVirtualScrollViewportResizeDirective.html":{}},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"coverage.html":{},"overview.html":{}}}],["uivirtualscrollviewportresizemodule",{"_index":2196,"title":{"modules/UiVirtualScrollViewportResizeModule.html":{}},"body":{"modules/UiGridModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"modules.html":{},"overview.html":{}}}],["undefined",{"_index":424,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/IFilterModel.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiAutofocusDirective.html":{},"directives/UiContentLoaderDirective.html":{},"directives/UiDateFormatDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiSecondFormatDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"miscellaneous/functions.html":{}}}],["underline",{"_index":2703,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["underscore",{"_index":176,"title":{},"body":{"classes/EventGenerator.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["understand",{"_index":4070,"title":{},"body":{"index.html":{}}}],["unfortunately",{"_index":4042,"title":{},"body":{"index.html":{}}}],["unique",{"_index":934,"title":{},"body":{"interfaces/ISuggestValue.html":{}}}],["unit",{"_index":9,"title":{},"body":{"classes/EventGenerator.html":{},"changelog.html":{}}}],["unknown",{"_index":805,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{}}}],["unselect",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":1961,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["unsorted",{"_index":2132,"title":{},"body":{"injectables/UiGridIntl.html":{}}}],["unsupported",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["untouched",{"_index":3310,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["untypedformcontrol",{"_index":2259,"title":{},"body":{"components/UiGridSearchComponent.html":{},"directives/UiSuggestMatFormFieldDirective.html":{}}}],["up",{"_index":1127,"title":{},"body":{"injectables/QueuedAnnouncer.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"injectables/UiGridIntl.html":{},"components/UiGridToggleColumnsComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["update",{"_index":70,"title":{},"body":{"classes/EventGenerator.html":{},"changelog.html":{}}}],["update(visiblecolumnsbyprops",{"_index":1000,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["updated",{"_index":930,"title":{},"body":{"interfaces/ISuggestValue.html":{},"injectables/UiGridIntl.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"injectables/UiSuggestIntl.html":{}}}],["updates",{"_index":559,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["updatevalue",{"_index":1998,"title":{},"body":{"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["updatevalue(value",{"_index":560,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["upgrade",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":4060,"title":{},"body":{"index.html":{}}}],["usability",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":4052,"title":{},"body":{"index.html":{}}}],["use",{"_index":297,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"components/UiGridToggleColumnsComponent.html":{},"changelog.html":{},"license.html":{}}}],["usecache",{"_index":309,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{}}}],["used",{"_index":317,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IGridDataEntry.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"interfaces/ISelectionDiff.html":{},"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"interfaces/ISuggestValues.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridRowConfigDirective.html":{},"directives/UiGridSearchFilterDirective.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":84,"title":{},"body":{"classes/EventGenerator.html":{}}}],["uselegacydesign",{"_index":290,"title":{},"body":{"interfaces/GridOptions.html":{},"interfaces/IGridDataEntry.html":{},"components/UiGridToggleColumnsComponent.html":{}}}],["user",{"_index":12,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/ISortModel.html":{},"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{},"directives/UiClipboardDirective.html":{},"changelog.html":{}}}],["userevent",{"_index":908,"title":{},"body":{"interfaces/ISortModel.html":{}}}],["users",{"_index":1210,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"injectables/UiGridIntl.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":3664,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usevalue",{"_index":822,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSnackBarModule.html":{},"injectables/UiSnackBarService.html":{}}}],["using",{"_index":404,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSnackbarIntl.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usually",{"_index":4002,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":3948,"title":{},"body":{"index.html":{}}}],["utility",{"_index":77,"title":{},"body":{"classes/EventGenerator.html":{},"changelog.html":{}}}],["utils",{"_index":3049,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{},"changelog.html":{}}}],["utils/tree.utils",{"_index":3220,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["uts",{"_index":238,"title":{},"body":{"classes/FakeFileList.html":{},"changelog.html":{}}}],["uuid",{"_index":3900,"title":{},"body":{"dependencies.html":{}}}],["v",{"_index":643,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["v0.10.0",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["v0.10.1",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["v0.10.10",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["v0.10.11",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["v0.10.12",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["v0.10.13",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["v0.10.14",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["v0.10.15",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["v0.10.2",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["v0.10.3",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["v0.10.4",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["v0.10.5",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["v0.10.6",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["v0.10.7",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["v0.10.8",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["v0.10.9",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["v0.9.1",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["v0.9.2",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["v0.9.3",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["v0.9.5",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["v0.9.6",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["v1",{"_index":4074,"title":{},"body":{"index.html":{}}}],["v10.0.0",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["v11.0.0",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["v11.0.1",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["v12.0.0",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["v12.1.0",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["v12.2.0",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["v12.3.0",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["v12.4.0",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["v12.5.0",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["v12.5.1",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["v12.5.2",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["v12.5.3",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["v12.5.4",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["v12.5.5",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["v12.5.6",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["v13.0.0",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["v13.0.1",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["v13.10.0",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["v13.10.1",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["v13.11.0",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["v13.12.0",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["v13.12.1",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["v13.12.2",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["v13.12.3",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["v13.12.4",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["v13.12.5",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["v13.13.0",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["v13.2.0",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["v13.2.1",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["v13.2.2",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["v13.2.3",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["v13.3.0",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["v13.3.1",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["v13.3.2",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["v13.3.3",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["v13.4.0",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["v13.4.1",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["v13.5.0",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["v13.6.0",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["v13.6.1",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["v13.6.2",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["v13.6.3",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["v13.6.4",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["v13.6.5",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["v13.6.6",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["v13.6.7",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["v13.6.8",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["v13.7.0",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["v13.7.1",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["v13.7.2",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["v13.8.0",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["v13.9.0",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["v7",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["v9.0.2",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["v9.0.3",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["v9.0.4",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["v9.0.5",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["v9.0.6",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["v9.0.7",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":693,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["validation_rule_name",{"_index":685,"title":{},"body":{"interfaces/IRegexLike.html":{},"components/UiPasswordIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpercentage",{"_index":2681,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["validations",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["validator",{"_index":704,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["validitymap",{"_index":701,"title":{},"body":{"interfaces/IRegexLike.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":47,"title":{},"body":{"classes/EventGenerator.html":{},"classes/FakeFileList.html":{},"interfaces/IDateFormatOptions.html":{},"interfaces/IDropdownOption.html":{},"interfaces/IFilterModel.html":{},"interfaces/IRegexLike.html":{},"interfaces/ISuggestValue.html":{},"interfaces/ISuggestValues.html":{},"classes/TreeUtils.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"directives/UiGridHeaderDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridRowConfigDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"directives/UiNgLetDirective.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiPasswordComplexityIntl.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"injectables/UiPasswordToggleIntl.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"injectables/UiSuggestIntl.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value(newvalue",{"_index":3071,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["value(value",{"_index":2261,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["value.endswith",{"_index":1865,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["value.gettime",{"_index":523,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"directives/UiDateFormatDirective.html":{}}}],["value.id",{"_index":2298,"title":{},"body":{"directives/UiGridSearchFilterDirective.html":{}}}],["value.includes(c.property",{"_index":2379,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["value.trim",{"_index":2266,"title":{},"body":{"components/UiGridSearchComponent.html":{}}}],["valuechanges",{"_index":2658,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["values",{"_index":2986,"title":{},"body":{"injectables/UiSuggestIntl.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["valuesummary",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["var",{"_index":1330,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["variable",{"_index":3783,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":4150,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3959,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1964,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["verticalposition",{"_index":2915,"title":{},"body":{"modules/UiSnackBarModule.html":{}}}],["very",{"_index":83,"title":{},"body":{"classes/EventGenerator.html":{},"directives/UiScrollIntoViewDirective.html":{},"index.html":{}}}],["via",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":1884,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"dependencies.html":{}}}],["view.directive",{"_index":2874,"title":{},"body":{"modules/UiScrollIntoViewModule.html":{}}}],["view.directive.ts",{"_index":2834,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["view.directive.ts:34",{"_index":2853,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["view.directive.ts:37",{"_index":2852,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["view.directive.ts:45",{"_index":2855,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["view.directive.ts:71",{"_index":2858,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["view.module.ts",{"_index":2873,"title":{},"body":{"modules/UiScrollIntoViewModule.html":{}}}],["view/src/ui",{"_index":2833,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{},"modules/UiScrollIntoViewModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["view_column",{"_index":2402,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["viewchild",{"_index":2356,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{},"changelog.html":{}}}],["viewchild('resetbtn",{"_index":2346,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["viewchild(matselect",{"_index":2349,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["viewchildren",{"_index":3217,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["viewchildren(uitreeitemcomponent",{"_index":3208,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["viewcontainerref",{"_index":1557,"title":{},"body":{"directives/UiContentLoaderDirective.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiNgLetDirective.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiSpinnerButtonDirective.html":{}}}],["viewencapsulation",{"_index":796,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["viewencapsulation.none",{"_index":811,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"injectables/UiMatPaginatorIntl.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{}}}],["viewport",{"_index":1422,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"changelog.html":{},"coverage.html":{}}}],["virtual",{"_index":937,"title":{},"body":{"interfaces/ISuggestValue.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"modules/UiGridModule.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"components/UiSecondFormatDirective.html":{},"components/UiSnackBarComponent.html":{},"modules/UiSuggestModule.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["virtualscrollitem",{"_index":919,"title":{"interfaces/VirtualScrollItem.html":{}},"body":{"interfaces/ISuggestValue.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"coverage.html":{}}}],["virtualscrollitemstatus",{"_index":935,"title":{},"body":{"interfaces/ISuggestValue.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"miscellaneous/enumerations.html":{}}}],["virtualscrollitemstatus.initial",{"_index":3350,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["visibility",{"_index":1810,"title":{},"body":{"directives/UiGridColumnDirective.html":{},"injectables/UiGridIntl.html":{},"components/UiPasswordToggleComponent.html":{},"changelog.html":{}}}],["visibility_off",{"_index":2758,"title":{},"body":{"components/UiPasswordToggleComponent.html":{}}}],["visibilitymanger",{"_index":972,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["visible",{"_index":554,"title":{},"body":{"interfaces/IDropdownOption.html":{},"interfaces/IVisibleDiff.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridHeaderButtonDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"changelog.html":{}}}],["visible(visible",{"_index":556,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["visiblecolumns",{"_index":2321,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["visiblecolumnsbyprops.includes(c.property",{"_index":1006,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["visiblecolumnstoggled",{"_index":2322,"title":{},"body":{"components/UiGridToggleColumnsComponent.html":{}}}],["visibleoptions",{"_index":1027,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["visibleoptions.find(o",{"_index":1032,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["visibleoptions.length",{"_index":1031,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["visibleoptions[0].disabled",{"_index":1043,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["visibleoptions[0].property",{"_index":1036,"title":{},"body":{"interfaces/IVisibleDiff.html":{}}}],["visiblerules",{"_index":2629,"title":{},"body":{"components/UiPasswordIndicatorComponent.html":{}}}],["visit",{"_index":3962,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":258,"title":{},"body":{"classes/FakeFileList.html":{},"directives/KeyboardShortcutDirective.html":{},"injectables/QueuedAnnouncer.html":{},"directives/UiAutofocusDirective.html":{},"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"directives/UiContentLoaderDirective.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiDateFormatDirective.html":{},"directives/UiDragAndDropFileDirective.html":{},"directives/UiFormatDirective.html":{},"directives/UiGridColumnDirective.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridFooterDirective.html":{},"components/UiGridSearchComponent.html":{},"directives/UiGridSearchFilterDirective.html":{},"components/UiGridToggleColumnsComponent.html":{},"directives/UiLoaderButtonDirective.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"injectables/UiMatFormFieldRequiredIntl.html":{},"directives/UiNgLetDirective.html":{},"components/UiPasswordIndicatorComponent.html":{},"components/UiPasswordToggleComponent.html":{},"directives/UiProgressButtonDirective.html":{},"directives/UiScrollIntoViewDirective.html":{},"components/UiSecondFormatDirective.html":{},"injectables/UiSnackBarService.html":{},"injectables/UiSnackbarIntl.html":{},"directives/UiSpinnerButtonDirective.html":{},"directives/UiSuggestMatFormFieldDirective.html":{},"components/UiTreeItemComponent.html":{},"components/UiTreeSelectComponent.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"miscellaneous/variables.html":{}}}],["vscode",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["w",{"_index":587,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{}}}],["want",{"_index":4050,"title":{},"body":{"index.html":{}}}],["warning",{"_index":834,"title":{},"body":{"interfaces/ISnackBarAlert.html":{},"interfaces/ISnackBarOptions.html":{},"classes/UiMatSnackBarConfig.html":{},"components/UiSnackBarComponent.html":{},"injectables/UiSnackBarService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":4113,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4108,"title":{},"body":{"license.html":{}}}],["washandled",{"_index":3244,"title":{},"body":{"components/UiTreeSelectComponent.html":{}}}],["watcher",{"_index":2453,"title":{},"body":{"directives/UiLoaderButtonDirective.html":{}}}],["way",{"_index":2532,"title":{},"body":{"directives/UiMatFormFieldRequiredDirective.html":{},"directives/UiNgLetDirective.html":{}}}],["we'll",{"_index":1476,"title":{},"body":{"directives/UiClickOutsideDirective.html":{},"injectables/UiClickOutsideService.html":{}}}],["we're",{"_index":4001,"title":{},"body":{"index.html":{}}}],["we've",{"_index":3971,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":4235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webpack",{"_index":406,"title":{},"body":{"interfaces/IDateFormatOptions.html":{},"interfaces/ISecondFormatOptions.html":{},"directives/UiDateFormatDirective.html":{},"components/UiSecondFormatDirective.html":{}}}],["weird",{"_index":1690,"title":{},"body":{"directives/UiDragAndDropFileDirective.html":{},"directives/UiScrollIntoViewDirective.html":{}}}],["well",{"_index":2840,"title":{},"body":{"directives/UiScrollIntoViewDirective.html":{}}}],["wether",{"_index":552,"title":{},"body":{"interfaces/IDropdownOption.html":{},"directives/UiGridDropdownFilterDirective.html":{},"directives/UiGridSearchFilterDirective.html":{}}}],["whether",{"_index":4124,"title":{},"body":{"license.html":{}}}],["widget",{"_index":4168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["width",{"_index":1324,"title":{},"body":{"components/UiButtonProgressBarComponent.html":{},"components/UiButtonProgressSpinnerComponent.html":{},"components/UiContentSpinnerComponent.html":{},"directives/UiGridColumnDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"components/UiGridSearchComponent.html":{},"components/UiGridToggleColumnsComponent.html":{},"components/UiPasswordIndicatorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["width(value",{"_index":1864,"title":{},"body":{"directives/UiGridColumnDirective.html":{}}}],["windows",{"_index":3371,"title":{},"body":{"directives/UiVirtualScrollViewportResizeDirective.html":{}}}],["within",{"_index":2168,"title":{},"body":{"injectables/UiGridIntl.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["withlatestfrom",{"_index":3311,"title":{},"body":{"directives/UiVirtualScrollRangeLoaderDirective.html":{},"interfaces/VirtualScrollItem.html":{}}}],["without",{"_index":4048,"title":{},"body":{"index.html":{},"license.html":{}}}],["word",{"_index":2899,"title":{},"body":{"components/UiSnackBarComponent.html":{}}}],["work",{"_index":1966,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{},"directives/UiVirtualScrollRangeLoaderDirective.html":{},"directives/UiVirtualScrollViewportResizeDirective.html":{},"interfaces/VirtualScrollItem.html":{},"changelog.html":{}}}],["working",{"_index":4020,"title":{},"body":{"index.html":{}}}],["works",{"_index":2574,"title":{},"body":{"directives/UiNgLetDirective.html":{}}}],["workspace",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":1977,"title":{},"body":{"components/UiGridCustomPaginatorComponent.html":{}}}],["wrapper",{"_index":1455,"title":{},"body":{"components/UiButtonProgressSpinnerComponent.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiMatFormFieldRequiredDirective.html":{},"miscellaneous/variables.html":{}}}],["writevalue(value",{"_index":3110,"title":{},"body":{"directives/UiSuggestMatFormFieldDirective.html":{}}}],["x",{"_index":71,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"injectables/UiSnackbarIntl.html":{}}}],["xit",{"_index":4157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xss",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["y",{"_index":73,"title":{},"body":{"classes/EventGenerator.html":{},"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"components/UiSnackBarComponent.html":{}}}],["yeah",{"_index":4016,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1194,"title":{},"body":{"directives/UiAutoAccessibleLabelDirective.html":{},"directives/UiAutofocusDirective.html":{},"components/UiGridCustomPaginatorComponent.html":{},"directives/UiGridDropdownFilterDirective.html":{},"injectables/UiGridIntl.html":{},"directives/UiGridSearchFilterDirective.html":{},"injectables/UiMatPaginatorIntl.html":{},"pipes/UiNl2BrPipe.html":{},"injectables/UiSnackBarService.html":{}}}],["z",{"_index":635,"title":{},"body":{"interfaces/IKey.html":{},"interfaces/IKeyModifier.html":{},"components/UiPasswordIndicatorComponent.html":{}}}],["zone.js",{"_index":3902,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1093,"title":{},"body":{"modules/KeyboardShortcutModule.html":{},"modules/UiAutoAccessibleLabelModule.html":{},"modules/UiAutofocusModule.html":{},"modules/UiClickOutsideModule.html":{},"modules/UiClipboardModule.html":{},"modules/UiContentLoaderModule.html":{},"modules/UiDateFormatModule.html":{},"modules/UiDragAndDropModule.html":{},"modules/UiGridCustomPaginatorModule.html":{},"modules/UiGridModule.html":{},"modules/UiGridSearchModule.html":{},"modules/UiGridToggleColumnsModule.html":{},"modules/UiMatFormFieldRequiredModule.html":{},"modules/UiNgLetModule.html":{},"modules/UiPasswordIndicatorModule.html":{},"modules/UiPasswordToggleModule.html":{},"modules/UiPipeModule.html":{},"modules/UiProgressButtonModule.html":{},"modules/UiScrollIntoViewModule.html":{},"modules/UiSecondFormatModule.html":{},"modules/UiSnackBarModule.html":{},"modules/UiSpinnerButtonModule.html":{},"modules/UiSuggestModule.html":{},"modules/UiVirtualScrollRangeLoaderModule.html":{},"modules/UiVirtualScrollViewportResizeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/EventGenerator.html":{"url":"classes/EventGenerator.html","title":"class - EventGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/testing/src/utilities/event-generator.ts\n        \n\n\n            \n                Description\n            \n            \n                Most unit tests require user interaction, this collection aims to simplify event dispatching,\nby providing a collection of methods and properties that create the most often required UIEvents.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                cursor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                change\n                            \n                            \n                                    Static\n                                clickXY\n                            \n                            \n                                    Static\n                                drop\n                            \n                            \n                                    Static\n                                input\n                            \n                            \n                                    Static\n                                keyDown\n                            \n                            \n                                    Static\n                                keyUp\n                            \n                            \n                                    Static\n                                moveXY\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    click\n                                \n                                \n                                    mouseEnter\n                                \n                                \n                                    mouseLeave\n                                \n                                \n                                    doubleClick\n                                \n                                \n                                    dragOver\n                                \n                                \n                                    dragLeave\n                                \n                                \n                                    dragEnd\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        cursor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        ref: {} as HTMLElement,\n        initialize: (parent?: HTMLElement) => {\n            if (!parent) { return; }\n            EventGenerator.cursor.ref = document.createElement('div') as HTMLElement;\n\n            EventGenerator.cursor.ref.style.position = 'absolute';\n            EventGenerator.cursor.ref.style.display = 'block';\n            EventGenerator.cursor.ref.style.left = '0px';\n            EventGenerator.cursor.ref.style.top = '0px';\n            EventGenerator.cursor.ref.style.width = '20px';\n            EventGenerator.cursor.ref.style.height = '20px';\n            EventGenerator.cursor.ref.style.background = CURSOR_IMG;\n\n            parent.appendChild(EventGenerator.cursor.ref);\n        },\n        destroy: (parent?: HTMLElement) => {\n            if (!parent) { return; }\n\n            parent.removeChild(EventGenerator.cursor.ref);\n        },\n        update: (x: number, y: number) => {\n            EventGenerator.cursor.ref.style.left = `${x - 10}px`;\n            EventGenerator.cursor.ref.style.top = `${y - 10}px`;\n        },\n    }\n                    \n                \n                    \n                        \n                                Defined in projects/angular/testing/src/utilities/event-generator.ts:26\n                        \n                    \n\n            \n                \n                    A cursor utility that draws a cursor icon over the tested component.\nVery useful when testing hover effects.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        change\n                        \n                    \n                \n            \n            \n                \n                    \n                    change()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/event-generator.ts:173\n                \n            \n\n\n            \n                \n                    Change event generator helpful for testing HTMLInputElements.\n\n\n                    \n                    \n                    \n                        Returns :         Event\n\n                    \n                    \n                        A simple change event.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        clickXY\n                        \n                    \n                \n            \n            \n                \n                    \n                    clickXY(offsetX: number, offsetY: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/event-generator.ts:208\n                \n            \n\n\n            \n                \n                    Generates a click event on the requested X, Y coordinates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    offsetX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X offset value.\n\n                                    \n                                \n                                \n                                    offsetY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y offset value.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MouseEvent\n\n                    \n                    \n                        A click event with the offsetX and offsetY properties populated.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        drop\n                        \n                    \n                \n            \n            \n                \n                    \n                    drop(files: File[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/event-generator.ts:153\n                \n            \n\n\n            \n                \n                     Drop event generator, helpful for testing HTMLInputElements of type file.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            File[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        A list of files to associated to the event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IDropEvent\n\n                    \n                    \n                        The drop event with the dataTransfer and files properties populated.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        input\n                        \n                    \n                \n            \n            \n                \n                    \n                    input()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/event-generator.ts:195\n                \n            \n\n\n            \n                \n                    Generates an input event helpful for testing HTMLInputElements.\n\n\n                    \n                    \n                    \n                        Returns :         Event\n\n                    \n                    \n                        A simple input event.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        keyDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    keyDown(key: KeyOrKeyName, modifiers: IKeyModifier[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/event-generator.ts:130\n                \n            \n\n\n            \n                \n                    KeyDown event generator helper.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                KeyOrKeyName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The pressed key.\n\n                                    \n                                \n                                \n                                    modifiers\n                                    \n                                                IKeyModifier[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active modifiers, if any.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyboardEvent\n\n                    \n                    \n                        A keydown event with the provided key and modifier metadata.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        keyUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    keyUp(key: KeyOrKeyName, modifiers: IKeyModifier[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/event-generator.ts:142\n                \n            \n\n\n            \n                \n                    KeyUp event generator helper.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                KeyOrKeyName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The pressed key.\n\n                                    \n                                \n                                \n                                    modifiers\n                                    \n                                                IKeyModifier[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active modifier, if any.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyboardEvent\n\n                    \n                    \n                        A keyup event with the provided key and modifier metadata.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        moveXY\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveXY(offsetX: number, offsetY: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/event-generator.ts:229\n                \n            \n\n\n            \n                \n                    Generates a mousemove event on the requested X, Y coordinates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    offsetX\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X offset value.\n\n                                    \n                                \n                                \n                                    offsetY\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y offset value.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MouseEvent\n\n                    \n                    \n                        A mousemove event with the offsetX and offsetY properties populated.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n\n                \n                    \n                        getclick()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/testing/src/utilities/event-generator.ts:57\n                                \n                            \n                    \n                        \n                                Gets a click event.\n\n\n                                \n                                    Returns :     MouseEvent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n\n                \n                    \n                        getmouseEnter()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/testing/src/utilities/event-generator.ts:67\n                                \n                            \n                    \n                        \n                                Gets a mouseenter event.\n\n\n                                \n                                    Returns :     MouseEvent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mouseLeave\n                    \n                \n\n                \n                    \n                        getmouseLeave()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/testing/src/utilities/event-generator.ts:77\n                                \n                            \n                    \n                        \n                                Gets a mouseleave event.\n\n\n                                \n                                    Returns :     MouseEvent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        doubleClick\n                    \n                \n\n                \n                    \n                        getdoubleClick()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/testing/src/utilities/event-generator.ts:87\n                                \n                            \n                    \n                        \n                                Gets a dblclick event.\n\n\n                                \n                                    Returns :     MouseEvent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dragOver\n                    \n                \n\n                \n                    \n                        getdragOver()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/testing/src/utilities/event-generator.ts:97\n                                \n                            \n                    \n                        \n                                Gets a dragover event.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dragLeave\n                    \n                \n\n                \n                    \n                        getdragLeave()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/testing/src/utilities/event-generator.ts:107\n                                \n                            \n                    \n                        \n                                Gets a dragleave event.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n\n                \n                    \n                        getdragEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/testing/src/utilities/event-generator.ts:117\n                                \n                            \n                    \n                        \n                                Gets a dragEnd event.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { IDropEvent } from './events';\nimport { FakeFileList } from './fake-file-list';\nimport { CURSOR_IMG } from './internal';\nimport {\n    IKey,\n    IKeyModifier,\n    Key,\n} from './key';\n\ntype KeyOrKeyName = (IKey | keyof Key);\n\n/**\n * Most `unit tests` require user interaction, this collection aims to simplify event dispatching,\n * by providing a collection of methods and properties that create the most often required `UIEvents`.\n *\n * @export\n * @dynamic\n */\nexport class EventGenerator {\n    /**\n     * A cursor utility that draws a cursor icon over the tested component.\n     *\n     * Very useful when testing hover effects.\n     *\n     */\n    static cursor = {\n        ref: {} as HTMLElement,\n        initialize: (parent?: HTMLElement) => {\n            if (!parent) { return; }\n            EventGenerator.cursor.ref = document.createElement('div') as HTMLElement;\n\n            EventGenerator.cursor.ref.style.position = 'absolute';\n            EventGenerator.cursor.ref.style.display = 'block';\n            EventGenerator.cursor.ref.style.left = '0px';\n            EventGenerator.cursor.ref.style.top = '0px';\n            EventGenerator.cursor.ref.style.width = '20px';\n            EventGenerator.cursor.ref.style.height = '20px';\n            EventGenerator.cursor.ref.style.background = CURSOR_IMG;\n\n            parent.appendChild(EventGenerator.cursor.ref);\n        },\n        destroy: (parent?: HTMLElement) => {\n            if (!parent) { return; }\n\n            parent.removeChild(EventGenerator.cursor.ref);\n        },\n        update: (x: number, y: number) => {\n            EventGenerator.cursor.ref.style.left = `${x - 10}px`;\n            EventGenerator.cursor.ref.style.top = `${y - 10}px`;\n        },\n    };\n\n    /**\n     * Gets a `click` event.\n     *\n     */\n    static get click(): MouseEvent {\n        const event = document.createEvent('MouseEvent');\n        event.initEvent('click', true, true);\n        return event;\n    }\n\n    /**\n     * Gets a `mouseenter` event.\n     *\n     */\n    static get mouseEnter(): MouseEvent {\n        const event = document.createEvent('MouseEvent');\n        event.initEvent('mouseenter', true, true);\n        return event;\n    }\n\n    /**\n     * Gets a `mouseleave` event.\n     *\n     */\n    static get mouseLeave(): MouseEvent {\n        const event = document.createEvent('MouseEvent');\n        event.initEvent('mouseleave', true, true);\n        return event;\n    }\n\n    /**\n     * Gets a `dblclick` event.\n     *\n     */\n    static get doubleClick(): MouseEvent {\n        const event = document.createEvent('MouseEvent');\n        event.initEvent('dblclick', true, true);\n        return event;\n    }\n\n    /**\n     * Gets a `dragover` event.\n     *\n     */\n    static get dragOver() {\n        const dragOverEvent = new Event('DragEvent');\n        dragOverEvent.initEvent('dragover', true, true);\n        return dragOverEvent;\n    }\n\n    /**\n     * Gets a `dragleave` event.\n     *\n     */\n    static get dragLeave() {\n        const dragOverEvent = new Event('DragEvent');\n        dragOverEvent.initEvent('dragleave', true, true);\n        return dragOverEvent;\n    }\n\n    /**\n     * Gets a `dragEnd` event.\n     *\n     */\n    static get dragEnd() {\n        const dragOverEvent = new Event('DragEvent');\n        dragOverEvent.initEvent('dragend', true, true);\n        return dragOverEvent;\n    }\n\n    /**\n     * KeyDown event generator helper.\n     *\n     * @param key The pressed key.\n     * @param [modifiers] The active modifiers, if any.\n     * @returns A `keydown` event with the provided key and modifier metadata.\n     */\n    static keyDown(key: KeyOrKeyName, ...modifiers: IKeyModifier[]): KeyboardEvent {\n        // eslint-disable-next-line no-underscore-dangle\n        return EventGenerator._key('keydown', key, modifiers);\n    }\n\n    /**\n     * KeyUp event generator helper.\n     *\n     * @param key The pressed key.\n     * @param [modifiers] The active modifier, if any.\n     * @returns A `keyup` event with the provided key and modifier metadata.\n     */\n    static keyUp(key: KeyOrKeyName, ...modifiers: IKeyModifier[]): KeyboardEvent {\n        // eslint-disable-next-line no-underscore-dangle\n        return EventGenerator._key('keyup', key, modifiers);\n    }\n\n    /**\n     *  Drop event generator, helpful for testing `HTMLInputElement`s of type `file`.\n     *\n     * @param [files=[]] A list of files to associated to the event.\n     * @returns The drop event with the `dataTransfer` and `files` properties populated.\n     */\n    static drop(files: File[] = []): IDropEvent {\n        const fileList = new FakeFileList(files);\n\n        const ev = new DragEvent('drop');\n\n        Object.defineProperty(ev, 'dataTransfer', {\n            value: new DataTransfer(),\n        });\n        Object.defineProperty(ev.dataTransfer, 'files', {\n            value: fileList,\n        });\n\n        return ev as any as IDropEvent;\n    }\n\n    /**\n     * Change event generator helpful for testing `HTMLInputElement`s.\n     *\n     * @returns A simple `change` event.\n     */\n    static change(): Event {\n        const fileList = new FakeFileList();\n        const changeEvent = new Event('InputEvent');\n\n        changeEvent.initEvent('change', true, true);\n\n        Object.defineProperty(changeEvent, 'target', {\n            value: changeEvent.target ?? {},\n        });\n\n        Object.defineProperty(changeEvent.target, 'files', {\n            value: fileList,\n        });\n\n        return changeEvent;\n    }\n\n    /**\n     * Generates an input event helpful for testing `HTMLInputElement`s.\n     *\n     * @returns A simple `input` event.\n     */\n    static input(): Event {\n        const event = document.createEvent('Event');\n        event.initEvent('input', true, true);\n        return event;\n    }\n\n    /**\n     * Generates a `click` event on the requested X, Y coordinates.\n     *\n     * @param offsetX The X offset value.\n     * @param offsetY The Y offset value.\n     * @returns A `click` event with the `offsetX` and `offsetY` properties populated.\n     */\n    static clickXY(offsetX: number, offsetY: number): MouseEvent {\n        const event = this.click;\n\n        Object.defineProperty(event, 'offsetX', {\n            value: offsetX,\n        });\n        Object.defineProperty(event, 'offsetY', {\n            value: offsetY,\n        });\n\n        this.cursor.update(offsetX, offsetY);\n        return event;\n    }\n\n    /**\n     * Generates a `mousemove` event on the requested X, Y coordinates.\n     *\n     * @param offsetX The X offset value.\n     * @param offsetY The Y offset value.\n     * @returns A `mousemove` event with the `offsetX` and `offsetY` properties populated.\n     */\n    static moveXY(offsetX: number, offsetY: number): MouseEvent {\n        const event = document.createEvent('MouseEvent');\n        event.initEvent('mousemove', true, false);\n\n        Object.defineProperty(event, 'offsetX', {\n            value: offsetX,\n        });\n        Object.defineProperty(event, 'offsetY', {\n            value: offsetY,\n        });\n\n        this.cursor.update(offsetX, offsetY);\n        return event;\n    }\n\n    private static _key(type: string, key: IKey | keyof Key, modifiers = [] as IKeyModifier[]) {\n        // eslint-disable-next-line no-underscore-dangle\n        const safeKey = EventGenerator._getKey(key) as IKey;\n        const options: KeyboardEventInit & { keyCode: number } = {\n            code: `${safeKey.code}`,\n            key: safeKey.name,\n            keyCode: safeKey.keyCode,\n            shiftKey: modifiers.includes(Key.Shift),\n            altKey: modifiers.includes(Key.Alt),\n            ctrlKey: modifiers.includes(Key.Control),\n        };\n\n        return new KeyboardEvent(type, options);\n    }\n\n    private static _getKey(key: IKey | keyof Key): IKey {\n        if (typeof key === 'string') {\n            const internalKey: IKey = Key[key];\n            if (!internalKey) {\n                throw new Error(`Key definition for ${key} does not exist!`);\n            }\n            return internalKey;\n        }\n\n        return key as IKey;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeFileList.html":{"url":"classes/FakeFileList.html","title":"class - FakeFileList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeFileList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/testing/src/utilities/fake-file-list.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that implements the FileList interface.\nThis class facilitates easy creation of FileList mocks, for UTs.\n\n            \n\n\n            \n                Implements\n            \n            \n                        FileList\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                files\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                item\n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(files: File[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular/testing/src/utilities/fake-file-list.ts:16\n                            \n                        \n\n                \n                    \n                            Creates a mock for FileList in order to easily test file centric scenarios with inputs.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                    File[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A list of files.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/angular/testing/src/utilities/fake-file-list.ts:24\n                        \n                    \n\n            \n                \n                    A list of files.\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(...files: File[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/fake-file-list.ts:49\n                \n            \n\n\n            \n                \n                    Add files to the collection.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            File[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The files that will be added to the collection.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n            \n                \nitem(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/fake-file-list.ts:40\n                \n            \n\n\n            \n                \n                    Retrieve an item at the specified index.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The accesed index.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     File\n\n                    \n                    \n                        The file at the requested idx.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n            \n                \n()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/testing/src/utilities/fake-file-list.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     IterableIterator\n\n                    \n                \n            \n        \n    \n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: number]:    File\n\n                    \n                \n                        \n                            \n                                Defined in projects/angular/testing/src/utilities/fake-file-list.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/testing/src/utilities/fake-file-list.ts:14\n                                \n                            \n                    \n                        \n                                The total file count.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        export class FakeFileList implements FileList {\n    [index: number]: File;\n\n    /**\n     * The total file count.\n     *\n     */\n    get length() {\n        return this.files.length;\n    }\n\n    /**\n     * Creates a `mock` for `FileList` in order to easily test file centric scenarios with `input`s.\n     *\n     * @param [files=[]] A list of files.\n     * @returns The mocked `FileList` instance.\n     */\n    constructor(public files: File[] = []) {\n        files.forEach((file, idx) => {\n            this[idx] = file;\n        });\n    }\n\n    [Symbol.iterator](): IterableIterator {\n        return this.files[Symbol.iterator]();\n    }\n\n    /**\n     * Retrieve an item at the specified index.\n     *\n     * @param idx The accesed index.\n     * @returns The file at the requested `idx`.\n     */\n    item(idx: number): File {\n        return this[idx];\n    }\n\n    /**\n     * Add files to the collection.\n     *\n     * @param files The files that will be added to the collection.\n     */\n    add(...files: File[]): void {\n        files.forEach(file => {\n            this[this.files.length] = file;\n            this.files.push(file);\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridOptions.html":{"url":"interfaces/GridOptions.html","title":"interface - GridOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GridOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/models/dataModel.ts\n        \n\n\n            \n                Description\n            \n            \n                Grid options.\nuseLegacyDesign if you still need the old layout\ncollapsibleFilters is deprecated, use collapseFiltersCount instead\nfetchStrategy controls how searchable filters will emit queries on render\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collapseFiltersCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            collapsibleFilters\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fetchStrategy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idProperty\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useCache\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useLegacyDesign\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collapseFiltersCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collapseFiltersCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collapsibleFilters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collapsibleFilters:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchStrategy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetchStrategy:     \"eager\" | \"onOpen\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"eager\" | \"onOpen\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idProperty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idProperty:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useCache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useCache:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useLegacyDesign\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useLegacyDesign:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IGridDataEntry {\n    /**\n     * The identifier associated to the current row item.\n     *\n     * Used to track multi-page selections / optimize rendering.\n     */\n    id: number | string;\n}\n/**\n * Grid options.\n * `useLegacyDesign` if you still need the old layout\n * `collapsibleFilters` is deprecated, use `collapseFiltersCount` instead\n * `fetchStrategy` controls how searchable filters will emit queries on render\n *\n * @export\n */\nexport interface GridOptions {\n    useCache?: boolean;\n    fetchStrategy?: 'eager' | 'onOpen';\n    useLegacyDesign?: boolean;\n    collapsibleFilters?: boolean;\n    collapseFiltersCount?: number;\n    idProperty?: keyof T;\n    rowSize?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseNode.html":{"url":"interfaces/IBaseNode.html","title":"interface - IBaseNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-tree-select/src/models/tree.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IBaseNode {\n    key: string;\n    name: string;\n    data?: T;\n}\n\nexport interface ITreeNode extends IBaseNode {\n    children?: ITreeNode[];\n}\n\nexport interface IFlatNodeObject extends IBaseNode {\n    hasChildren: boolean;\n    level: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDateFormatOptions.html":{"url":"interfaces/IDateFormatOptions.html","title":"interface - IDateFormatOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDateFormatOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The date format options schema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            contentType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            redraw$\n                                        \n                                \n                                \n                                        \n                                            timezone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            titleType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentType:         DisplayType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DisplayType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrites the default content type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrites the default dateformat used by moment.js.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redraw$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redraw$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Stream that triggers a re-render of the component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timezone:         string | TimezoneResolver\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | TimezoneResolver\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The timezone in which the date should be displayed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titleType:         DisplayType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DisplayType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrites the default title type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import 'moment-timezone';\n\nimport moment from 'moment';\nimport {\n    interval,\n    merge,\n    Observable,\n    of,\n} from 'rxjs';\nimport {\n    delay,\n    filter,\n    take,\n    takeUntil,\n} from 'rxjs/operators';\n\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    Optional,\n    Renderer2,\n} from '@angular/core';\nimport { UiFormatDirective } from '@uipath/angular/directives/internal';\n\n/**\n * The date format display type options.\n */\nexport type DisplayType = 'absolute' | 'relative';\n\n/**\n * Timezone resolver type.\n */\nexport type TimezoneResolver = () => string;\n\n/**\n * The date format options schema.\n */\nexport interface IDateFormatOptions {\n    /**\n     * Stream that triggers a re-render of the component.\n     *\n     */\n    redraw$: Observable;\n    /**\n     * The timezone in which the date should be displayed.\n     *\n     */\n    timezone: string | TimezoneResolver;\n    /**\n     * Overwrites the default content type.\n     *\n     */\n    contentType?: DisplayType;\n    /**\n     * Overwrites the default title type.\n     *\n     */\n    titleType?: DisplayType;\n    /**\n     * Overwrites the default dateformat used by moment.js.\n     *\n     */\n    format?: string;\n}\n\n/**\n * `ui-dateformat` injection token for the `options`.\n *\n */\nexport const UI_DATEFORMAT_OPTIONS = new InjectionToken('UiDateFormat options.');\n\n/**\n * @ignore\n */\nconst RELATIVE_TIME_UPDATE_INTERVAL = 10000;\n\nexport const resolveTimezone = (options: IDateFormatOptions) => {\n    const type = typeof options.timezone;\n\n    switch (type) {\n        case 'string':\n            return (options.timezone as string);\n        case 'function':\n            return (options.timezone as TimezoneResolver)();\n        default:\n            return '';\n    }\n};\n\n/**\n * A directive that formats a given `Date` input in a `relative` or `absolute` format.\n *\n * Depends On:\n * - [moment](https://www.npmjs.com/package/moment)\n * - [moment-timezone](https://www.npmjs.com/package/moment-timezone)\n *\n * In order to reduce bundle sizes, we strongly recommend using the following webpack plugins:\n * - [moment-locales-webpack-plugin](https://www.npmjs.com/package/moment-locales-webpack-plugin)\n * - [moment-timezone-data-webpack-plugin](https://www.npmjs.com/package/moment-timezone-data-webpack-plugin)\n *\n * @export\n */\n@Directive({\n    selector: '[uiDateFormat], ui-dateformat',\n})\nexport class UiDateFormatDirective extends UiFormatDirective {\n    /**\n     * What format should the content have, `absolute` or `relative`.\n     *\n     */\n    @Input()\n    contentType!: DisplayType;\n    /**\n     * What format should the `[data-title]` attribute have, `absolute` or `relative`.\n     *\n     * This title attribute is exposed in order to easily integrate with `tooltip` components.\n     *\n     * eg:\n     * ``\n     */\n    @Input()\n    titleType!: DisplayType;\n    /**\n     * The `timezone` for which the current date is displayed.\n     *\n     */\n    @Input()\n    timezone?: string;\n    /**\n     * The input `Date` that needs to be formatted.\n     *\n     */\n    @Input()\n    set date(date: Date | string | undefined | null) {\n        date = date ?? undefined;\n\n        if (this._isDifferentValue(date, this._date)) {\n            const initial = this._date === undefined;\n            this._date = date;\n\n            if (initial) {\n                this._zone.runOutsideAngular(() => {\n                    merge(\n                        this._zone.onMicrotaskEmpty,\n                        // IE doesn't play nicely with task empty only\n                        this._zone.onStable,\n                    )\n                        .pipe(\n                            take(1),\n                            // hack needed for initial render of mat-tooltip\n                            // if not done only on initial may create a change detection loop\n                            // seen on Edge ~107, cannot point to the exact root cause why\n                            delay(0),\n                        )\n                        .subscribe(() => {\n                            this._cd.markForCheck();\n                        });\n                });\n            }\n        }\n    }\n    get date() {\n        return this._date;\n    }\n    /**\n     * The `moment` format, defaults to `L LTS`.\n     *\n     */\n    @Input()\n    dateFormat!: string;\n\n    protected _text?: HTMLElement;\n\n    private get _relativeTime() {\n        if (!this.date) { return ''; }\n        if (!(this.date instanceof Date)) { return this.date; }\n\n        return moment(this.date)\n            .fromNow();\n    }\n\n    private get _absoluteTime() {\n        if (!this.date) { return ''; }\n        if (!(this.date instanceof Date)) { return this.date; }\n\n        return moment(this.date)\n            .tz(this.timezone ?? resolveTimezone(this._options))\n            .format(this.dateFormat);\n    }\n\n    private _lastAbsoluteTime?: string;\n    private _lastRelativeTime?: string;\n    private _lastContentType?: DisplayType;\n    private _lastTitleType?: DisplayType;\n    private _date?: Date | string;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        @Inject(UI_DATEFORMAT_OPTIONS)\n        @Optional()\n        private _options: IDateFormatOptions,\n        private _cd: ChangeDetectorRef,\n        private _zone: NgZone,\n        renderer: Renderer2,\n        elementRef: ElementRef,\n    ) {\n        super(\n            renderer,\n            elementRef,\n        );\n\n        this._options = _options || {};\n        this.dateFormat = this._options.format ?? 'L LTS';\n        this.contentType = this._options.contentType ?? 'absolute';\n        this.titleType = this._options.titleType ?? 'absolute';\n\n        const redraw$ = this._options.redraw$ || of(null);\n\n        merge(\n            redraw$,\n            this._redraw$,\n            interval(RELATIVE_TIME_UPDATE_INTERVAL).pipe(\n                filter(() =>\n                    this._isRelative(this.titleType) ||\n                    this._isRelative(this.contentType),\n                ),\n            ),\n        )\n            .pipe(\n                takeUntil(this._destroyed$),\n            )\n            .subscribe(() => this._evaluate());\n    }\n\n    private _evaluate() {\n        this._updateTitle();\n        this._updateContent();\n\n        this._lastAbsoluteTime = this._absoluteTime;\n        this._lastRelativeTime = this._relativeTime;\n        this._lastContentType = this.contentType;\n        this._lastTitleType = this.titleType;\n    }\n\n    private _updateContent() {\n        if (\n            this._lastContentType === this.contentType &&\n            !this._timeForTypeChanged(this.contentType)\n        ) { return; }\n\n        const text = ` ${this._timeForType(this.contentType)} `;\n\n        if (!this._text) {\n            this._text = this._renderer.createText(text);\n            this._renderer.appendChild(this._elementRef.nativeElement, this._text);\n        } else {\n            this._renderer.setValue(this._text, text);\n        }\n    }\n\n    private _updateTitle() {\n        if (\n            this._lastTitleType === this.titleType &&\n            !this._timeForTypeChanged(this.titleType)\n        ) { return; }\n\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'data-title', this._timeForType(this.titleType));\n    }\n\n    private _isRelative = (type: DisplayType) => type === 'relative';\n\n    private _timeForTypeChanged = (type: DisplayType) =>\n        this._isRelative(type) ?\n            this._lastRelativeTime !== this._relativeTime :\n            this._lastAbsoluteTime !== this._absoluteTime;\n\n    private _timeForType = (type: DisplayType) => this._isRelative(type) ?\n        this._relativeTime :\n        this._absoluteTime;\n\n    private _isDifferentValue = (value: Date | string | undefined, compareValue: Date | string | undefined) => {\n        if (value instanceof Date && compareValue instanceof Date) {\n            return value.getTime() !== compareValue.getTime();\n        }\n\n        return value !== compareValue;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDropEvent.html":{"url":"interfaces/IDropEvent.html","title":"interface - IDropEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDropEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/testing/src/utilities/events/drop-event.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the structure requried for a file DropEvent.\n\n            \n\n            \n                Extends\n            \n            \n                        Event\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dataTransfer\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataTransfer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataTransfer:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Defines the files required for file-centric event dispatching.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FakeFileList } from '../fake-file-list';\n\n/**\n * Defines the structure requried for a file `DropEvent`.\n *\n * @export\n */\nexport interface IDropEvent extends Event {\n    /**\n     * Defines the `files` required for file-centric event dispatching.\n     *\n     */\n    dataTransfer: {\n        files: FakeFileList;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDropdownOption.html":{"url":"interfaces/IDropdownOption.html","title":"interface - IDropdownOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDropdownOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Dropdown option schema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            translationKey\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The dropdown option label.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translationKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translationKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The dropdown translation key, used by the intl service.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     string | number | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number | boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current dropdown value.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport {\n    Directive,\n    Input,\n    OnDestroy,\n} from '@angular/core';\n\nimport { UiGridFilterDirective } from './ui-grid-filter';\n\n/**\n * Dropdown option schema.\n *\n * @export\n */\nexport interface IDropdownOption {\n    /**\n     * The current dropdown value.\n     *\n     */\n    value: string | number | boolean;\n    /**\n     * The dropdown option label.\n     *\n     */\n    label: string;\n    /**\n     * The dropdown translation key, used by the `intl` service.\n     *\n     */\n    translationKey?: string;\n}\n\n/**\n * The dropdown filter definition directive.\n *\n * @export\n */\n@Directive({\n    selector: '[uiGridDropdownFilter], ui-grid-dropdown-filter',\n})\nexport class UiGridDropdownFilterDirective extends UiGridFilterDirective implements OnDestroy {\n    /**\n     * The dropdown items.\n     *\n     */\n    @Input()\n    items?: IDropdownOption[];\n\n    /**\n     * If it should display the `All` option.\n     *\n     */\n    @Input()\n    showAllOption = true;\n\n    /**\n     * The current dropdown option.\n     *\n     */\n    @Input()\n    value?: IDropdownOption;\n\n    /**\n     * The empty dropdown state.\n     *\n     */\n    @Input()\n    emptyStateValue?: IDropdownOption['value'];\n    /**\n     * Wether the filter should be rendered in the grid.\n     *\n     */\n    @Input()\n    get visible() { return this.visible$.value; }\n    set visible(visible: boolean) { this.visible$.next(visible); }\n\n    /**\n     * @ignore\n     */\n    visible$ = new BehaviorSubject(true);\n\n    /**\n     * Updates the dropdown value.\n     *\n     */\n    updateValue(value?: IDropdownOption) {\n        this.value = value;\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.filterChange.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFilterModel.html":{"url":"interfaces/IFilterModel.html","title":"interface - IFilterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFilterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/models/filterModel.ts\n        \n\n\n            \n                Description\n            \n            \n                The filter model schema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Filter method metadata.\neg: equals, greaterThan, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:      | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The targeted entity property.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type metadata.\neg: string, number, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     string | number | Date | boolean |  | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number | Date | boolean |  | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current filter value.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IFilterModel {\n    /**\n     * The targeted entity property.\n     *\n     */\n    property: keyof T | string;\n    /**\n     * Filter method metadata.\n     *\n     * eg: `equals`, `greaterThan`, etc.\n     *\n     */\n    method: string;\n    /**\n     * The current filter value.\n     *\n     */\n    value: string | number | Date | boolean | [] | undefined | null;\n    /**\n     * Type metadata.\n     *\n     * eg: `string`, `number`, etc.\n     *\n     */\n    type?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlatNodeObject.html":{"url":"interfaces/IFlatNodeObject.html","title":"interface - IFlatNodeObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlatNodeObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-tree-select/src/models/tree.models.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IBaseNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hasChildren\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasChildren\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasChildren:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IBaseNode {\n    key: string;\n    name: string;\n    data?: T;\n}\n\nexport interface ITreeNode extends IBaseNode {\n    children?: ITreeNode[];\n}\n\nexport interface IFlatNodeObject extends IBaseNode {\n    hasChildren: boolean;\n    level: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridDataEntry.html":{"url":"interfaces/IGridDataEntry.html","title":"interface - IGridDataEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridDataEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/models/dataModel.ts\n        \n\n\n            \n                Description\n            \n            \n                The grid entry schema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The identifier associated to the current row item.\nUsed to track multi-page selections / optimize rendering.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IGridDataEntry {\n    /**\n     * The identifier associated to the current row item.\n     *\n     * Used to track multi-page selections / optimize rendering.\n     */\n    id: number | string;\n}\n/**\n * Grid options.\n * `useLegacyDesign` if you still need the old layout\n * `collapsibleFilters` is deprecated, use `collapseFiltersCount` instead\n * `fetchStrategy` controls how searchable filters will emit queries on render\n *\n * @export\n */\nexport interface GridOptions {\n    useCache?: boolean;\n    fetchStrategy?: 'eager' | 'onOpen';\n    useLegacyDesign?: boolean;\n    collapsibleFilters?: boolean;\n    collapseFiltersCount?: number;\n    idProperty?: keyof T;\n    rowSize?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKey.html":{"url":"interfaces/IKey.html","title":"interface - IKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/testing/src/utilities/key.ts\n        \n\n\n            \n                Description\n            \n            \n                Key schema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            keyCode\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code associated to the current key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keyCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The keyCode associated to the current key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The friendly name of the current key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IKey {\n    /**\n     * The keyCode associated to the current `key`.\n     */\n    keyCode: number;\n    /**\n     * The code associated to the current `key`.\n     */\n    code: string;\n    /**\n     * The friendly `name` of the current `key`.\n     *\n     */\n    name: string;\n}\n\n/**\n * Key modifier schema.\n *\n * @export\n */\nexport interface IKeyModifier extends IKey {\n    /**\n     * The friendly `name` of the current modifier.\n     *\n     */\n    name: 'Shift' | 'Control' | 'Alt';\n}\n\n/**\n * A complete collection of `keys` that can be used to emit fake events for testing.\n *\n * @export\n */\nexport class Key implements Record {\n    /**\n     * Metadata for key `q`.\n     *\n     */\n    static q: IKey = {\n        name: 'q',\n        code: 'KeyQ',\n        keyCode: 81,\n    };\n    /**\n     * Metadata for key `w`.\n     *\n     */\n    static w: IKey = {\n        name: 'w',\n        code: 'KeyW',\n        keyCode: 87,\n    };\n    /**\n     * Metadata for key `e`.\n     *\n     */\n    static e: IKey = {\n        name: 'e',\n        code: 'KeyE',\n        keyCode: 69,\n    };\n    /**\n     * Metadata for key `r`.\n     *\n     */\n    static r: IKey = {\n        name: 'r',\n        code: 'KeyR',\n        keyCode: 82,\n    };\n    /**\n     * Metadata for key `t`.\n     *\n     */\n    static t: IKey = {\n        name: 't',\n        code: 'KeyT',\n        keyCode: 84,\n    };\n    /**\n     * Metadata for key `y`.\n     *\n     */\n    static y: IKey = {\n        name: 'y',\n        code: 'KeyY',\n        keyCode: 89,\n    };\n    /**\n     * Metadata for key `u`.\n     *\n     */\n    static u: IKey = {\n        name: 'u',\n        code: 'KeyU',\n        keyCode: 85,\n    };\n    /**\n     * Metadata for key `i`.\n     *\n     */\n    static i: IKey = {\n        name: 'i',\n        code: 'KeyI',\n        keyCode: 73,\n    };\n    /**\n     * Metadata for key `o`.\n     *\n     */\n    static o: IKey = {\n        name: 'o',\n        code: 'KeyO',\n        keyCode: 79,\n    };\n    /**\n     * Metadata for key `p`.\n     *\n     */\n    static p: IKey = {\n        name: 'p',\n        code: 'KeyP',\n        keyCode: 80,\n    };\n    /**\n     * Metadata for key `a`.\n     *\n     */\n    static a: IKey = {\n        name: 'a',\n        code: 'KeyA',\n        keyCode: 65,\n    };\n    /**\n     * Metadata for key `s`.\n     *\n     */\n    static s: IKey = {\n        name: 's',\n        code: 'KeyS',\n        keyCode: 83,\n    };\n    /**\n     * Metadata for key `d`.\n     *\n     */\n    static d: IKey = {\n        name: 'd',\n        code: 'KeyD',\n        keyCode: 68,\n    };\n    /**\n     * Metadata for key `f`.\n     *\n     */\n    static f: IKey = {\n        name: 'f',\n        code: 'KeyF',\n        keyCode: 70,\n    };\n    /**\n     * Metadata for key `g`.\n     *\n     */\n    static g: IKey = {\n        name: 'g',\n        code: 'KeyG',\n        keyCode: 71,\n    };\n    /**\n     * Metadata for key `h`.\n     *\n     */\n    static h: IKey = {\n        name: 'h',\n        code: 'KeyH',\n        keyCode: 72,\n    };\n    /**\n     * Metadata for key `j`.\n     *\n     */\n    static j: IKey = {\n        name: 'j',\n        code: 'KeyJ',\n        keyCode: 74,\n    };\n    /**\n     * Metadata for key `k`.\n     *\n     */\n    static k: IKey = {\n        name: 'k',\n        code: 'KeyK',\n        keyCode: 75,\n    };\n    /**\n     * Metadata for key `l`.\n     *\n     */\n    static l: IKey = {\n        name: 'l',\n        code: 'KeyL',\n        keyCode: 76,\n    };\n    /**\n     * Metadata for key `z`.\n     *\n     */\n    static z: IKey = {\n        name: 'z',\n        code: 'KeyZ',\n        keyCode: 90,\n    };\n    /**\n     * Metadata for key `x`.\n     *\n     */\n    static x: IKey = {\n        name: 'x',\n        code: 'KeyX',\n        keyCode: 88,\n    };\n    /**\n     * Metadata for key `c`.\n     *\n     */\n    static c: IKey = {\n        name: 'c',\n        code: 'KeyC',\n        keyCode: 67,\n    };\n    /**\n     * Metadata for key `v`.\n     *\n     */\n    static v: IKey = {\n        name: 'v',\n        code: 'KeyV',\n        keyCode: 86,\n    };\n    /**\n     * Metadata for key `b`.\n     *\n     */\n    static b: IKey = {\n        name: 'b',\n        code: 'KeyB',\n        keyCode: 66,\n    };\n    /**\n     * Metadata for key `n`.\n     *\n     */\n    static n: IKey = {\n        name: 'n',\n        code: 'KeyN',\n        keyCode: 78,\n    };\n    /**\n     * Metadata for key `m`.\n     *\n     */\n    static m: IKey = {\n        name: 'm',\n        code: 'KeyM',\n        keyCode: 77,\n    };\n    /**\n     * Metadata for key `Q`.\n     *\n     */\n    static Q: IKey = {\n        name: 'Q',\n        code: 'KeyQ',\n        keyCode: 81,\n    };\n    /**\n     * Metadata for key `W`.\n     *\n     */\n    static W: IKey = {\n        name: 'W',\n        code: 'KeyW',\n        keyCode: 87,\n    };\n    /**\n     * Metadata for key `E`.\n     *\n     */\n    static E: IKey = {\n        name: 'E',\n        code: 'KeyE',\n        keyCode: 69,\n    };\n    /**\n     * Metadata for key `R`.\n     *\n     */\n    static R: IKey = {\n        name: 'R',\n        code: 'KeyR',\n        keyCode: 82,\n    };\n    /**\n     * Metadata for key `T`.\n     *\n     */\n    static T: IKey = {\n        name: 'T',\n        code: 'KeyT',\n        keyCode: 84,\n    };\n    /**\n     * Metadata for key `Y`.\n     *\n     */\n    static Y: IKey = {\n        name: 'Y',\n        code: 'KeyY',\n        keyCode: 89,\n    };\n    /**\n     * Metadata for key `U`.\n     *\n     */\n    static U: IKey = {\n        name: 'U',\n        code: 'KeyU',\n        keyCode: 85,\n    };\n    /**\n     * Metadata for key `I`.\n     *\n     */\n    static I: IKey = {\n        name: 'I',\n        code: 'KeyI',\n        keyCode: 73,\n    };\n    /**\n     * Metadata for key `O`.\n     *\n     */\n    static O: IKey = {\n        name: 'O',\n        code: 'KeyO',\n        keyCode: 79,\n    };\n    /**\n     * Metadata for key `P`.\n     *\n     */\n    static P: IKey = {\n        name: 'P',\n        code: 'KeyP',\n        keyCode: 80,\n    };\n    /**\n     * Metadata for key `A`.\n     *\n     */\n    static A: IKey = {\n        name: 'A',\n        code: 'KeyA',\n        keyCode: 65,\n    };\n    /**\n     * Metadata for key `S`.\n     *\n     */\n    static S: IKey = {\n        name: 'S',\n        code: 'KeyS',\n        keyCode: 83,\n    };\n    /**\n     * Metadata for key `D`.\n     *\n     */\n    static D: IKey = {\n        name: 'D',\n        code: 'KeyD',\n        keyCode: 68,\n    };\n    /**\n     * Metadata for key `F`.\n     *\n     */\n    static F: IKey = {\n        name: 'F',\n        code: 'KeyF',\n        keyCode: 70,\n    };\n    /**\n     * Metadata for key `G`.\n     *\n     */\n    static G: IKey = {\n        name: 'G',\n        code: 'KeyG',\n        keyCode: 71,\n    };\n    /**\n     * Metadata for key `H`.\n     *\n     */\n    static H: IKey = {\n        name: 'H',\n        code: 'KeyH',\n        keyCode: 72,\n    };\n    /**\n     * Metadata for key `J`.\n     *\n     */\n    static J: IKey = {\n        name: 'J',\n        code: 'KeyJ',\n        keyCode: 74,\n    };\n    /**\n     * Metadata for key `K`.\n     *\n     */\n    static K: IKey = {\n        name: 'K',\n        code: 'KeyK',\n        keyCode: 75,\n    };\n    /**\n     * Metadata for key `L`.\n     *\n     */\n    static L: IKey = {\n        name: 'L',\n        code: 'KeyL',\n        keyCode: 76,\n    };\n    /**\n     * Metadata for key `Z`.\n     *\n     */\n    static Z: IKey = {\n        name: 'Z',\n        code: 'KeyZ',\n        keyCode: 90,\n    };\n    /**\n     * Metadata for key `X`.\n     *\n     */\n    static X: IKey = {\n        name: 'X',\n        code: 'KeyX',\n        keyCode: 88,\n    };\n    /**\n     * Metadata for key `C`.\n     *\n     */\n    static C: IKey = {\n        name: 'C',\n        code: 'KeyC',\n        keyCode: 67,\n    };\n    /**\n     * Metadata for key `V`.\n     *\n     */\n    static V: IKey = {\n        name: 'V',\n        code: 'KeyV',\n        keyCode: 86,\n    };\n    /**\n     * Metadata for key `B`.\n     *\n     */\n    static B: IKey = {\n        name: 'B',\n        code: 'KeyB',\n        keyCode: 66,\n    };\n    /**\n     * Metadata for key `N`.\n     *\n     */\n    static N: IKey = {\n        name: 'N',\n        code: 'KeyN',\n        keyCode: 78,\n    };\n    /**\n     * Metadata for key `M`.\n     *\n     */\n    static M: IKey = {\n        name: 'M',\n        code: 'KeyM',\n        keyCode: 77,\n    };\n    /**\n     * Metadata for key `Shift`.\n     *\n     */\n    static Shift: IKeyModifier = {\n        name: 'Shift',\n        code: 'Shift',\n        keyCode: 16,\n    };\n    /**\n     * Metadata for key `Control`.\n     *\n     */\n    static Control: IKeyModifier = {\n        name: 'Control',\n        code: 'Control',\n        keyCode: 17,\n    };\n    /**\n     * Metadata for key `Alt`.\n     *\n     */\n    static Alt: IKeyModifier = {\n        name: 'Alt',\n        code: 'Alt',\n        keyCode: 18,\n    };\n    /**\n     * Metadata for key `Enter`.\n     *\n     */\n    static Enter: IKey = {\n        name: 'Enter',\n        code: 'Enter',\n        keyCode: 13,\n    };\n    /**\n     * Metadata for key `ArrowLeft`.\n     *\n     */\n    static ArrowLeft: IKey = {\n        name: 'ArrowLeft',\n        code: 'ArrowLeft',\n        keyCode: 37,\n    };\n    /**\n     * Metadata for key `ArrowDown`.\n     *\n     */\n    static ArrowDown: IKey = {\n        name: 'ArrowDown',\n        code: 'ArrowDown',\n        keyCode: 40,\n    };\n    /**\n     * Metadata for key `ArrowRight`.\n     *\n     */\n    static ArrowRight: IKey = {\n        name: 'ArrowRight',\n        code: 'ArrowRight',\n        keyCode: 39,\n    };\n    /**\n     * Metadata for key `ArrowUp`.\n     *\n     */\n    static ArrowUp: IKey = {\n        name: 'ArrowUp',\n        code: 'ArrowUp',\n        keyCode: 38,\n    };\n    /**\n     * Metadata for key `Space`.\n     *\n     */\n    static Space: IKey = {\n        name: ' ',\n        code: 'Space',\n        keyCode: 32,\n    };\n    /**\n     * Metadata for key `Tab`.\n     *\n     */\n    static Tab: IKey = {\n        name: 'Tab',\n        code: 'Tab',\n        keyCode: 9,\n    };\n    /**\n     * Metadata for key `Escape`.\n     *\n     */\n    static Escape: IKey = {\n        name: 'Escape',\n        code: 'Escape',\n        keyCode: 27,\n    };\n    /**\n     * Metadata for key `Backspace`.\n     *\n     */\n    static Backspace: IKey = {\n        name: 'Backspace',\n        code: 'Backspace',\n        keyCode: 8,\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyModifier.html":{"url":"interfaces/IKeyModifier.html","title":"interface - IKeyModifier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IKeyModifier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/testing/src/utilities/key.ts\n        \n\n\n            \n                Description\n            \n            \n                Key modifier schema.\n\n            \n\n            \n                Extends\n            \n            \n                        IKey\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \"Shift\" | \"Control\" | \"Alt\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Shift\" | \"Control\" | \"Alt\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The friendly name of the current modifier.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IKey {\n    /**\n     * The keyCode associated to the current `key`.\n     */\n    keyCode: number;\n    /**\n     * The code associated to the current `key`.\n     */\n    code: string;\n    /**\n     * The friendly `name` of the current `key`.\n     *\n     */\n    name: string;\n}\n\n/**\n * Key modifier schema.\n *\n * @export\n */\nexport interface IKeyModifier extends IKey {\n    /**\n     * The friendly `name` of the current modifier.\n     *\n     */\n    name: 'Shift' | 'Control' | 'Alt';\n}\n\n/**\n * A complete collection of `keys` that can be used to emit fake events for testing.\n *\n * @export\n */\nexport class Key implements Record {\n    /**\n     * Metadata for key `q`.\n     *\n     */\n    static q: IKey = {\n        name: 'q',\n        code: 'KeyQ',\n        keyCode: 81,\n    };\n    /**\n     * Metadata for key `w`.\n     *\n     */\n    static w: IKey = {\n        name: 'w',\n        code: 'KeyW',\n        keyCode: 87,\n    };\n    /**\n     * Metadata for key `e`.\n     *\n     */\n    static e: IKey = {\n        name: 'e',\n        code: 'KeyE',\n        keyCode: 69,\n    };\n    /**\n     * Metadata for key `r`.\n     *\n     */\n    static r: IKey = {\n        name: 'r',\n        code: 'KeyR',\n        keyCode: 82,\n    };\n    /**\n     * Metadata for key `t`.\n     *\n     */\n    static t: IKey = {\n        name: 't',\n        code: 'KeyT',\n        keyCode: 84,\n    };\n    /**\n     * Metadata for key `y`.\n     *\n     */\n    static y: IKey = {\n        name: 'y',\n        code: 'KeyY',\n        keyCode: 89,\n    };\n    /**\n     * Metadata for key `u`.\n     *\n     */\n    static u: IKey = {\n        name: 'u',\n        code: 'KeyU',\n        keyCode: 85,\n    };\n    /**\n     * Metadata for key `i`.\n     *\n     */\n    static i: IKey = {\n        name: 'i',\n        code: 'KeyI',\n        keyCode: 73,\n    };\n    /**\n     * Metadata for key `o`.\n     *\n     */\n    static o: IKey = {\n        name: 'o',\n        code: 'KeyO',\n        keyCode: 79,\n    };\n    /**\n     * Metadata for key `p`.\n     *\n     */\n    static p: IKey = {\n        name: 'p',\n        code: 'KeyP',\n        keyCode: 80,\n    };\n    /**\n     * Metadata for key `a`.\n     *\n     */\n    static a: IKey = {\n        name: 'a',\n        code: 'KeyA',\n        keyCode: 65,\n    };\n    /**\n     * Metadata for key `s`.\n     *\n     */\n    static s: IKey = {\n        name: 's',\n        code: 'KeyS',\n        keyCode: 83,\n    };\n    /**\n     * Metadata for key `d`.\n     *\n     */\n    static d: IKey = {\n        name: 'd',\n        code: 'KeyD',\n        keyCode: 68,\n    };\n    /**\n     * Metadata for key `f`.\n     *\n     */\n    static f: IKey = {\n        name: 'f',\n        code: 'KeyF',\n        keyCode: 70,\n    };\n    /**\n     * Metadata for key `g`.\n     *\n     */\n    static g: IKey = {\n        name: 'g',\n        code: 'KeyG',\n        keyCode: 71,\n    };\n    /**\n     * Metadata for key `h`.\n     *\n     */\n    static h: IKey = {\n        name: 'h',\n        code: 'KeyH',\n        keyCode: 72,\n    };\n    /**\n     * Metadata for key `j`.\n     *\n     */\n    static j: IKey = {\n        name: 'j',\n        code: 'KeyJ',\n        keyCode: 74,\n    };\n    /**\n     * Metadata for key `k`.\n     *\n     */\n    static k: IKey = {\n        name: 'k',\n        code: 'KeyK',\n        keyCode: 75,\n    };\n    /**\n     * Metadata for key `l`.\n     *\n     */\n    static l: IKey = {\n        name: 'l',\n        code: 'KeyL',\n        keyCode: 76,\n    };\n    /**\n     * Metadata for key `z`.\n     *\n     */\n    static z: IKey = {\n        name: 'z',\n        code: 'KeyZ',\n        keyCode: 90,\n    };\n    /**\n     * Metadata for key `x`.\n     *\n     */\n    static x: IKey = {\n        name: 'x',\n        code: 'KeyX',\n        keyCode: 88,\n    };\n    /**\n     * Metadata for key `c`.\n     *\n     */\n    static c: IKey = {\n        name: 'c',\n        code: 'KeyC',\n        keyCode: 67,\n    };\n    /**\n     * Metadata for key `v`.\n     *\n     */\n    static v: IKey = {\n        name: 'v',\n        code: 'KeyV',\n        keyCode: 86,\n    };\n    /**\n     * Metadata for key `b`.\n     *\n     */\n    static b: IKey = {\n        name: 'b',\n        code: 'KeyB',\n        keyCode: 66,\n    };\n    /**\n     * Metadata for key `n`.\n     *\n     */\n    static n: IKey = {\n        name: 'n',\n        code: 'KeyN',\n        keyCode: 78,\n    };\n    /**\n     * Metadata for key `m`.\n     *\n     */\n    static m: IKey = {\n        name: 'm',\n        code: 'KeyM',\n        keyCode: 77,\n    };\n    /**\n     * Metadata for key `Q`.\n     *\n     */\n    static Q: IKey = {\n        name: 'Q',\n        code: 'KeyQ',\n        keyCode: 81,\n    };\n    /**\n     * Metadata for key `W`.\n     *\n     */\n    static W: IKey = {\n        name: 'W',\n        code: 'KeyW',\n        keyCode: 87,\n    };\n    /**\n     * Metadata for key `E`.\n     *\n     */\n    static E: IKey = {\n        name: 'E',\n        code: 'KeyE',\n        keyCode: 69,\n    };\n    /**\n     * Metadata for key `R`.\n     *\n     */\n    static R: IKey = {\n        name: 'R',\n        code: 'KeyR',\n        keyCode: 82,\n    };\n    /**\n     * Metadata for key `T`.\n     *\n     */\n    static T: IKey = {\n        name: 'T',\n        code: 'KeyT',\n        keyCode: 84,\n    };\n    /**\n     * Metadata for key `Y`.\n     *\n     */\n    static Y: IKey = {\n        name: 'Y',\n        code: 'KeyY',\n        keyCode: 89,\n    };\n    /**\n     * Metadata for key `U`.\n     *\n     */\n    static U: IKey = {\n        name: 'U',\n        code: 'KeyU',\n        keyCode: 85,\n    };\n    /**\n     * Metadata for key `I`.\n     *\n     */\n    static I: IKey = {\n        name: 'I',\n        code: 'KeyI',\n        keyCode: 73,\n    };\n    /**\n     * Metadata for key `O`.\n     *\n     */\n    static O: IKey = {\n        name: 'O',\n        code: 'KeyO',\n        keyCode: 79,\n    };\n    /**\n     * Metadata for key `P`.\n     *\n     */\n    static P: IKey = {\n        name: 'P',\n        code: 'KeyP',\n        keyCode: 80,\n    };\n    /**\n     * Metadata for key `A`.\n     *\n     */\n    static A: IKey = {\n        name: 'A',\n        code: 'KeyA',\n        keyCode: 65,\n    };\n    /**\n     * Metadata for key `S`.\n     *\n     */\n    static S: IKey = {\n        name: 'S',\n        code: 'KeyS',\n        keyCode: 83,\n    };\n    /**\n     * Metadata for key `D`.\n     *\n     */\n    static D: IKey = {\n        name: 'D',\n        code: 'KeyD',\n        keyCode: 68,\n    };\n    /**\n     * Metadata for key `F`.\n     *\n     */\n    static F: IKey = {\n        name: 'F',\n        code: 'KeyF',\n        keyCode: 70,\n    };\n    /**\n     * Metadata for key `G`.\n     *\n     */\n    static G: IKey = {\n        name: 'G',\n        code: 'KeyG',\n        keyCode: 71,\n    };\n    /**\n     * Metadata for key `H`.\n     *\n     */\n    static H: IKey = {\n        name: 'H',\n        code: 'KeyH',\n        keyCode: 72,\n    };\n    /**\n     * Metadata for key `J`.\n     *\n     */\n    static J: IKey = {\n        name: 'J',\n        code: 'KeyJ',\n        keyCode: 74,\n    };\n    /**\n     * Metadata for key `K`.\n     *\n     */\n    static K: IKey = {\n        name: 'K',\n        code: 'KeyK',\n        keyCode: 75,\n    };\n    /**\n     * Metadata for key `L`.\n     *\n     */\n    static L: IKey = {\n        name: 'L',\n        code: 'KeyL',\n        keyCode: 76,\n    };\n    /**\n     * Metadata for key `Z`.\n     *\n     */\n    static Z: IKey = {\n        name: 'Z',\n        code: 'KeyZ',\n        keyCode: 90,\n    };\n    /**\n     * Metadata for key `X`.\n     *\n     */\n    static X: IKey = {\n        name: 'X',\n        code: 'KeyX',\n        keyCode: 88,\n    };\n    /**\n     * Metadata for key `C`.\n     *\n     */\n    static C: IKey = {\n        name: 'C',\n        code: 'KeyC',\n        keyCode: 67,\n    };\n    /**\n     * Metadata for key `V`.\n     *\n     */\n    static V: IKey = {\n        name: 'V',\n        code: 'KeyV',\n        keyCode: 86,\n    };\n    /**\n     * Metadata for key `B`.\n     *\n     */\n    static B: IKey = {\n        name: 'B',\n        code: 'KeyB',\n        keyCode: 66,\n    };\n    /**\n     * Metadata for key `N`.\n     *\n     */\n    static N: IKey = {\n        name: 'N',\n        code: 'KeyN',\n        keyCode: 78,\n    };\n    /**\n     * Metadata for key `M`.\n     *\n     */\n    static M: IKey = {\n        name: 'M',\n        code: 'KeyM',\n        keyCode: 77,\n    };\n    /**\n     * Metadata for key `Shift`.\n     *\n     */\n    static Shift: IKeyModifier = {\n        name: 'Shift',\n        code: 'Shift',\n        keyCode: 16,\n    };\n    /**\n     * Metadata for key `Control`.\n     *\n     */\n    static Control: IKeyModifier = {\n        name: 'Control',\n        code: 'Control',\n        keyCode: 17,\n    };\n    /**\n     * Metadata for key `Alt`.\n     *\n     */\n    static Alt: IKeyModifier = {\n        name: 'Alt',\n        code: 'Alt',\n        keyCode: 18,\n    };\n    /**\n     * Metadata for key `Enter`.\n     *\n     */\n    static Enter: IKey = {\n        name: 'Enter',\n        code: 'Enter',\n        keyCode: 13,\n    };\n    /**\n     * Metadata for key `ArrowLeft`.\n     *\n     */\n    static ArrowLeft: IKey = {\n        name: 'ArrowLeft',\n        code: 'ArrowLeft',\n        keyCode: 37,\n    };\n    /**\n     * Metadata for key `ArrowDown`.\n     *\n     */\n    static ArrowDown: IKey = {\n        name: 'ArrowDown',\n        code: 'ArrowDown',\n        keyCode: 40,\n    };\n    /**\n     * Metadata for key `ArrowRight`.\n     *\n     */\n    static ArrowRight: IKey = {\n        name: 'ArrowRight',\n        code: 'ArrowRight',\n        keyCode: 39,\n    };\n    /**\n     * Metadata for key `ArrowUp`.\n     *\n     */\n    static ArrowUp: IKey = {\n        name: 'ArrowUp',\n        code: 'ArrowUp',\n        keyCode: 38,\n    };\n    /**\n     * Metadata for key `Space`.\n     *\n     */\n    static Space: IKey = {\n        name: ' ',\n        code: 'Space',\n        keyCode: 32,\n    };\n    /**\n     * Metadata for key `Tab`.\n     *\n     */\n    static Tab: IKey = {\n        name: 'Tab',\n        code: 'Tab',\n        keyCode: 9,\n    };\n    /**\n     * Metadata for key `Escape`.\n     *\n     */\n    static Escape: IKey = {\n        name: 'Escape',\n        code: 'Escape',\n        keyCode: 27,\n    };\n    /**\n     * Metadata for key `Backspace`.\n     *\n     */\n    static Backspace: IKey = {\n        name: 'Backspace',\n        code: 'Backspace',\n        keyCode: 8,\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRegexLike.html":{"url":"interfaces/IRegexLike.html","title":"interface - IRegexLike","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRegexLike\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-password-indicator/src/ui-password-indicator.validator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            test\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        test\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        test:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { AbstractControl } from '@angular/forms';\n\nexport type IPasswordValidationFn = (value: string) => boolean;\nexport interface IRegexLike {\n    test: (value: string) => boolean;\n}\nexport type IPasswordRuleSet = Record;\nexport type IRuleValidationState = Record;\nexport const VALIDATION_RULE_NAME = 'complexity';\n\nconst resolveFn = (obj: IRegexLike | IPasswordValidationFn) => {\n    const isRegexLike = typeof obj === 'object' && !!obj.test;\n\n    if (isRegexLike) { return (obj as IRegexLike).test.bind(obj); }\n\n    if (typeof obj === 'function') { return obj; }\n\n    throw Error('The validation member must be a Function or a Regex!');\n};\n\nexport const complexityValidator = (rules: IPasswordRuleSet, required: boolean) =>\n    (control: AbstractControl) => {\n        const value: string = control.value;\n\n        if (\n            !required &&\n            (value == null || value === '')\n        ) { return null; }\n\n        const ruleKeys = Object.keys(rules);\n\n        const validityMap = ruleKeys\n            .reduce(\n                (ruleStateMap, ruleKey) => {\n                    const validator = rules[ruleKey];\n                    if (\n                        value == null ||\n                        !resolveFn(validator)(value)\n                    ) {\n                        ruleStateMap[ruleKey] = true;\n                    }\n\n                    return ruleStateMap;\n                },\n                {} as IRuleValidationState,\n            );\n\n        return !Object.keys(validityMap).length ?\n            null :\n            {\n                [VALIDATION_RULE_NAME]: validityMap,\n            };\n    };\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISecondFormatOptions.html":{"url":"interfaces/ISecondFormatOptions.html","title":"interface - ISecondFormatOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISecondFormatOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The date format options schema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            redraw$\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        redraw$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redraw$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Stream that triggers a re-render of the component.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import moment from 'moment';\nimport {\n    BehaviorSubject,\n    merge,\n    Observable,\n    of,\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    map,\n} from 'rxjs/operators';\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    InjectionToken,\n    Input,\n    Optional,\n} from '@angular/core';\n\n/**\n * The date format options schema.\n */\nexport interface ISecondFormatOptions {\n    /**\n     * Stream that triggers a re-render of the component.\n     *\n     */\n    redraw$: Observable;\n}\n\n/**\n * `ui-secondformat` injection token for the `options`.\n *\n */\nexport const UI_SECONDFORMAT_OPTIONS = new InjectionToken>('UiSecondFormat options.');\n\n/**\n * A directive that formats a given number of `seconds` into a human readable format.\n *\n * eg:\n * For input `61` -> output `1 minute` with the tooltip PT1M1S.\n * Depends On:\n * - [moment](https://www.npmjs.com/package/moment)\n * - [moment-timezone](https://www.npmjs.com/package/moment-timezone)\n *\n * In order to reduce bundle sizes, we strongly recommend using the following webpack plugins:\n * - [moment-locales-webpack-plugin](https://www.npmjs.com/package/moment-locales-webpack-plugin)\n * - [moment-timezone-data-webpack-plugin](https://www.npmjs.com/package/moment-timezone-data-webpack-plugin)\n *\n * @export\n */\n@Component({\n    selector: 'ui-secondformat',\n    template: `{{ text$ | async }}`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class UiSecondFormatDirective {\n    /**\n     * The number of `seconds` that need to be formatted.\n     *\n     */\n    @Input()\n    get seconds() { return this._seconds$.value; }\n    set seconds(seconds: number | null) { this._seconds$.next(seconds); }\n\n    /**\n     * @internal\n     */\n    tooltip$: Observable;\n\n    /**\n     * @internal\n     */\n    text$: Observable;\n\n    protected _text?: HTMLElement;\n\n    private _seconds$ = new BehaviorSubject(null);\n\n    /**\n     * @ignore\n     */\n    constructor(\n        @Inject(UI_SECONDFORMAT_OPTIONS)\n        @Optional()\n        options: ISecondFormatOptions,\n    ) {\n        options = options || {};\n        const redraw$ = options.redraw$ || of(null);\n\n        const seconds$ = merge(\n            redraw$,\n            this._seconds$.pipe(distinctUntilChanged()),\n        ).pipe(\n            map(() => this.seconds),\n            map(seconds => seconds != null ? moment.duration(seconds, 'seconds') : undefined),\n        );\n\n        this.text$ = seconds$.pipe(\n            map(seconds => seconds?.humanize() ?? ''),\n        );\n\n        this.tooltip$ = seconds$.pipe(\n            map(seconds => seconds?.toISOString()),\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectionDiff.html":{"url":"interfaces/ISelectionDiff.html","title":"interface - ISelectionDiff","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISelectionDiff\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/models/selectionDiff.ts\n        \n\n\n            \n                Description\n            \n            \n                Selection difference schema.\nUsed for selection snapshot comparisons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            add\n                                        \n                                \n                                \n                                        \n                                            remove\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        add\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        add:     Partial[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The added list.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remove:     Partial[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The removed list.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISelectionDiff {\n    /**\n     * The added list.\n     *\n     */\n    add: Partial[];\n    /**\n     * The removed list.\n     *\n     */\n    remove: Partial[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarAlert.html":{"url":"interfaces/ISnackBarAlert.html","title":"interface - ISnackBarAlert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISnackBarAlert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actionMessage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closeAriaLabel\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extraCssClasses\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payload\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional action button message,\nwill emit dismissWithAction on click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeAriaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeAriaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Aria label for screen-readers on close button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    How long to remain on the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraCssClasses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraCssClasses:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     Extra CSS classes to be added to the snack bar container.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Material icon to be used in snackbar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     string | TemplateRef | ComponentType<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | TemplateRef | ComponentType<>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Alert message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional information to pass to components. Can be used by injecting UI_MAT_SNACK_BAR_PAYLOAD.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    ComponentPortal,\n    ComponentType,\n} from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector,\n    Optional,\n    TemplateRef,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    MatSnackBar,\n    MatSnackBarConfig,\n    MatSnackBarRef,\n    MAT_SNACK_BAR_DATA,\n    MAT_SNACK_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/snack-bar';\n\nimport { UiSnackbarIntl } from './ui-snackbar.intl';\n\ninterface ISnackBarAlert {\n    /**\n     * Alert message\n     */\n    message: string | TemplateRef | ComponentType;\n    /**\n     * Optional action button message,\n     * will emit `dismissWithAction` on click\n     */\n    actionMessage?: string;\n    /**\n     * How long to remain on the screen\n     */\n    duration: number;\n    /**\n     * Material icon to be used in snackbar\n     */\n    icon?: string;\n    /**\n     * Aria label for screen-readers on close button\n     */\n    closeAriaLabel?: string;\n    /**\n     * Additional information to pass to components. Can be used by injecting `UI_MAT_SNACK_BAR_PAYLOAD`.\n     */\n    payload?: unknown;\n    /**\n     *  Extra CSS classes to be added to the snack bar container.\n     */\n    extraCssClasses?: string[];\n}\n\n@Component({\n    templateUrl: './ui-snackbar.component.html',\n    styleUrls: [\n        './ui-snackbar.component.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiSnackBarComponent {\n    private _componentPortal?: ComponentPortal;\n\n    get componentPortal() {\n        if (typeof this.data.message !== 'function') {\n            throw new Error('`componentPortal` getter cannot be used when `data.message` is not a component type');\n        }\n\n        this._componentPortal ??= new ComponentPortal(\n            this.data.message,\n            null,\n            Injector.create({\n                providers: [\n                    {\n                        provide: UI_MAT_SNACK_BAR_PAYLOAD,\n                        useValue: this.data.payload,\n                    },\n                ],\n                parent: this._injector,\n\n            }),\n        );\n\n        return this._componentPortal;\n    }\n\n    constructor(\n        @Inject(MAT_SNACK_BAR_DATA)\n        public data: ISnackBarAlert,\n        public snackBarRef: MatSnackBarRef,\n        private _injector: Injector,\n    ) { }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isPropertyString(property: unknown): property is string {\n        return typeof property === 'string';\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isTemplateRef(property: unknown): property is TemplateRef {\n        return property instanceof TemplateRef;\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isComponentType(property: unknown): property is ComponentType {\n        return typeof property === 'function';\n    }\n}\n\nexport enum SnackBarType {\n    Info = 'info',\n    Error = 'error',\n    Warning = 'warning',\n    Success = 'success',\n    None = 'none',\n}\n\nexport const ICON_MAP: Map = new Map([\n    [SnackBarType.Info, 'info'],\n    [SnackBarType.Success, 'check_circle'],\n    [SnackBarType.Warning, 'warning'],\n    [SnackBarType.Error, 'error'],\n]);\nexport type SnackbarAction = (\n    message: string | TemplateRef | ComponentType,\n    config?: {\n        actionMessage?: string;\n        duration?: number;\n        payload?: unknown;\n        extraCssClasses?: string[];\n    },\n) => MatSnackBarRef;\n\nexport class UiMatSnackBarConfig {\n    restrictHtml = false;\n}\n\nexport const UI_MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('UiMatSnackBarConfig');\nexport const UI_MAT_SNACK_BAR_PAYLOAD = new InjectionToken('UiSnackBarService Payload');\n\n/**\n * Snackbar config options\n */\ninterface ISnackBarOptions extends Partial> {\n    /**\n     * The type of the alert (info, success, warning or error)\n     */\n    type?: SnackBarType;\n}\n\nexport const panelClass = (type: SnackBarType) =>\n    `ui-snackbar-${type}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiSnackBarService {\n\n    /**\n     * Display an info snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    info: SnackbarAction;\n    /**\n     * Display an error snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    error: SnackbarAction;\n    /**\n     * Display an success snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    success: SnackbarAction;\n    /**\n     * Display an warning snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    warning: SnackbarAction;\n    private _ref?: MatSnackBarRef;\n\n    constructor(\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        private _options: MatSnackBarConfig,\n        @Optional()\n        private readonly _snackIntl: UiSnackbarIntl,\n        @Inject(UI_MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        @Optional()\n        private _additionalOptions?: UiMatSnackBarConfig,\n    ) {\n        this._snackIntl = this._snackIntl ||\n            new UiSnackbarIntl();\n\n        this.info = this._alertFactory(SnackBarType.Info);\n        this.error = this._alertFactory(SnackBarType.Error);\n        this.success = this._alertFactory(SnackBarType.Success);\n        this.warning = this._alertFactory(SnackBarType.Warning);\n    }\n\n    /**\n     * Display a snackbar (customizable)\n     *\n     * @param message The message to be displayed\n     * @param options Customize default options: snackbar type, icon, display duration, and action message\n     */\n    show = (\n        message: string | TemplateRef | ComponentType,\n        { type, duration, icon, actionMessage, payload, extraCssClasses }: ISnackBarOptions = {},\n    ) =>\n        this._alert(type ?? SnackBarType.None, {\n            message,\n            icon: icon ?? ICON_MAP.get(type!),\n            duration: duration || duration === 0 ? duration : this._options.duration!,\n            actionMessage,\n            payload,\n            extraCssClasses,\n        });\n\n    /**\n     * Dismiss the displayed snackbar\n     */\n    clear() {\n        if (!this._ref) { return; }\n\n        this._ref.dismiss();\n    }\n\n    private _alertFactory = (type: SnackBarType) =>\n        (\n            message: string | TemplateRef | ComponentType,\n            config?: { actionMessage?: string; duration?: number; payload?: unknown; extraCssClasses?: string[] }) =>\n            this._alert(type, {\n                message,\n                actionMessage: config?.actionMessage,\n                icon: ICON_MAP.get(type),\n                duration: config?.duration || config?.duration === 0\n                    ? config.duration\n                    : this._options.duration!,\n                payload: config?.payload,\n                extraCssClasses: config?.extraCssClasses,\n            });\n\n    private _alert(type: SnackBarType, options: ISnackBarAlert) {\n        if (\n            this._additionalOptions?.restrictHtml &&\n            typeof options.message === 'string'\n        ) {\n            const span = document.createElement('span');\n            span.innerText = options.message;\n            options.message = span.innerHTML;\n            span.remove();\n        }\n\n        const extraPanelClasses = options.extraCssClasses ?? [];\n        this._ref = this._snackBar.openFromComponent(UiSnackBarComponent, {\n            data: {\n                closeAriaLabel: this._snackIntl.closeSnackbarShortcut,\n                ...options,\n            },\n            duration: options.duration,\n            panelClass: [panelClass(type), ...extraPanelClasses],\n        });\n\n        return this._ref;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarOptions.html":{"url":"interfaces/ISnackBarOptions.html","title":"interface - ISnackBarOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISnackBarOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Snackbar config options\n\n            \n\n            \n                Extends\n            \n            \n                    Partial\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SnackBarType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnackBarType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the alert (info, success, warning or error)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    ComponentPortal,\n    ComponentType,\n} from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector,\n    Optional,\n    TemplateRef,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    MatSnackBar,\n    MatSnackBarConfig,\n    MatSnackBarRef,\n    MAT_SNACK_BAR_DATA,\n    MAT_SNACK_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/snack-bar';\n\nimport { UiSnackbarIntl } from './ui-snackbar.intl';\n\ninterface ISnackBarAlert {\n    /**\n     * Alert message\n     */\n    message: string | TemplateRef | ComponentType;\n    /**\n     * Optional action button message,\n     * will emit `dismissWithAction` on click\n     */\n    actionMessage?: string;\n    /**\n     * How long to remain on the screen\n     */\n    duration: number;\n    /**\n     * Material icon to be used in snackbar\n     */\n    icon?: string;\n    /**\n     * Aria label for screen-readers on close button\n     */\n    closeAriaLabel?: string;\n    /**\n     * Additional information to pass to components. Can be used by injecting `UI_MAT_SNACK_BAR_PAYLOAD`.\n     */\n    payload?: unknown;\n    /**\n     *  Extra CSS classes to be added to the snack bar container.\n     */\n    extraCssClasses?: string[];\n}\n\n@Component({\n    templateUrl: './ui-snackbar.component.html',\n    styleUrls: [\n        './ui-snackbar.component.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiSnackBarComponent {\n    private _componentPortal?: ComponentPortal;\n\n    get componentPortal() {\n        if (typeof this.data.message !== 'function') {\n            throw new Error('`componentPortal` getter cannot be used when `data.message` is not a component type');\n        }\n\n        this._componentPortal ??= new ComponentPortal(\n            this.data.message,\n            null,\n            Injector.create({\n                providers: [\n                    {\n                        provide: UI_MAT_SNACK_BAR_PAYLOAD,\n                        useValue: this.data.payload,\n                    },\n                ],\n                parent: this._injector,\n\n            }),\n        );\n\n        return this._componentPortal;\n    }\n\n    constructor(\n        @Inject(MAT_SNACK_BAR_DATA)\n        public data: ISnackBarAlert,\n        public snackBarRef: MatSnackBarRef,\n        private _injector: Injector,\n    ) { }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isPropertyString(property: unknown): property is string {\n        return typeof property === 'string';\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isTemplateRef(property: unknown): property is TemplateRef {\n        return property instanceof TemplateRef;\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isComponentType(property: unknown): property is ComponentType {\n        return typeof property === 'function';\n    }\n}\n\nexport enum SnackBarType {\n    Info = 'info',\n    Error = 'error',\n    Warning = 'warning',\n    Success = 'success',\n    None = 'none',\n}\n\nexport const ICON_MAP: Map = new Map([\n    [SnackBarType.Info, 'info'],\n    [SnackBarType.Success, 'check_circle'],\n    [SnackBarType.Warning, 'warning'],\n    [SnackBarType.Error, 'error'],\n]);\nexport type SnackbarAction = (\n    message: string | TemplateRef | ComponentType,\n    config?: {\n        actionMessage?: string;\n        duration?: number;\n        payload?: unknown;\n        extraCssClasses?: string[];\n    },\n) => MatSnackBarRef;\n\nexport class UiMatSnackBarConfig {\n    restrictHtml = false;\n}\n\nexport const UI_MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('UiMatSnackBarConfig');\nexport const UI_MAT_SNACK_BAR_PAYLOAD = new InjectionToken('UiSnackBarService Payload');\n\n/**\n * Snackbar config options\n */\ninterface ISnackBarOptions extends Partial> {\n    /**\n     * The type of the alert (info, success, warning or error)\n     */\n    type?: SnackBarType;\n}\n\nexport const panelClass = (type: SnackBarType) =>\n    `ui-snackbar-${type}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiSnackBarService {\n\n    /**\n     * Display an info snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    info: SnackbarAction;\n    /**\n     * Display an error snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    error: SnackbarAction;\n    /**\n     * Display an success snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    success: SnackbarAction;\n    /**\n     * Display an warning snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    warning: SnackbarAction;\n    private _ref?: MatSnackBarRef;\n\n    constructor(\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        private _options: MatSnackBarConfig,\n        @Optional()\n        private readonly _snackIntl: UiSnackbarIntl,\n        @Inject(UI_MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        @Optional()\n        private _additionalOptions?: UiMatSnackBarConfig,\n    ) {\n        this._snackIntl = this._snackIntl ||\n            new UiSnackbarIntl();\n\n        this.info = this._alertFactory(SnackBarType.Info);\n        this.error = this._alertFactory(SnackBarType.Error);\n        this.success = this._alertFactory(SnackBarType.Success);\n        this.warning = this._alertFactory(SnackBarType.Warning);\n    }\n\n    /**\n     * Display a snackbar (customizable)\n     *\n     * @param message The message to be displayed\n     * @param options Customize default options: snackbar type, icon, display duration, and action message\n     */\n    show = (\n        message: string | TemplateRef | ComponentType,\n        { type, duration, icon, actionMessage, payload, extraCssClasses }: ISnackBarOptions = {},\n    ) =>\n        this._alert(type ?? SnackBarType.None, {\n            message,\n            icon: icon ?? ICON_MAP.get(type!),\n            duration: duration || duration === 0 ? duration : this._options.duration!,\n            actionMessage,\n            payload,\n            extraCssClasses,\n        });\n\n    /**\n     * Dismiss the displayed snackbar\n     */\n    clear() {\n        if (!this._ref) { return; }\n\n        this._ref.dismiss();\n    }\n\n    private _alertFactory = (type: SnackBarType) =>\n        (\n            message: string | TemplateRef | ComponentType,\n            config?: { actionMessage?: string; duration?: number; payload?: unknown; extraCssClasses?: string[] }) =>\n            this._alert(type, {\n                message,\n                actionMessage: config?.actionMessage,\n                icon: ICON_MAP.get(type),\n                duration: config?.duration || config?.duration === 0\n                    ? config.duration\n                    : this._options.duration!,\n                payload: config?.payload,\n                extraCssClasses: config?.extraCssClasses,\n            });\n\n    private _alert(type: SnackBarType, options: ISnackBarAlert) {\n        if (\n            this._additionalOptions?.restrictHtml &&\n            typeof options.message === 'string'\n        ) {\n            const span = document.createElement('span');\n            span.innerText = options.message;\n            options.message = span.innerHTML;\n            span.remove();\n        }\n\n        const extraPanelClasses = options.extraCssClasses ?? [];\n        this._ref = this._snackBar.openFromComponent(UiSnackBarComponent, {\n            data: {\n                closeAriaLabel: this._snackIntl.closeSnackbarShortcut,\n                ...options,\n            },\n            duration: options.duration,\n            panelClass: [panelClass(type), ...extraPanelClasses],\n        });\n\n        return this._ref;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISortModel.html":{"url":"interfaces/ISortModel.html","title":"interface - ISortModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISortModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/models/sortModel.ts\n        \n\n\n            \n                Description\n            \n            \n                Sort model schemal\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     SortDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SortDirection\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sort direction.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:      | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target sort field.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sorted column title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sort event as a result of direct user intent to sort by a column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\n\n/**\n * Sort model schemal\n *\n * @export\n */\nexport interface ISortModel {\n    /**\n     * The sort direction.\n     *\n     */\n    direction: SortDirection;\n    /**\n     * The target sort field.\n     *\n     */\n    field: keyof T | string;\n    /**\n     * The sorted column title.\n     *\n     */\n    title: string;\n    /**\n     * Sort event as a result of direct user intent to sort by a column.\n     *\n     */\n    userEvent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISuggestValue.html":{"url":"interfaces/ISuggestValue.html","title":"interface - ISuggestValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISuggestValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-suggest/src/models/suggestValue.ts\n        \n\n\n            \n                Description\n            \n            \n                UiSuggest item schema.\n\n            \n\n            \n                Extends\n            \n            \n                        VirtualScrollItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expandable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag that marks if item is disabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expandable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag that marks if item is expandable.\nWill be ignored if ui-suggest doesn't have drillDown and searchable.\nOn selection will trigger a new searchSource call, value will NOT updated yet.\nThe string input will be applied as ${item.text}:\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon that will be displayed to the left of the item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier associated to the entry.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text associated to the entry.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    VirtualScrollItem,\n    VirtualScrollItemStatus,\n} from '@uipath/angular/directives/ui-virtual-scroll-range-loader';\n\n/**\n * UiSuggest item schema.\n *\n * @export\n */\nexport interface ISuggestValue extends VirtualScrollItem {\n    /**\n     * Unique identifier associated to the entry.\n     *\n     */\n    id: number | string;\n    /**\n     * Text associated to the entry.\n     *\n     */\n    text: string;\n    /**\n     * Marks the current item state\n     *\n     * @internal\n     * @ignore\n     */\n    loading?: VirtualScrollItemStatus;\n    /**\n     * Flag that marks custom items.\n     *\n     * @internal\n     * @ignore\n     */\n    isCustom?: boolean;\n    /**\n     * Flag that marks if item is expandable.\n     * Will be ignored if ui-suggest doesn't have drillDown and searchable.\n     * On selection will trigger a new searchSource call, value will NOT updated yet.\n     * The string input will be applied as `${item.text}:`\n     */\n    expandable?: boolean;\n    /**\n     * Flag that marks if item is disabled.\n     */\n     disabled?: boolean;\n    /**\n     * Optional icon that will be displayed to the left of the item.\n     *\n     */\n    icon?: {\n        iconOnly?: boolean;\n        svgIcon?: string;\n        matIcon?: string;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISuggestValueData.html":{"url":"interfaces/ISuggestValueData.html","title":"interface - ISuggestValueData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISuggestValueData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-suggest/src/models/suggestValueData.ts\n        \n\n\n            \n                Description\n            \n            \n                UiSuggest item with data schema.\n\n            \n\n            \n                Extends\n            \n            \n                        ISuggestValue\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Data associated to the entry item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ISuggestValue } from './suggestValue';\n\n/**\n * UiSuggest item with data schema.\n *\n * @export\n */\nexport interface ISuggestValueData extends ISuggestValue {\n    /**\n     * Data associated to the entry item.\n     *\n     */\n    data?: T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISuggestValues.html":{"url":"interfaces/ISuggestValues.html","title":"interface - ISuggestValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISuggestValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-suggest/src/models/suggestValues.ts\n        \n\n\n            \n                Description\n            \n            \n                Fetch value schema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     ISuggestValueData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ISuggestValueData[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The response data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The total available item count. (used to determine chunks for lazy-loading)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ISuggestValueData } from './suggestValueData';\n\n/**\n * Fetch value schema.\n *\n * @export\n */\nexport interface ISuggestValues {\n    /**\n     * The response data.\n     *\n     */\n    data?: ISuggestValueData[];\n    /**\n     * The total available item count. (used to determine chunks for lazy-loading)\n     *\n     */\n    total?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITreeNode.html":{"url":"interfaces/ITreeNode.html","title":"interface - ITreeNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITreeNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-tree-select/src/models/tree.models.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IBaseNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         ITreeNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITreeNode[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IBaseNode {\n    key: string;\n    name: string;\n    data?: T;\n}\n\nexport interface ITreeNode extends IBaseNode {\n    children?: ITreeNode[];\n}\n\nexport interface IFlatNodeObject extends IBaseNode {\n    hasChildren: boolean;\n    level: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IVisibleDiff.html":{"url":"interfaces/IVisibleDiff.html","title":"interface - IVisibleDiff","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IVisibleDiff\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/managers/visibility-manager.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import isEqual from 'lodash-es/isEqual';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n    filter,\n    map,\n} from 'rxjs/operators';\n\nimport { isDevMode } from '@angular/core';\n\nimport { UiGridColumnDirective } from '../body/ui-grid-column.directive';\nimport {\n    IGridDataEntry,\n    IVisibleModel,\n} from '../models';\n\ninterface IVisibleDiff {\n    property: string;\n    checked: boolean;\n}\n/**\n * @internal\n * @ignore\n */\nexport class VisibilityManger {\n    private _columns$ = new BehaviorSubject[]>([]);\n    private _initial?: IVisibleDiff[];\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    columns$ = this._columns$.pipe(\n        map(cols => cols.filter(c => !!c.visible)),\n    );\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    options$ = this._columns$.pipe(\n        map(cols => this._mapToRenderedOptions(cols)),\n    );\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    isDirty$ = this.options$.pipe(\n        filter(() => !!this._initial),\n        map(o => ([o.map(this._mapToVisibleDiff), this._initial])),\n        map(([current, initial]) => !isEqual(current, initial)),\n    );\n\n    set columns(columns: UiGridColumnDirective[]) {\n        if (!this._initial) {\n            this._initial = this._mapInitial(columns);\n        }\n\n        this._columns$.next(columns);\n    }\n\n    destroy() {\n        this._columns$.complete();\n    }\n\n    reset() {\n        if (!this._initial) { return; }\n\n        this.update(\n            this._initial\n                .filter(o => o.checked)\n                .map(o => o.property),\n        );\n    }\n\n    update(visibleColumnsByProps: (string | keyof T)[]) {\n        // changing the visible attribute will trigger a SimpleChange Emission\n        this._columns$.getValue()\n            .forEach(c => c.visible = visibleColumnsByProps.includes(c.property!));\n    }\n\n    private _mapColumnOption = (column: UiGridColumnDirective) => ({\n        property: column.property!,\n        label: column.title,\n        checked: column.visible,\n        disabled: column.disableToggle,\n    }) as IVisibleModel;\n\n    private _mapToVisibleDiff = ({ checked, property }: IVisibleModel) => ({\n        property,\n        checked,\n    } as IVisibleDiff);\n\n    private _mapInitial = (columns: UiGridColumnDirective[]) =>\n        this._mapOptions(columns).map(this._mapToVisibleDiff);\n\n    private _mapOptions = (columns: UiGridColumnDirective[]) =>\n        columns\n            .filter(c => c.property\n                // discard locked and hidden columns from toggle-able options\n                && (!c.disableToggle || c.visible),\n            )\n            .map(this._mapColumnOption);\n\n    private _mapToRenderedOptions = (columns: UiGridColumnDirective[]) => {\n        const columnOptions = this._mapOptions(columns);\n\n        const visibleOptions = columnOptions.filter(o => o.checked);\n\n        // ensure at least one column is locked as visible\n        if (visibleOptions.length && !visibleOptions.find(o => o.disabled)) {\n            const firstColumn = columns.find(c => c.property === visibleOptions[0].property)!;\n\n            if (isDevMode()) {\n                console.warn(`Did not find column with [disableToggle]=\"true\", locking '${firstColumn.property as string}' column`);\n            }\n\n            firstColumn.disableToggle = true;\n            visibleOptions[0].disabled = true;\n        }\n\n        return columnOptions;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IVisibleModel.html":{"url":"interfaces/IVisibleModel.html","title":"interface - IVisibleModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IVisibleModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/models/visibleModel.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:      | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IVisibleModel {\n    property: keyof T | string;\n    label: string;\n    checked: boolean;\n    disabled: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/KeyboardShortcutDirective.html":{"url":"directives/KeyboardShortcutDirective.html","title":"directive - KeyboardShortcutDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  KeyboardShortcutDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/keyboard-shortcut/src/keyboard-shortcut.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive that listens for specified key combination\nthen emits an event\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiKeyboardShortcut][shortcutKeys]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                searchShortcutKeydownHandler\n                            \n                            \n                                searchShortcutKeyupHandler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                shortcutKeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                shortcutPressed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                            \n                                document:keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        shortcutKeys\n                    \n                \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/keyboard-shortcut/src/keyboard-shortcut.directive.ts:21\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        shortcutPressed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/keyboard-shortcut/src/keyboard-shortcut.directive.ts:24\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:keydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/keyboard-shortcut/src/keyboard-shortcut.directive.ts:29\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            document:keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/keyboard-shortcut/src/keyboard-shortcut.directive.ts:39\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        searchShortcutKeydownHandler\n                        \n                    \n                \n            \n            \n                \nsearchShortcutKeydownHandler(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/angular/directives/keyboard-shortcut/src/keyboard-shortcut.directive.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchShortcutKeyupHandler\n                        \n                    \n                \n            \n            \n                \nsearchShortcutKeyupHandler(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keyup', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/angular/directives/keyboard-shortcut/src/keyboard-shortcut.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    EventEmitter,\n    HostListener,\n    Input,\n    Output,\n} from '@angular/core';\n\n/**\n * Directive that listens for specified key combination\n * then emits an event\n *\n * @input: an array of key combinations, where a key combination is an array of strings\n */\n\n@Directive({\n    selector: '[uiKeyboardShortcut][shortcutKeys]',\n})\nexport class KeyboardShortcutDirective {\n    @Input()\n    shortcutKeys!: string[][];\n\n    @Output()\n    shortcutPressed = new EventEmitter();\n\n    private _pressedKeys: Record = {};\n\n    @HostListener('document:keydown', ['$event'])\n    searchShortcutKeydownHandler(event: KeyboardEvent) {\n        if (!this._keyInShortcut(event)) { return; }\n\n        this._pressedKeys[event.key] = true;\n        if (this.shortcutKeys.find(keyCombination => keyCombination.every(key => this._pressedKeys[key]))) {\n            this.shortcutPressed.emit();\n        }\n    }\n\n    @HostListener('document:keyup', ['$event'])\n    searchShortcutKeyupHandler(event: KeyboardEvent) {\n        if (!this._keyInShortcut(event)) { return; }\n        this._pressedKeys[event.key] = false;\n    }\n\n    private _keyInShortcut({ key }: KeyboardEvent) {\n        return this.shortcutKeys.find(keyCombination => !!keyCombination.find(k => k === key));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyboardShortcutModule.html":{"url":"modules/KeyboardShortcutModule.html","title":"module - KeyboardShortcutModule","body":"\n                   \n\n\n\n\n    Modules\n    KeyboardShortcutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_KeyboardShortcutModule\n\n\n\ncluster_KeyboardShortcutModule_exports\n\n\n\ncluster_KeyboardShortcutModule_declarations\n\n\n\n\nKeyboardShortcutDirective\n\nKeyboardShortcutDirective\n\n\n\nKeyboardShortcutModule\n\nKeyboardShortcutModule\n\nKeyboardShortcutModule -->\n\nKeyboardShortcutDirective->KeyboardShortcutModule\n\n\n\n\n\nKeyboardShortcutDirective \n\nKeyboardShortcutDirective \n\nKeyboardShortcutDirective  -->\n\nKeyboardShortcutModule->KeyboardShortcutDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/keyboard-shortcut/src/keyboard-shortcut.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            KeyboardShortcutDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeyboardShortcutDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { KeyboardShortcutDirective } from './keyboard-shortcut.directive';\n\n@NgModule({\n    declarations: [KeyboardShortcutDirective],\n    exports: [KeyboardShortcutDirective],\n})\nexport class KeyboardShortcutModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueuedAnnouncer.html":{"url":"injectables/QueuedAnnouncer.html","title":"injectable - QueuedAnnouncer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueuedAnnouncer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/a11y/src/queued-announcer/queued-announcer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enqueue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_liveAnnouncer: LiveAnnouncer)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/a11y/src/queued-announcer/queued-announcer.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _liveAnnouncer\n                                                  \n                                                        \n                                                                    LiveAnnouncer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        enqueue\n                        \n                    \n                \n            \n            \n                \nenqueue(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/a11y/src/queued-announcer/queued-announcer.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    firstValueFrom,\n    of,\n} from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class QueuedAnnouncer {\n    private _msgQueue: string[] = [];\n    private _isAnnouncing = false;\n\n    constructor(private _liveAnnouncer: LiveAnnouncer) { }\n\n    enqueue(msg: string) {\n        this._msgQueue.push(msg);\n\n        if (!this._isAnnouncing) {\n            this._isAnnouncing = true;\n            this._announceNext();\n        }\n    }\n\n    private _announceNext = () => {\n        if (!this._msgQueue.length) {\n            this._isAnnouncing = false;\n            return;\n        }\n\n        this._liveAnnouncer.announce(this._msgQueue.shift()!)\n            // announcements end up in an aria-live element\n            // a delay is needed before setting the next announcement so they are both picked up by the screen reader\n            .then(() => firstValueFrom(of(void 0).pipe(delay(50))))\n            .then(this._announceNext)\n            .catch(this._announceNext);\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeUtils.html":{"url":"classes/TreeUtils.html","title":"class - TreeUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-tree-select/src/utils/tree.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                treeFlattener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getIsNodeExpandable\n                            \n                            \n                                    Static\n                                getNodeByKey\n                            \n                            \n                                    Static\n                                getNodeChildren\n                            \n                            \n                                    Static\n                                getNodeLevel\n                            \n                            \n                                    Static\n                                nodeBackTransformer\n                            \n                            \n                                    Static\n                                nodeTransformer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        treeFlattener\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTreeFlattener(\n        this.nodeTransformer,\n        this.getNodeLevel,\n        this.getIsNodeExpandable,\n        this.getNodeChildren,\n    )\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-tree-select/src/utils/tree.utils.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getIsNodeExpandable\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIsNodeExpandable(undefined: IFlatNodeObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/utils/tree.utils.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IFlatNodeObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getNodeByKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeByKey(key: string, level: number, treeControl: FlatTreeControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/utils/tree.utils.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    treeControl\n                                    \n                                                FlatTreeControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getNodeChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeChildren(undefined: ITreeNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/utils/tree.utils.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ITreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ITreeNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getNodeLevel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeLevel(undefined: IFlatNodeObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/utils/tree.utils.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IFlatNodeObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        nodeBackTransformer\n                        \n                    \n                \n            \n            \n                \n                    \n                    nodeBackTransformer(node: IFlatNodeObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/utils/tree.utils.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ITreeNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        nodeTransformer\n                        \n                    \n                \n            \n            \n                \n                    \n                    nodeTransformer(node: ITreeNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/utils/tree.utils.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ITreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { key: any; name: any; data: any; level: number; hasChildren: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener } from '@angular/material/tree';\nimport {\n    IFlatNodeObject, ITreeNode,\n} from '../models/tree.models';\n\nexport class TreeUtils {\n    static treeFlattener = new MatTreeFlattener(\n        this.nodeTransformer,\n        this.getNodeLevel,\n        this.getIsNodeExpandable,\n        this.getNodeChildren,\n    );\n\n    static nodeTransformer(node: ITreeNode, level: number) {\n        return {\n            key: node.key,\n            name: node.name,\n            data: node.data,\n            level,\n            hasChildren: !!node.children,\n        };\n    }\n\n    static nodeBackTransformer(node: IFlatNodeObject): ITreeNode {\n        return {\n            key: node.key,\n            name: node.name,\n            data: node.data,\n        };\n    }\n\n    static getNodeLevel({ level }: IFlatNodeObject) {\n        return level;\n    }\n\n    static getIsNodeExpandable({ hasChildren }: IFlatNodeObject) {\n        return hasChildren;\n    }\n\n    static getNodeChildren({ children }: ITreeNode) {\n        return children;\n    }\n\n    static getNodeByKey(key: string, level: number, treeControl: FlatTreeControl) {\n        const node = treeControl.dataNodes.find(n => n.key === key);\n        if (!node || node.level !== level) {\n            throw new Error(`Node with key ${key} not found on level ${level} in the data array`);\n        }\n        return node;\n    }\n\n}\n\ntype TreeActionOptions = {\n    emitEvent: boolean;\n};\n\nexport const TREE_ACTION_DEFAULTS: TreeActionOptions = {\n    emitEvent: true,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiAutoAccessibleLabelDirective.html":{"url":"directives/UiAutoAccessibleLabelDirective.html","title":"directive - UiAutoAccessibleLabelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiAutoAccessibleLabelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/a11y/src/ui-auto-accessible-label/ui-auto-accessible-label.directive.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                matTooltip\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, tooltip?: MatTooltip)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/a11y/src/ui-auto-accessible-label/ui-auto-accessible-label.directive.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tooltip\n                                                  \n                                                        \n                                                                    MatTooltip\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        matTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/a11y/src/ui-auto-accessible-label/ui-auto-accessible-label.directive.ts:31\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    Optional,\n} from '@angular/core';\nimport { MatTooltip } from '@angular/material/tooltip';\n\nexport const DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE = 'disable-auto-accessible-label';\n\n/* eslint-disable max-len */\nexport const MAT_TOOLTIP_MISSING_WARNING = `\n[A11Y]: icon button doesn't have a MatTooltip.\n\nAn icon button should have a tooltip to clarify it's purpose. The tooltip's content is shown on mouse and keyboard hover and, for assistive technology users, it is used as the button's label.\nYou can disable this directive using the boolean ${DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE} attribute in case you need more control over the button's accessible label.\n`.trim();\n/* eslint-enable max-len */\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: ` [mat-fab]:not([${DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE}]),\n                [mat-mini-fab]:not([${DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE}]),\n                [mat-icon-button]:not([${DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE}]),\n                mat-icon[tabindex]:not([${DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE}])`,\n})\nexport class UiAutoAccessibleLabelDirective {\n    @HostBinding('attr.aria-label')\n    @Input()\n    matTooltip?: string;\n\n    constructor(\n        elementRef: ElementRef,\n        @Optional() tooltip?: MatTooltip,\n    ) {\n        if (!tooltip) {\n            console.warn(MAT_TOOLTIP_MISSING_WARNING, elementRef.nativeElement);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiAutoAccessibleLabelModule.html":{"url":"modules/UiAutoAccessibleLabelModule.html","title":"module - UiAutoAccessibleLabelModule","body":"\n                   \n\n\n\n\n    Modules\n    UiAutoAccessibleLabelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiAutoAccessibleLabelModule\n\n\n\ncluster_UiAutoAccessibleLabelModule_exports\n\n\n\ncluster_UiAutoAccessibleLabelModule_declarations\n\n\n\n\nUiAutoAccessibleLabelDirective\n\nUiAutoAccessibleLabelDirective\n\n\n\nUiAutoAccessibleLabelModule\n\nUiAutoAccessibleLabelModule\n\nUiAutoAccessibleLabelModule -->\n\nUiAutoAccessibleLabelDirective->UiAutoAccessibleLabelModule\n\n\n\n\n\nUiAutoAccessibleLabelDirective \n\nUiAutoAccessibleLabelDirective \n\nUiAutoAccessibleLabelDirective  -->\n\nUiAutoAccessibleLabelModule->UiAutoAccessibleLabelDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/a11y/src/ui-auto-accessible-label/ui-auto-accessible-label.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiAutoAccessibleLabelDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiAutoAccessibleLabelDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiAutoAccessibleLabelDirective } from './ui-auto-accessible-label.directive';\n\n@NgModule({\n    declarations: [\n        UiAutoAccessibleLabelDirective,\n    ],\n    exports: [\n        UiAutoAccessibleLabelDirective,\n    ],\n})\nexport class UiAutoAccessibleLabelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiAutofocusDirective.html":{"url":"directives/UiAutofocusDirective.html","title":"directive - UiAutofocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiAutofocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that autofocuses the decorated element OR the first focusable element inside the decorated element.\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiAutofocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enqueueFocus\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                refocus\n                            \n                            \n                                selectionLocation\n                            \n                            \n                                uiAutofocus\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    uiAutofocus\n                                \n                                \n                                    refocus\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        refocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts:47\n                            \n                        \n                \n                    \n                        Set to true if the element needs to be refocused.\neg: [refocus]=\"refocu$ | async\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectionLocation\n                    \n                \n                \n                    \n                        Type :     \"start\" | \"end\"\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts:58\n                            \n                        \n                \n                    \n                        Where the selection location should be after the element is focused.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uiAutofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts:37\n                            \n                        \n                \n                    \n                        Configure if the element should be focused.\nDefaults to: true\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        enqueueFocus\n                        \n                    \n                \n            \n            \n                \nenqueueFocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts:89\n                \n            \n\n\n            \n                \n                    Enqueues a focus event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focus\n                        \n                    \n                \n            \n            \n                \nfocus(element?: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts:116\n                \n            \n\n\n            \n                \n                    Focus the element.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts:64\n                        \n                    \n\n            \n                \n                    The decorated HTMLElement reference.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        uiAutofocus\n                    \n                \n\n\n                \n                    \n                        setuiAutofocus(condition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts:37\n                                \n                            \n                    \n                        \n                                Configure if the element should be focused.\nDefaults to: true\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        refocus\n                    \n                \n\n\n                \n                    \n                        setrefocus(condition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts:47\n                                \n                            \n                    \n                        \n                                Set to true if the element needs to be refocused.\neg: [refocus]=\"refocu$ | async\"\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { merge } from 'rxjs';\nimport {\n    delay,\n    take,\n} from 'rxjs/operators';\n\nimport { InteractivityChecker } from '@angular/cdk/a11y';\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone,\n    OnInit,\n} from '@angular/core';\n\n/**\n * @ignore\n */\nconst ELEMENT_NODE = 1;\n\n/**\n * A directive that autofocuses the decorated element OR the first focusable element inside the decorated element.\n *\n * @export\n */\n@Directive({\n    selector: '[uiAutofocus]',\n})\nexport class UiAutofocusDirective implements OnInit {\n    /**\n     * Configure if the element should be focused.\n     * Defaults to: `true`\n     *\n     */\n    @Input()\n    set uiAutofocus(condition: boolean) {\n        this._autofocus = condition;\n    }\n\n    /**\n     * Set to `true` if the element needs to be refocused.\n     * eg: `[refocus]=\"refocu$ | async\"`\n     *\n     */\n    @Input()\n    set refocus(condition: boolean) {\n        if (condition) {\n            this.enqueueFocus();\n        }\n    }\n\n    /**\n     * Where the selection location should be after the element is focused.\n     *\n     */\n    @Input()\n    selectionLocation: 'start' | 'end' = 'start';\n\n    /**\n     * The decorated `HTMLElement` reference.\n     *\n     */\n    element?: HTMLElement;\n\n    private _autofocus = true;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        private _el: ElementRef,\n        private _zone: NgZone,\n        private _cd: ChangeDetectorRef,\n        private _checker: InteractivityChecker,\n    ) { }\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        this.enqueueFocus();\n    }\n\n    /**\n     * Enqueues a focus event.\n     *\n     */\n    enqueueFocus() {\n        if (this._autofocus) {\n            this._zone.runOutsideAngular(() => {\n                merge(\n                    this._zone.onMicrotaskEmpty,\n                    // IE doesn't play nicely with task empty only\n                    this._zone.onStable,\n                )\n                    .pipe(\n                        take(1),\n                        /* PREVENTS FOCUS TRAPS */\n                        delay(0),\n                    )\n                    .subscribe(() => {\n                        if (!this.element) {\n                            this.element = this._getFocusableNode(this._el.nativeElement);\n                        }\n                        this.focus(this.element);\n                    });\n            });\n        }\n    }\n\n    /**\n     * Focus the `element`.\n     *\n     */\n    focus(element?: HTMLElement) {\n        if (!element) { return; }\n        element.focus();\n\n        if (this._el.nativeElement instanceof HTMLInputElement) {\n            const position = this.selectionLocation === 'start' ?\n                0 :\n                this._el.nativeElement.value.length;\n\n            this._el.nativeElement.setSelectionRange(\n                position,\n                position,\n            );\n        }\n\n        this._cd.detectChanges();\n    }\n\n    private _getFocusableNode(el: HTMLElement): HTMLElement | undefined {\n        if (this._checker.isFocusable(el)) {\n            return el;\n        }\n\n        const children = el.children || el.childNodes;\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiAutofocusModule.html":{"url":"modules/UiAutofocusModule.html","title":"module - UiAutofocusModule","body":"\n                   \n\n\n\n\n    Modules\n    UiAutofocusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiAutofocusModule\n\n\n\ncluster_UiAutofocusModule_exports\n\n\n\ncluster_UiAutofocusModule_declarations\n\n\n\n\nUiAutofocusDirective\n\nUiAutofocusDirective\n\n\n\nUiAutofocusModule\n\nUiAutofocusModule\n\nUiAutofocusModule -->\n\nUiAutofocusDirective->UiAutofocusModule\n\n\n\n\n\nUiAutofocusDirective \n\nUiAutofocusDirective \n\nUiAutofocusDirective  -->\n\nUiAutofocusModule->UiAutofocusDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-autofocus/src/ui-autofocus.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiAutofocusDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiAutofocusDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiAutofocusDirective } from './ui-autofocus.directive';\n\n@NgModule({\n    declarations: [UiAutofocusDirective],\n    exports: [UiAutofocusDirective],\n})\nexport class UiAutofocusModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiButtonProgressBarComponent.html":{"url":"components/UiButtonProgressBarComponent.html","title":"component - UiButtonProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiButtonProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/directives/ui-progress-button/src/internal/ui-button-progress-bar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-button-progress-bar\n            \n\n            \n                styleUrls\n                ./ui-button-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui-button-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bufferValue$\n                            \n                            \n                                color$\n                            \n                            \n                                loading$\n                            \n                            \n                                mode$\n                            \n                            \n                                value$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-progress-button/src/internal/ui-button-progress-bar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bufferValue$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-progress-button/src/internal/ui-button-progress-bar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('primary')\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-progress-button/src/internal/ui-button-progress-bar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-progress-button/src/internal/ui-button-progress-bar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('indeterminate')\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-progress-button/src/internal/ui-button-progress-bar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-progress-button/src/internal/ui-button-progress-bar.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    OnDestroy,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { MatProgressBar } from '@angular/material/progress-bar';\n\n@Component({\n    selector: 'ui-button-progress-bar',\n    templateUrl: './ui-button-progress-bar.component.html',\n    styleUrls: ['./ui-button-progress-bar.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class UiButtonProgressBarComponent implements OnDestroy {\n    loading$ = new BehaviorSubject(false);\n\n    mode$ = new BehaviorSubject('indeterminate');\n    value$ = new BehaviorSubject(0);\n    bufferValue$ = new BehaviorSubject(0);\n    color$ = new BehaviorSubject('primary');\n\n    ngOnDestroy() {\n        this.loading$.complete();\n        this.mode$.complete();\n        this.value$.complete();\n        this.bufferValue$.complete();\n        this.color$.complete();\n    }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ui-button-progress-bar.component.scss\n                \n                ui-button-progress-bar {\n    display: block;\n    width: 100%;\n\n    .mat-progress-bar {\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n}\n\n.ui-button-progress {\n    overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiButtonProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiButtonProgressSpinnerComponent.html":{"url":"components/UiButtonProgressSpinnerComponent.html","title":"component - UiButtonProgressSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiButtonProgressSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/directives/ui-spinner-button/src/internal/ui-button-progress-spinner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-button-progress-spinner\n            \n\n            \n                styleUrls\n                ./ui-button-progress-spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui-button-progress-spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color$\n                            \n                            \n                                isRound$\n                            \n                            \n                                loading$\n                            \n                            \n                                mode$\n                            \n                            \n                                value$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-spinner-button/src/internal/ui-button-progress-spinner.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('primary')\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-spinner-button/src/internal/ui-button-progress-spinner.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRound$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-spinner-button/src/internal/ui-button-progress-spinner.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-spinner-button/src/internal/ui-button-progress-spinner.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('indeterminate')\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-spinner-button/src/internal/ui-button-progress-spinner.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-spinner-button/src/internal/ui-button-progress-spinner.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    OnDestroy,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\n\n@Component({\n    selector: 'ui-button-progress-spinner',\n    templateUrl: './ui-button-progress-spinner.component.html',\n    styleUrls: ['./ui-button-progress-spinner.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class UiButtonProgressSpinnerComponent implements OnDestroy {\n    isRound$ = new BehaviorSubject(false);\n    loading$ = new BehaviorSubject(false);\n\n    mode$ = new BehaviorSubject('indeterminate');\n    value$ = new BehaviorSubject(0);\n    color$ = new BehaviorSubject('primary');\n\n    ngOnDestroy() {\n        this.isRound$.complete();\n        this.loading$.complete();\n        this.mode$.complete();\n        this.value$.complete();\n        this.color$.complete();\n    }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ui-button-progress-spinner.component.scss\n                \n                $spinner-diameter: 22px;\n\n/* https://github.com/angular/material2/blob/master/src/lib/button/_button-base.scss */\n$ui-button-progress-default-transition: 200ms cubic-bezier(0.35, 0, 0.25, 1);\n$ui-button-progress-opacity-transition: opacity $ui-button-progress-default-transition;\n\nui-button-progress-spinner {\n    .mat-progress-spinner {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        &.ui-mat-progress-spinner-fab[style] {\n            width: 100% !important;\n            height: 100% !important;\n\n            svg[style] {\n                width: 100% !important;\n                height: 100% !important;\n            }\n        }\n\n        &:not(.ui-mat-progress-spinner-fab) {\n            top: calc(50% - #{$spinner-diameter / 2});\n            left: calc(50% - #{$spinner-diameter / 2});\n        }\n    }\n}\n\n.ui-spinner-button {\n    .mat-button-wrapper {\n        transition: $ui-button-progress-opacity-transition;\n    }\n}\n\n.ui-spinner-button-loading {\n    .mat-button-wrapper {\n        opacity: 0;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiButtonProgressSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiClickOutsideDirective.html":{"url":"directives/UiClickOutsideDirective.html","title":"directive - UiClickOutsideDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiClickOutsideDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-click-outside/src/ui-click-outside.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that emits when a click event occurs outside of the decorated element.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiClickOutside]\n                    \n\n                \n            \n        \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        uiClickOutside\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-click-outside/src/ui-click-outside.directive.ts:95\n                            \n                        \n                \n                    \n                        Emits the original MouseEvent when the click occurs outside of the decorated element.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import type { Observable } from 'rxjs';\nimport {\n    fromEvent,\n    Subject,\n} from 'rxjs';\nimport {\n    filter,\n    share,\n    takeUntil,\n    throttleTime,\n} from 'rxjs/operators';\n\nimport { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    ElementRef,\n    Inject,\n    Injectable,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\n/**\n *   Info:\n *\n *   On average a user trying hard enough can reach ~7 click/s\n *   We'll reduce the click event count to half\n *\n *   Benefits:\n *\n *   - drastically reduce misclick emissions\n *\n * @ignore\n */\nconst MAX_CLICKS_PER_SECOND = 3;\n\n/**\n * A service that shares the `global` events required for the `uiClickOutside` directive.\n * By sharing the event stream, we end up adding only one event listener rather than {N}.\n *\n * @export\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiClickOutsideService implements OnDestroy {\n    /**\n     * The `global` event handler for `click` events.\n     *\n     */\n    // eslint-disable-next-line rxjs/finnish\n    source: Observable;\n    private _destroyed$ = new Subject();\n\n    /**\n     * @ignore\n     */\n    constructor(\n        @Inject(DOCUMENT)\n        document: any,\n    ) {\n        this.source = fromEvent((document as Document).body, 'click', {\n            capture: true,\n        })\n            .pipe(\n                throttleTime(1000 / MAX_CLICKS_PER_SECOND),\n                takeUntil(this._destroyed$),\n                share(),\n            );\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n    }\n}\n\n/**\n * A directive that emits when a click event occurs outside of the decorated element.\n *\n * @export\n */\n@Directive({\n    selector: '[uiClickOutside]',\n})\nexport class UiClickOutsideDirective {\n    /**\n     * Emits the original `MouseEvent` when the click occurs outside of the decorated element.\n     *\n     */\n    @Output()\n    // eslint-disable-next-line rxjs/finnish\n    uiClickOutside: Observable;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        ref: ElementRef,\n        private _clickService: UiClickOutsideService,\n    ) {\n        const element: HTMLElement = ref.nativeElement;\n\n        this.uiClickOutside = this._clickService\n            .source\n            .pipe(\n                filter(ev =>\n                    !element.contains((ev.target as Element)),\n                ),\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiClickOutsideModule.html":{"url":"modules/UiClickOutsideModule.html","title":"module - UiClickOutsideModule","body":"\n                   \n\n\n\n\n    Modules\n    UiClickOutsideModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiClickOutsideModule\n\n\n\ncluster_UiClickOutsideModule_exports\n\n\n\ncluster_UiClickOutsideModule_declarations\n\n\n\n\nUiClickOutsideDirective\n\nUiClickOutsideDirective\n\n\n\nUiClickOutsideModule\n\nUiClickOutsideModule\n\nUiClickOutsideModule -->\n\nUiClickOutsideDirective->UiClickOutsideModule\n\n\n\n\n\nUiClickOutsideDirective \n\nUiClickOutsideDirective \n\nUiClickOutsideDirective  -->\n\nUiClickOutsideModule->UiClickOutsideDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-click-outside/src/ui-click-outside.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiClickOutsideDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiClickOutsideDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiClickOutsideDirective } from './ui-click-outside.directive';\n\n@NgModule({\n    declarations: [UiClickOutsideDirective],\n    exports: [UiClickOutsideDirective],\n})\nexport class UiClickOutsideModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiClickOutsideService.html":{"url":"injectables/UiClickOutsideService.html","title":"injectable - UiClickOutsideService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiClickOutsideService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-click-outside/src/ui-click-outside.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A service that shares the global events required for the uiClickOutside directive.\nBy sharing the event stream, we end up adding only one event listener rather than {N}.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                source\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-click-outside/src/ui-click-outside.directive.ts:52\n                        \n                    \n\n            \n                \n                    The global event handler for click events.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import type { Observable } from 'rxjs';\nimport {\n    fromEvent,\n    Subject,\n} from 'rxjs';\nimport {\n    filter,\n    share,\n    takeUntil,\n    throttleTime,\n} from 'rxjs/operators';\n\nimport { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    ElementRef,\n    Inject,\n    Injectable,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\n/**\n *   Info:\n *\n *   On average a user trying hard enough can reach ~7 click/s\n *   We'll reduce the click event count to half\n *\n *   Benefits:\n *\n *   - drastically reduce misclick emissions\n *\n * @ignore\n */\nconst MAX_CLICKS_PER_SECOND = 3;\n\n/**\n * A service that shares the `global` events required for the `uiClickOutside` directive.\n * By sharing the event stream, we end up adding only one event listener rather than {N}.\n *\n * @export\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiClickOutsideService implements OnDestroy {\n    /**\n     * The `global` event handler for `click` events.\n     *\n     */\n    // eslint-disable-next-line rxjs/finnish\n    source: Observable;\n    private _destroyed$ = new Subject();\n\n    /**\n     * @ignore\n     */\n    constructor(\n        @Inject(DOCUMENT)\n        document: any,\n    ) {\n        this.source = fromEvent((document as Document).body, 'click', {\n            capture: true,\n        })\n            .pipe(\n                throttleTime(1000 / MAX_CLICKS_PER_SECOND),\n                takeUntil(this._destroyed$),\n                share(),\n            );\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n    }\n}\n\n/**\n * A directive that emits when a click event occurs outside of the decorated element.\n *\n * @export\n */\n@Directive({\n    selector: '[uiClickOutside]',\n})\nexport class UiClickOutsideDirective {\n    /**\n     * Emits the original `MouseEvent` when the click occurs outside of the decorated element.\n     *\n     */\n    @Output()\n    // eslint-disable-next-line rxjs/finnish\n    uiClickOutside: Observable;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        ref: ElementRef,\n        private _clickService: UiClickOutsideService,\n    ) {\n        const element: HTMLElement = ref.nativeElement;\n\n        this.uiClickOutside = this._clickService\n            .source\n            .pipe(\n                filter(ev =>\n                    !element.contains((ev.target as Element)),\n                ),\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiClipboardDirective.html":{"url":"directives/UiClipboardDirective.html","title":"directive - UiClipboardDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiClipboardDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-clipboard/src/ui-clipboard.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that copies the decorated element content into the user clipboard.\nDepends On: clipboard\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiClipboard]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                uiClipboard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clipboardError\n                            \n                            \n                                clipboardSuccess\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        uiClipboard\n                    \n                \n                \n                    \n                        Type :     Element\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-clipboard/src/ui-clipboard.directive.ts:29\n                            \n                        \n                \n                    \n                        The element reference what will serve as a copy trigger.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        clipboardError\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-clipboard/src/ui-clipboard.directive.ts:43\n                            \n                        \n                \n                    \n                        Event that emits when the content could not be copied to the clipboard.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        clipboardSuccess\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-clipboard/src/ui-clipboard.directive.ts:36\n                            \n                        \n                \n                    \n                        Event that emits when the content is copied succesfully to the clipboard.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import Clipboard from 'clipboard';\n\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\n\n/**\n * A directive that copies the decorated element content into the user clipboard.\n *\n * Depends On: [clipboard](https://www.npmjs.com/package/clipboard)\n *\n * @export\n */\n@Directive({\n    selector: '[uiClipboard]',\n})\nexport class UiClipboardDirective implements OnInit, OnDestroy {\n    /**\n     * The element reference what will serve as a `copy` trigger.\n     *\n     */\n    @Input()\n    uiClipboard?: Element;\n\n    /**\n     * Event that emits when the content is copied succesfully to the clipboard.\n     *\n     */\n    @Output()\n    clipboardSuccess: EventEmitter = new EventEmitter();\n\n    /**\n     * Event that emits when the content could not be copied to the clipboard.\n     *\n     */\n    @Output()\n    clipboardError: EventEmitter = new EventEmitter();\n\n    private _clipboard!: Clipboard;\n\n    /**\n     * @ignore\n     */\n    constructor(private _eltRef: ElementRef) { }\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        if (!this.uiClipboard) {\n            throw new Error('Missing uiClipboard reference');\n        }\n\n        this._clipboard = new Clipboard(this._eltRef.nativeElement, {\n            target: () => this.uiClipboard!,\n        });\n\n        this._clipboard.on('success', (e) => {\n            this.clipboardSuccess.emit(e);\n        });\n\n        this._clipboard.on('error', (e) => {\n            this.clipboardError.emit(e);\n        });\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        if (this._clipboard) {\n            this._clipboard.destroy();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiClipboardModule.html":{"url":"modules/UiClipboardModule.html","title":"module - UiClipboardModule","body":"\n                   \n\n\n\n\n    Modules\n    UiClipboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiClipboardModule\n\n\n\ncluster_UiClipboardModule_declarations\n\n\n\ncluster_UiClipboardModule_exports\n\n\n\n\nUiClipboardDirective\n\nUiClipboardDirective\n\n\n\nUiClipboardModule\n\nUiClipboardModule\n\nUiClipboardModule -->\n\nUiClipboardDirective->UiClipboardModule\n\n\n\n\n\nUiClipboardDirective \n\nUiClipboardDirective \n\nUiClipboardDirective  -->\n\nUiClipboardModule->UiClipboardDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-clipboard/src/ui-clipboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiClipboardDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiClipboardDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiClipboardDirective } from './ui-clipboard.directive';\n\n@NgModule({\n    declarations: [UiClipboardDirective],\n    exports: [UiClipboardDirective],\n})\nexport class UiClipboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiContentLoaderDirective.html":{"url":"directives/UiContentLoaderDirective.html","title":"directive - UiContentLoaderDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiContentLoaderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiContentLoading]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                uiContentLoading\n                            \n                            \n                                uiContentLoadingColor\n                            \n                            \n                                uiContentLoadingDiameter\n                            \n                            \n                                uiContentLoadingMode\n                            \n                            \n                                uiContentLoadingValue\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    uiContentLoading\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_resolver: ComponentFactoryResolver, _ref: TemplateRef, _container: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ref\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _container\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        uiContentLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uiContentLoadingColor\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uiContentLoadingDiameter\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uiContentLoadingMode\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uiContentLoadingValue\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:41\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        uiContentLoading\n                    \n                \n\n\n                \n                    \n                        setuiContentLoading(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    BehaviorSubject,\n    Subject,\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n} from 'rxjs/operators';\n\nimport {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewContainerRef,\n} from '@angular/core';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\n\nimport { UiContentSpinnerComponent } from './internal/ui-content-spinner.component';\n\n@Directive({\n    selector: '[uiContentLoading]',\n})\nexport class UiContentLoaderDirective implements OnInit, OnChanges, OnDestroy {\n    @Input()\n    set uiContentLoading(value: boolean) {\n        this._loading$.next(value);\n    }\n\n    @Input()\n    uiContentLoadingMode?: MatProgressSpinner['mode'];\n\n    @Input()\n    uiContentLoadingDiameter?: MatProgressSpinner['diameter'];\n\n    @Input()\n    uiContentLoadingValue?: MatProgressSpinner['value'];\n\n    @Input()\n    uiContentLoadingColor?: MatProgressSpinner['color'];\n\n    private _spinner?: ComponentRef;\n    private _loading$ = new BehaviorSubject(false);\n    private _change$ = new Subject();\n\n    constructor(\n        private _resolver: ComponentFactoryResolver,\n        private _ref: TemplateRef,\n        private _container: ViewContainerRef,\n    ) { }\n\n    ngOnInit() {\n        this._loading$\n            .pipe(\n                distinctUntilChanged(),\n            ).subscribe(this._render);\n\n        this._change$\n            .pipe(\n                filter(() => !!this._spinner),\n            ).subscribe(() => this._updateSpinner(this._spinner!.instance));\n    }\n\n    ngOnChanges() {\n        this._change$.next();\n    }\n\n    ngOnDestroy() {\n        this._loading$.complete();\n        this._change$.complete();\n        this._destroySpinner();\n    }\n\n    private _render = (value: boolean) => {\n        this._destroySpinner();\n        this._container.clear();\n\n        if (value) {\n            const factory = this._resolver.resolveComponentFactory(UiContentSpinnerComponent);\n            this._spinner = this._container.createComponent(factory);\n            this._updateSpinner(this._spinner.instance);\n        } else {\n            this._container.createEmbeddedView(this._ref);\n        }\n    };\n\n    private _updateSpinner = (spinner: UiContentSpinnerComponent) => {\n        this._emitIfChanged(spinner.mode$, this.uiContentLoadingMode);\n        this._emitIfChanged(spinner.diameter$, this.uiContentLoadingDiameter);\n        this._emitIfChanged(spinner.color$, this.uiContentLoadingColor);\n        this._emitIfChanged(spinner.value$, this.uiContentLoadingValue);\n    };\n\n    private _emitIfChanged = (\n        source: BehaviorSubject,\n        value?: T,\n    ) => {\n        if (\n            value == null ||\n            value === source.value\n        ) { return; }\n\n        source.next(value);\n    };\n\n    private _destroySpinner = () => {\n        if (!this._spinner) { return; }\n\n        this._spinner.destroy();\n        this._spinner = undefined;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiContentLoaderModule.html":{"url":"modules/UiContentLoaderModule.html","title":"module - UiContentLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    UiContentLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiContentLoaderModule\n\n\n\ncluster_UiContentLoaderModule_exports\n\n\n\ncluster_UiContentLoaderModule_declarations\n\n\n\n\nUiContentLoaderDirective\n\nUiContentLoaderDirective\n\n\n\nUiContentLoaderModule\n\nUiContentLoaderModule\n\nUiContentLoaderModule -->\n\nUiContentLoaderDirective->UiContentLoaderModule\n\n\n\n\n\nUiContentSpinnerComponent\n\nUiContentSpinnerComponent\n\nUiContentLoaderModule -->\n\nUiContentSpinnerComponent->UiContentLoaderModule\n\n\n\n\n\nUiContentLoaderDirective \n\nUiContentLoaderDirective \n\nUiContentLoaderDirective  -->\n\nUiContentLoaderModule->UiContentLoaderDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-content-loader/src/ui-content-loader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiContentLoaderDirective\n                        \n                        \n                            UiContentSpinnerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiContentLoaderDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { UiContentSpinnerComponent } from './internal/ui-content-spinner.component';\nimport { UiContentLoaderDirective } from './ui-content-loader.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatProgressSpinnerModule,\n    ],\n    declarations: [\n        UiContentLoaderDirective,\n        UiContentSpinnerComponent,\n    ],\n    exports: [\n        UiContentLoaderDirective,\n    ],\n})\nexport class UiContentLoaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiContentSpinnerComponent.html":{"url":"components/UiContentSpinnerComponent.html","title":"component - UiContentSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiContentSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-content-spinner\n            \n\n            \n                styleUrls\n                ./ui-content-spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui-content-spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color$\n                            \n                            \n                                diameter$\n                            \n                            \n                                mode$\n                            \n                            \n                                style$\n                            \n                            \n                                value$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.min-height.px\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    minHeight\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.min-height.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('primary')\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diameter$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(100)\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('indeterminate')\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.diameter$\n        .pipe(\n            map(diameter => {\n                const displace = `calc(50% - ${diameter / 2}px)`;\n                return {\n                    top: displace,\n                    left: displace,\n                };\n            }),\n        )\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n\n                \n                    \n                        getminHeight()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    OnDestroy,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\n\n@Component({\n    selector: 'ui-content-spinner',\n    templateUrl: './ui-content-spinner.component.html',\n    styleUrls: ['./ui-content-spinner.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class UiContentSpinnerComponent implements OnDestroy {\n    @HostBinding('style.min-height.px')\n    get minHeight() {\n        return this.diameter$.value * 2.5;\n    }\n\n    mode$ = new BehaviorSubject('indeterminate');\n    value$ = new BehaviorSubject(0);\n    color$ = new BehaviorSubject('primary');\n    diameter$ = new BehaviorSubject(100);\n    style$ = this.diameter$\n        .pipe(\n            map(diameter => {\n                const displace = `calc(50% - ${diameter / 2}px)`;\n                return {\n                    top: displace,\n                    left: displace,\n                };\n            }),\n        );\n\n    ngOnDestroy() {\n        this.diameter$.complete();\n        this.mode$.complete();\n        this.value$.complete();\n        this.color$.complete();\n    }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ui-content-spinner.component.scss\n                \n                ui-content-spinner {\n    width: 100%;\n    height: 100%;\n    display: block;\n    position: relative;\n\n    .mat-progress-spinner {\n        position: absolute;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiContentSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiDateFormatDirective.html":{"url":"directives/UiDateFormatDirective.html","title":"directive - UiDateFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiDateFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that formats a given Date input in a relative or absolute format.\nDepends On:\n\nmoment\nmoment-timezone\n\nIn order to reduce bundle sizes, we strongly recommend using the following webpack plugins:\n\nmoment-locales-webpack-plugin\nmoment-timezone-data-webpack-plugin\n\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiDateFormat], ui-dateformat\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contentType\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                timezone\n                            \n                            \n                                titleType\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    date\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        contentType\n                    \n                \n                \n                    \n                        Type :         DisplayType\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts:117\n                            \n                        \n                \n                    \n                        What format should the content have, absolute or relative.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts:139\n                            \n                        \n                \n                    \n                        The input Date that needs to be formatted.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts:175\n                            \n                        \n                \n                    \n                        The moment format, defaults to L LTS.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        timezone\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts:133\n                            \n                        \n                \n                    \n                        The timezone for which the current date is displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        titleType\n                    \n                \n                \n                    \n                        Type :         DisplayType\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts:127\n                            \n                        \n                \n                    \n                        What format should the [data-title] attribute have, absolute or relative.\nThis title attribute is exposed in order to easily integrate with tooltip components.\neg:\n\n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n\n                \n                    \n                        getdate()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts:167\n                                \n                            \n\n                \n                    \n                        setdate(date: Date | string | undefined | null)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts:139\n                                \n                            \n                    \n                        \n                                The input Date that needs to be formatted.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            date\n                                                    \n                                                            \n                                                                        Date | string | undefined | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import 'moment-timezone';\n\nimport moment from 'moment';\nimport {\n    interval,\n    merge,\n    Observable,\n    of,\n} from 'rxjs';\nimport {\n    delay,\n    filter,\n    take,\n    takeUntil,\n} from 'rxjs/operators';\n\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    Optional,\n    Renderer2,\n} from '@angular/core';\nimport { UiFormatDirective } from '@uipath/angular/directives/internal';\n\n/**\n * The date format display type options.\n */\nexport type DisplayType = 'absolute' | 'relative';\n\n/**\n * Timezone resolver type.\n */\nexport type TimezoneResolver = () => string;\n\n/**\n * The date format options schema.\n */\nexport interface IDateFormatOptions {\n    /**\n     * Stream that triggers a re-render of the component.\n     *\n     */\n    redraw$: Observable;\n    /**\n     * The timezone in which the date should be displayed.\n     *\n     */\n    timezone: string | TimezoneResolver;\n    /**\n     * Overwrites the default content type.\n     *\n     */\n    contentType?: DisplayType;\n    /**\n     * Overwrites the default title type.\n     *\n     */\n    titleType?: DisplayType;\n    /**\n     * Overwrites the default dateformat used by moment.js.\n     *\n     */\n    format?: string;\n}\n\n/**\n * `ui-dateformat` injection token for the `options`.\n *\n */\nexport const UI_DATEFORMAT_OPTIONS = new InjectionToken('UiDateFormat options.');\n\n/**\n * @ignore\n */\nconst RELATIVE_TIME_UPDATE_INTERVAL = 10000;\n\nexport const resolveTimezone = (options: IDateFormatOptions) => {\n    const type = typeof options.timezone;\n\n    switch (type) {\n        case 'string':\n            return (options.timezone as string);\n        case 'function':\n            return (options.timezone as TimezoneResolver)();\n        default:\n            return '';\n    }\n};\n\n/**\n * A directive that formats a given `Date` input in a `relative` or `absolute` format.\n *\n * Depends On:\n * - [moment](https://www.npmjs.com/package/moment)\n * - [moment-timezone](https://www.npmjs.com/package/moment-timezone)\n *\n * In order to reduce bundle sizes, we strongly recommend using the following webpack plugins:\n * - [moment-locales-webpack-plugin](https://www.npmjs.com/package/moment-locales-webpack-plugin)\n * - [moment-timezone-data-webpack-plugin](https://www.npmjs.com/package/moment-timezone-data-webpack-plugin)\n *\n * @export\n */\n@Directive({\n    selector: '[uiDateFormat], ui-dateformat',\n})\nexport class UiDateFormatDirective extends UiFormatDirective {\n    /**\n     * What format should the content have, `absolute` or `relative`.\n     *\n     */\n    @Input()\n    contentType!: DisplayType;\n    /**\n     * What format should the `[data-title]` attribute have, `absolute` or `relative`.\n     *\n     * This title attribute is exposed in order to easily integrate with `tooltip` components.\n     *\n     * eg:\n     * ``\n     */\n    @Input()\n    titleType!: DisplayType;\n    /**\n     * The `timezone` for which the current date is displayed.\n     *\n     */\n    @Input()\n    timezone?: string;\n    /**\n     * The input `Date` that needs to be formatted.\n     *\n     */\n    @Input()\n    set date(date: Date | string | undefined | null) {\n        date = date ?? undefined;\n\n        if (this._isDifferentValue(date, this._date)) {\n            const initial = this._date === undefined;\n            this._date = date;\n\n            if (initial) {\n                this._zone.runOutsideAngular(() => {\n                    merge(\n                        this._zone.onMicrotaskEmpty,\n                        // IE doesn't play nicely with task empty only\n                        this._zone.onStable,\n                    )\n                        .pipe(\n                            take(1),\n                            // hack needed for initial render of mat-tooltip\n                            // if not done only on initial may create a change detection loop\n                            // seen on Edge ~107, cannot point to the exact root cause why\n                            delay(0),\n                        )\n                        .subscribe(() => {\n                            this._cd.markForCheck();\n                        });\n                });\n            }\n        }\n    }\n    get date() {\n        return this._date;\n    }\n    /**\n     * The `moment` format, defaults to `L LTS`.\n     *\n     */\n    @Input()\n    dateFormat!: string;\n\n    protected _text?: HTMLElement;\n\n    private get _relativeTime() {\n        if (!this.date) { return ''; }\n        if (!(this.date instanceof Date)) { return this.date; }\n\n        return moment(this.date)\n            .fromNow();\n    }\n\n    private get _absoluteTime() {\n        if (!this.date) { return ''; }\n        if (!(this.date instanceof Date)) { return this.date; }\n\n        return moment(this.date)\n            .tz(this.timezone ?? resolveTimezone(this._options))\n            .format(this.dateFormat);\n    }\n\n    private _lastAbsoluteTime?: string;\n    private _lastRelativeTime?: string;\n    private _lastContentType?: DisplayType;\n    private _lastTitleType?: DisplayType;\n    private _date?: Date | string;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        @Inject(UI_DATEFORMAT_OPTIONS)\n        @Optional()\n        private _options: IDateFormatOptions,\n        private _cd: ChangeDetectorRef,\n        private _zone: NgZone,\n        renderer: Renderer2,\n        elementRef: ElementRef,\n    ) {\n        super(\n            renderer,\n            elementRef,\n        );\n\n        this._options = _options || {};\n        this.dateFormat = this._options.format ?? 'L LTS';\n        this.contentType = this._options.contentType ?? 'absolute';\n        this.titleType = this._options.titleType ?? 'absolute';\n\n        const redraw$ = this._options.redraw$ || of(null);\n\n        merge(\n            redraw$,\n            this._redraw$,\n            interval(RELATIVE_TIME_UPDATE_INTERVAL).pipe(\n                filter(() =>\n                    this._isRelative(this.titleType) ||\n                    this._isRelative(this.contentType),\n                ),\n            ),\n        )\n            .pipe(\n                takeUntil(this._destroyed$),\n            )\n            .subscribe(() => this._evaluate());\n    }\n\n    private _evaluate() {\n        this._updateTitle();\n        this._updateContent();\n\n        this._lastAbsoluteTime = this._absoluteTime;\n        this._lastRelativeTime = this._relativeTime;\n        this._lastContentType = this.contentType;\n        this._lastTitleType = this.titleType;\n    }\n\n    private _updateContent() {\n        if (\n            this._lastContentType === this.contentType &&\n            !this._timeForTypeChanged(this.contentType)\n        ) { return; }\n\n        const text = ` ${this._timeForType(this.contentType)} `;\n\n        if (!this._text) {\n            this._text = this._renderer.createText(text);\n            this._renderer.appendChild(this._elementRef.nativeElement, this._text);\n        } else {\n            this._renderer.setValue(this._text, text);\n        }\n    }\n\n    private _updateTitle() {\n        if (\n            this._lastTitleType === this.titleType &&\n            !this._timeForTypeChanged(this.titleType)\n        ) { return; }\n\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'data-title', this._timeForType(this.titleType));\n    }\n\n    private _isRelative = (type: DisplayType) => type === 'relative';\n\n    private _timeForTypeChanged = (type: DisplayType) =>\n        this._isRelative(type) ?\n            this._lastRelativeTime !== this._relativeTime :\n            this._lastAbsoluteTime !== this._absoluteTime;\n\n    private _timeForType = (type: DisplayType) => this._isRelative(type) ?\n        this._relativeTime :\n        this._absoluteTime;\n\n    private _isDifferentValue = (value: Date | string | undefined, compareValue: Date | string | undefined) => {\n        if (value instanceof Date && compareValue instanceof Date) {\n            return value.getTime() !== compareValue.getTime();\n        }\n\n        return value !== compareValue;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiDateFormatModule.html":{"url":"modules/UiDateFormatModule.html","title":"module - UiDateFormatModule","body":"\n                   \n\n\n\n\n    Modules\n    UiDateFormatModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiDateFormatModule\n\n\n\ncluster_UiDateFormatModule_exports\n\n\n\ncluster_UiDateFormatModule_declarations\n\n\n\n\nUiDateFormatDirective\n\nUiDateFormatDirective\n\n\n\nUiDateFormatModule\n\nUiDateFormatModule\n\nUiDateFormatModule -->\n\nUiDateFormatDirective->UiDateFormatModule\n\n\n\n\n\nUiDateFormatDirective \n\nUiDateFormatDirective \n\nUiDateFormatDirective  -->\n\nUiDateFormatModule->UiDateFormatDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-dateformat/src/ui-dateformat.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiDateFormatDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiDateFormatDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiDateFormatDirective } from './ui-dateformat.directive';\n\n@NgModule({\n    declarations: [UiDateFormatDirective],\n    exports: [UiDateFormatDirective],\n})\nexport class UiDateFormatModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiDragAndDropFileDirective.html":{"url":"directives/UiDragAndDropFileDirective.html","title":"directive - UiDragAndDropFileDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiDragAndDropFileDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that facilitates file inputs and file drop regions.\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiDragAndDropFile]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                fileBrowseRef\n                            \n                            \n                                fileClearRef\n                            \n                            \n                                fileType\n                            \n                            \n                                multiple\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileChange\n                            \n                            \n                                fileClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.file-dragging\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragend\n                            \n                            \n                                dragenter\n                            \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:59\n                            \n                        \n                \n                    \n                        Configures the disabled state of the file area.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fileBrowseRef\n                    \n                \n                \n                    \n                        Type :     Element\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:38\n                            \n                        \n                \n                    \n                        The element reference that triggers file browsing.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fileClearRef\n                    \n                \n                \n                    \n                        Type :     Element\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:45\n                            \n                        \n                \n                    \n                        The element reference that serve as a clear trigger for the selected files.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fileType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:31\n                            \n                        \n                \n                    \n                        The accepted file-type.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        multiple\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:52\n                            \n                        \n                \n                    \n                        Configures if the file area accepts multiple files.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:66\n                            \n                        \n                \n                    \n                        An event that emits when the file selection state changes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fileClear\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:73\n                            \n                        \n                \n                    \n                        An event that emits when the file selection is cleared.\n\n                    \n                \n            \n        \n\n            \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.file-dragging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:76\n                        \n                    \n\n\n        \n    \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            dragend\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:210\n                \n            \n\n\n            \n                \n                    Clears the dragging state when a dragleave event occurs.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DragEvent data associated to the dragend.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:221\n                \n            \n\n\n            \n                \n                    Prevents weird flickering cross-browser.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DragEvent data associated to the dragenter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragleave\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:198\n                \n            \n\n\n            \n                \n                    Clears the dragging state when a dragleave event occurs.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DragEvent data associated to the dragover.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragover\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:180\n                \n            \n\n\n            \n                \n                    Marks the state as dragging when a dragover event occurs.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DragEvent data associated to the dragover.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts:167\n                \n            \n\n\n            \n                \n                    Reacts to drop events.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ev\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The DragEvent data associated to the drop.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        import {\n    AfterViewInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    Renderer2,\n    SimpleChanges,\n} from '@angular/core';\nimport { isInternetExplorer } from '@uipath/angular/utilities';\n\n/**\n * A directive that facilitates `file inputs` and `file drop regions`.\n *\n * @export\n */\n@Directive({\n    selector: '[uiDragAndDropFile]',\n})\nexport class UiDragAndDropFileDirective implements OnChanges, AfterViewInit, OnDestroy {\n    /**\n     * The accepted `file-type`.\n     *\n     */\n    @Input()\n    fileType?: string;\n\n    /**\n     * The element reference that triggers file `browsing`.\n     *\n     */\n    @Input()\n    fileBrowseRef?: Element;\n\n    /**\n     * The element reference that serve as a `clear` trigger for the selected files.\n     *\n     */\n    @Input()\n    fileClearRef?: Element;\n\n    /**\n     * Configures if the `file area` accepts multiple files.\n     *\n     */\n    @Input()\n    multiple = false;\n\n    /**\n     * Configures the `disabled` state of the `file area`.\n     *\n     */\n    @Input()\n    disabled = false;\n\n    /**\n     * An event that emits when the file selection state `changes`.\n     *\n     */\n    @Output()\n    fileChange = new EventEmitter();\n\n    /**\n     * An event that emits when the file selection is `cleared`.\n     *\n     */\n    @Output()\n    fileClear = new EventEmitter();\n\n    @HostBinding('class.file-dragging')\n    protected _isDragging = false;\n\n    private _disposalCallbacks: (() => void)[] = [];\n    private _fileInput: HTMLInputElement;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        private _elementRef: ElementRef,\n        private _renderer: Renderer2,\n    ) {\n        this._fileInput = this._renderer.createElement('input') as HTMLInputElement;\n        this._renderer.setProperty(this._fileInput, 'type', 'file');\n        this._renderer.setProperty(this._fileInput, 'value', null);\n        this._renderer.setAttribute(this._fileInput, 'hidden', '');\n        this._renderer.appendChild(this._elementRef.nativeElement, this._fileInput);\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.fileType) {\n            const fileType = changes.fileType.currentValue;\n            this._renderer.setProperty(this._fileInput, 'accept', fileType || '');\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    ngAfterViewInit() {\n        if (this.multiple) {\n            this._renderer.setProperty(this._fileInput, 'multiple', 'true');\n        }\n\n        this._preventEnterOnChildren(this._elementRef.nativeElement);\n\n        if (!this.fileBrowseRef) {\n            this.fileBrowseRef = this._elementRef.nativeElement;\n        }\n\n        this._renderer.setStyle(this.fileBrowseRef, 'cursor', 'pointer');\n\n        ['click', 'keydown.enter', 'keydown.space'].forEach(eventName => {\n            const browse = this._renderer\n                .listen(this.fileBrowseRef, eventName, () => {\n                    if (this.disabled) { return; }\n                    this._fileInput.click();\n                });\n            this._disposalCallbacks.push(browse);\n        });\n\n        const change = this._renderer.listen(this._fileInput, 'change', (ev) => {\n            this._preventAll(ev);\n            if (this.disabled) { return; }\n            const target = ev.target as HTMLInputElement;\n            if (target.files) {\n                this._emitFiles(target.files);\n                this._renderer.setProperty(this._fileInput, 'value', null);\n            }\n        });\n        this._disposalCallbacks.push(change);\n\n        if (this.fileClearRef) {\n            const clear = this._renderer\n                .listen(this.fileClearRef, 'click', () => {\n                    if (this.disabled) { return; }\n                    this._renderer.setProperty(this._fileInput, 'value', null);\n                    this.fileClear.emit();\n                });\n            this._disposalCallbacks.push(clear);\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this._disposalCallbacks.forEach(dispose => {\n            dispose();\n        });\n    }\n\n    /**\n     * Reacts to `drop` events.\n     *\n     * @param ev The `DragEvent` data associated to the `drop`.\n     */\n    @HostListener('drop', ['$event'])\n    protected _onDrop(ev: DragEvent) {\n        this._preventAll(ev);\n        if (this.disabled) { return; }\n        this._isDragging = false;\n        this._emitFiles(ev.dataTransfer!.files);\n    }\n\n    /**\n     * Marks the `state` as `dragging` when a `dragover` event occurs.\n     *\n     * @param ev The `DragEvent` data associated to the `dragover`.\n     */\n    @HostListener('dragover', ['$event'])\n    protected _onDragOver(ev: DragEvent) {\n        this._preventAll(ev);\n        if (\n            this.disabled ||\n            !this.multiple &&\n            ev.dataTransfer &&\n            ev.dataTransfer.items &&\n            ev.dataTransfer.items.length > 1\n        ) { return; }\n        this._isDragging = true;\n    }\n\n    /**\n     * Clears the `dragging` `state` when a `dragleave` event occurs.\n     *\n     * @param ev The `DragEvent` data associated to the `dragover`.\n     */\n    @HostListener('dragleave', ['$event'])\n    protected _onDragLeave(ev: DragEvent) {\n        this._preventAll(ev);\n        if (this.disabled) { return; }\n        this._isDragging = false;\n    }\n\n    /**\n     * Clears the `dragging` `state` when a `dragleave` event occurs.\n     *\n     * @param ev The `DragEvent` data associated to the `dragend`.\n     */\n    @HostListener('dragend')\n    protected _onDragEnd() {\n        if (this.disabled) { return; }\n        this._isDragging = false;\n    }\n\n    /**\n     * Prevents weird flickering `cross-browser`.\n     *\n     * @param ev The `DragEvent` data associated to the `dragenter`.\n     */\n    @HostListener('dragenter', ['$event'])\n    protected _onDragEnter(ev: DragEvent) {\n        this._preventAll(ev);\n        if (this.disabled) { return; }\n    }\n\n    private _emitFiles(files: FileList) {\n        if (\n            !files?.length ||\n            this.disabled\n        ) { return; }\n\n        const acceptedExtensions = (this.fileType ?? '')\n            .split(',')\n            .map(e => e.trim().toLowerCase());\n        const isAccepted = (file: File) => this.fileType\n            ? acceptedExtensions.some(extension => file.name.toLowerCase().endsWith(extension))\n            : true;\n        const emittedFiles = Array.from(files).filter(isAccepted);\n\n        if (\n            !emittedFiles.length ||\n            emittedFiles.length > 1 && !this.multiple\n        ) { return; }\n\n        this.fileChange.emit(emittedFiles);\n    }\n\n    private _preventEnterOnChildren(element: Element) {\n        if (!isInternetExplorer()) { return; }\n\n        if (element.children.length) {\n            const children: Element[] = Array.from(element.children);\n\n            for (const child of children) {\n                const dragenter = this._renderer.listen(child, 'dragenter', this._preventAll);\n                const dragleave = this._renderer.listen(child, 'dragleave', this._preventAll);\n\n                this._disposalCallbacks.push(\n                    dragenter,\n                    dragleave,\n                );\n            }\n        }\n    }\n\n    private _preventAll(ev: Event) {\n        ev.preventDefault();\n        ev.stopPropagation();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiDragAndDropModule.html":{"url":"modules/UiDragAndDropModule.html","title":"module - UiDragAndDropModule","body":"\n                   \n\n\n\n\n    Modules\n    UiDragAndDropModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiDragAndDropModule\n\n\n\ncluster_UiDragAndDropModule_declarations\n\n\n\ncluster_UiDragAndDropModule_exports\n\n\n\n\nUiDragAndDropFileDirective\n\nUiDragAndDropFileDirective\n\n\n\nUiDragAndDropModule\n\nUiDragAndDropModule\n\nUiDragAndDropModule -->\n\nUiDragAndDropFileDirective->UiDragAndDropModule\n\n\n\n\n\nUiDragAndDropFileDirective \n\nUiDragAndDropFileDirective \n\nUiDragAndDropFileDirective  -->\n\nUiDragAndDropModule->UiDragAndDropFileDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiDragAndDropFileDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiDragAndDropFileDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiDragAndDropFileDirective } from './ui-drag-and-drop-file.directive';\n\n@NgModule({\n    declarations: [UiDragAndDropFileDirective],\n    exports: [UiDragAndDropFileDirective],\n})\nexport class UiDragAndDropModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiFormatDirective.html":{"url":"directives/UiFormatDirective.html","title":"directive - UiFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/internal/src/ui-format.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_renderer: Renderer2, _elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/directives/internal/src/ui-format.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/internal/src/ui-format.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/internal/src/ui-format.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\n\nimport {\n    Directive,\n    ElementRef,\n    OnChanges,\n    OnDestroy,\n    Renderer2,\n} from '@angular/core';\n\n@Directive()\nexport abstract class UiFormatDirective implements OnChanges, OnDestroy {\n    protected abstract _text?: HTMLElement;\n    protected _redraw$ = new Subject();\n    protected _destroyed$ = new Subject();\n\n    constructor(\n        protected _renderer: Renderer2,\n        protected _elementRef: ElementRef,\n    ) { }\n\n    ngOnChanges() {\n        this._redraw$.next();\n    }\n\n    ngOnDestroy() {\n        if (this._text) {\n            this._renderer.removeChild(this._elementRef.nativeElement, this._text);\n        }\n        this._destroyed$.next();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridColumnDirective.html":{"url":"directives/UiGridColumnDirective.html","title":"directive - UiGridColumnDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridColumnDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The grid column definition directive.\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridColumn], ui-grid-column\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                change$\n                            \n                            \n                                identifier\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                disableToggle\n                            \n                            \n                                method\n                            \n                            \n                                minWidth\n                            \n                            \n                                primary\n                            \n                            \n                                property\n                            \n                            \n                                queryProperty\n                            \n                            \n                                refetch\n                            \n                            \n                                resizeable\n                            \n                            \n                                searchable\n                            \n                            \n                                sort\n                            \n                            \n                                sortable\n                            \n                            \n                                title\n                            \n                            \n                                visible\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    ariaSort\n                                \n                                \n                                    primary\n                                \n                                \n                                    visible\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:202\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableToggle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:168\n                            \n                        \n                \n                    \n                        If the column can have visibility toggled.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:137\n                            \n                        \n                \n                    \n                        The method metadata used for searches.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minWidth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:192\n                            \n                        \n                \n                    \n                        The minimum width percentage that the column should have when resizing.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        primary\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:151\n                            \n                        \n                \n                    \n                        If the column should be styled as primary.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                \n                \n                    \n                        Type :      | string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:123\n                            \n                        \n                \n                    \n                        The property that should be loaded in the associated row cell.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        queryProperty\n                    \n                \n                \n                    \n                        Type :      | string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:130\n                            \n                        \n                \n                    \n                        If defined, this will be used for sorting and filtering\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refetch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:199\n                            \n                        \n                \n                    \n                        If the searchable dropdown associated to the column should trigger a data fetch when opened.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resizeable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:109\n                            \n                        \n                \n                    \n                        Configure if the column is resizeable or not.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:102\n                            \n                        \n                \n                    \n                        Configure if the column should be included in the search.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sort\n                    \n                \n                \n                    \n                        Type :     SortDirection\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:144\n                            \n                        \n                \n                    \n                        The current sort of the column.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sortable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:95\n                            \n                        \n                \n                    \n                        Configure if the column is sortable.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:116\n                            \n                        \n                \n                    \n                        The column title.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:175\n                            \n                        \n                \n                    \n                        If the column should be rendered, used as default state if toggle columns is turned on.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:50\n                            \n                        \n                \n                    \n                        Set the column width, in %.\n\n                    \n                \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        change$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:238\n                        \n                    \n\n            \n                \n                    Emits when reactive properties change.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Default value : identifier()\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:88\n                        \n                    \n\n            \n                \n                    The string identifier for the column.\n(used for resize identification)\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:70\n                                \n                            \n                    \n                        \n                                Returns the column width, in %.\n\n\n                        \n                    \n\n                \n                    \n                        setwidth(value: number | string)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:50\n                                \n                            \n                    \n                        \n                                Set the column width, in %.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number | string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ariaSort\n                    \n                \n\n                \n                    \n                        getariaSort()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:78\n                                \n                            \n                    \n                        \n                                Returns the aria-sort associated to the current sort.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        primary\n                    \n                \n\n                \n                    \n                        getprimary()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:151\n                                \n                            \n                    \n                        \n                                If the column should be styled as primary.\n\n\n                        \n                    \n\n                \n                    \n                        setprimary(primary: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:154\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            primary\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:175\n                                \n                            \n                    \n                        \n                                If the column should be rendered, used as default state if toggle columns is turned on.\n\n\n                        \n                    \n\n                \n                    \n                        setvisible(visible: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts:178\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            visible\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\n\nimport {\n    ContentChild,\n    Directive,\n    Input,\n    isDevMode,\n    OnChanges,\n    OnDestroy,\n    SimpleChange,\n    SimpleChanges,\n    TemplateRef,\n} from '@angular/core';\nimport { SortDirection } from '@angular/material/sort';\nimport { identifier } from '@uipath/angular/utilities';\n\nimport { UiGridDropdownFilterDirective } from '../filters/ui-grid-dropdown-filter.directive';\nimport { UiGridSearchFilterDirective } from '../filters/ui-grid-search-filter.directive';\n\n/**\n * @ignore\n */\nconst ARIA_SORT_MAP: Record = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    '': 'none',\n    asc: 'ascending',\n    desc: 'descending',\n};\n\n/**\n * @ignore\n */\nconst REACTIVE_INPUT_LIST: (keyof UiGridColumnDirective>)[]\n    = ['sort', 'visible', 'title', 'primary'];\n\n/**\n * The grid column definition directive.\n *\n * @export\n */\n@Directive({\n    selector: '[uiGridColumn], ui-grid-column',\n})\nexport class UiGridColumnDirective implements OnChanges, OnDestroy {\n    /**\n     * Set the column width, in `%`.\n     *\n     */\n    @Input()\n    set width(value: number | string) {\n        if (\n            isDevMode() &&\n            typeof value === 'string' &&\n            !value.endsWith('%')\n        ) {\n            console.error(`Width should be percentual for '${this.title}' column.`);\n        }\n\n        const width = typeof value === 'string' ? Number(parseFloat(value).toFixed(1)) : value;\n\n        if (isNaN(width)) { return; }\n\n        this._width = width * 10;\n    }\n\n    /**\n     * Returns the column width, in `%`.\n     *\n     */\n    get width() {\n        return this._width;\n    }\n\n    /**\n     * Returns the `aria-sort` associated to the current sort.\n     *\n     */\n    get ariaSort() {\n        return ARIA_SORT_MAP[this.sort];\n    }\n\n    /**\n     * The string identifier for the column.\n     *\n     * (used for resize identification)\n     *\n     */\n    identifier = identifier();\n\n    /**\n     * Configure if the column is sortable.\n     *\n     */\n    @Input()\n    sortable = false;\n\n    /**\n     * Configure if the column should be included in the search.\n     *\n     */\n    @Input()\n    searchable = false;\n\n    /**\n     * Configure if the column is resizeable or not.\n     *\n     */\n    @Input()\n    resizeable = true;\n\n    /**\n     * The column title.\n     *\n     */\n    @Input()\n    title?: string;\n\n    /**\n     * The property that should be loaded in the associated row cell.\n     *\n     */\n    @Input()\n    property?: keyof T | string; // nested property\n\n    /**\n     * If defined, this will be used for sorting and filtering\n     *\n     */\n    @Input()\n    queryProperty?: keyof T | string; // nested property\n\n    /**\n     * The method metadata used for searches.\n     *\n     */\n    @Input()\n    method?: string;\n\n    /**\n     * The current sort of the column.\n     *\n     */\n    @Input()\n    sort: SortDirection = '';\n\n    /**\n     * If the column should be styled as primary.\n     *\n     */\n    @Input()\n    get primary() {\n        return this._primary;\n    }\n    set primary(primary: boolean) {\n        if (primary === this._primary) { return; }\n        this._primary = !!primary;\n\n        this.change$.next({\n            primary: new SimpleChange(!primary, primary, false),\n        });\n    }\n\n    /**\n     * If the column can have visibility toggled.\n     *\n     */\n    @Input()\n    disableToggle = false;\n\n    /**\n     * If the column should be rendered, used as default state if toggle columns is turned on.\n     *\n     */\n    @Input()\n    get visible() {\n        return this._visible;\n    }\n    set visible(visible: boolean) {\n        if (visible === this._visible) { return; }\n        this._visible = !!visible;\n\n        this.change$.next({\n            visible: new SimpleChange(!visible, visible, false),\n        });\n    }\n\n    /**\n     * The minimum width percentage that the column should have when resizing.\n     *\n     */\n    @Input()\n    minWidth = 30;\n\n    /**\n     * If the searchable dropdown associated to the column should trigger a data fetch when opened.\n     *\n     */\n    @Input()\n    refetch = false;\n\n    @Input()\n    description = '';\n\n    /**\n     * The searchable dropdown directive reference.\n     *\n     * @ignore\n     */\n    @ContentChild(UiGridSearchFilterDirective, {\n        static: true,\n    })\n    searchableDropdown?: UiGridSearchFilterDirective;\n\n    /**\n     * The dropdown directive reference.\n     *\n     * @ignore\n     */\n    @ContentChild(UiGridDropdownFilterDirective, {\n        static: true,\n    })\n    dropdown?: UiGridDropdownFilterDirective;\n\n    /**\n     * The view template associated to the row cell.\n     *\n     * @ignore\n     */\n    @ContentChild(TemplateRef, {\n        static: true,\n    })\n    html?: TemplateRef;\n\n    /**\n     * Emits when reactive properties change.\n     *\n     */\n    change$ = new Subject();\n\n    private _width = NaN;\n    private _visible = true;\n    private _primary = false;\n\n    /**\n     * @ignore\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        const isAnyPropertyChanged = Object.keys(changes)\n            .filter(property => REACTIVE_INPUT_LIST.includes(property as keyof UiGridColumnDirective))\n            .map(property => changes[property])\n            .some(change => !change.firstChange &&\n                change.currentValue !== change.previousValue,\n            );\n\n        if (!isAnyPropertyChanged) { return; }\n\n        this.change$.next(changes);\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this.change$.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiGridCustomPaginatorComponent.html":{"url":"components/UiGridCustomPaginatorComponent.html","title":"component - UiGridCustomPaginatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiGridCustomPaginatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            _MatPaginatorBase\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-grid-custom-paginator\n            \n\n            \n                styleUrls\n                ./ui-grid-custom-paginator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui-grid-custom-paginator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _formFieldAppearance\n                            \n                            \n                                    Public\n                                _intl\n                            \n                            \n                                hostClass\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pageCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef, intl?: UiMatPaginatorIntl, defaults?: MatPaginatorDefaultOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        intl\n                                                  \n                                                        \n                                                                        UiMatPaginatorIntl\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaults\n                                                  \n                                                        \n                                                                    MatPaginatorDefaultOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'mat-paginator'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        _formFieldAppearance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatFormFieldAppearance\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _intl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UiMatPaginatorIntl\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hostClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'mat-paginator'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pageCount\n                    \n                \n\n                \n                    \n                        getpageCount()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    HostBinding,\n    Inject,\n    Injectable,\n    Optional,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\nimport {\n    MatPaginatorDefaultOptions,\n    MatPaginatorIntl,\n    MAT_PAGINATOR_DEFAULT_OPTIONS,\n    _MatPaginatorBase,\n} from '@angular/material/paginator';\n\n@Injectable()\nexport class UiMatPaginatorIntl extends MatPaginatorIntl {\n    getPageLabel(currentPage: number, pageCount?: number): string {\n        if (!pageCount) {\n            return `Page ${currentPage}`;\n        }\n        return `Page ${currentPage} / ${pageCount}`;\n    }\n}\n\n@Component({\n    selector: 'ui-grid-custom-paginator',\n    templateUrl: './ui-grid-custom-paginator.component.html',\n    styleUrls: ['./ui-grid-custom-paginator.component.scss'],\n    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class UiGridCustomPaginatorComponent extends _MatPaginatorBase {\n    // eslint-disable-next-line\n    public _formFieldAppearance?: MatFormFieldAppearance;\n    // eslint-disable-next-line\n    public _intl!: UiMatPaginatorIntl;\n\n    @HostBinding('class')\n    hostClass = 'mat-paginator';\n\n    get pageCount(): number {\n        return Math.ceil(this.length / this.pageSize);\n    }\n\n    constructor(\n        changeDetectorRef: ChangeDetectorRef,\n        @Optional()\n        intl?: UiMatPaginatorIntl,\n        @Optional()\n        @Inject(MAT_PAGINATOR_DEFAULT_OPTIONS)\n        defaults?: MatPaginatorDefaultOptions,\n    ) {\n        super(intl ?? new UiMatPaginatorIntl(), changeDetectorRef, defaults);\n\n        if (defaults?.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\n        \n\n        \n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                {{_intl.getPageLabel(pageIndex+1, pageCount)}}\n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n        \n\n        \n            \n                {{_intl.itemsPerPageLabel}}\n            \n\n             1\"\n                            [appearance]=\"_formFieldAppearance!\"\n                            [color]=\"color\"\n                            class=\"mat-paginator-page-size-select\">\n                \n                    \n                        {{ pageSizeOption }}\n                    \n                \n            \n\n            {{pageSize}}\n        \n    \n\n\n    \n\n    \n                \n                    ./ui-grid-custom-paginator.component.scss\n                \n                $mat-paginator-padding: 0 8px;\n$mat-paginator-page-size-margin-right: 8px;\n$mat-paginator-range-label-margin-right: 8px;\n\n$mat-paginator-items-per-page-label-margin: 0 4px;\n$mat-paginator-selector-margin: 6px 4px 0 4px;\n$mat-paginator-selector-trigger-width: 56px;\n$mat-paginator-selector-trigger-outline-width: 64px;\n$mat-paginator-selector-trigger-fill-width: 64px;\n\n$mat-paginator-page-label-margin: 0 32px 0 24px;\n$mat-paginator-button-icon-size: 14px;\n$mat-paginator-button-size: 32px;\n\nui-grid-custom-paginator {\n    .mat-icon-button {\n        width: $mat-paginator-button-size;\n        height: $mat-paginator-button-size;\n        line-height: unset;\n    }\n\n    .mat-paginator {\n        display: block;\n    }\n\n    // Note: this wrapper element is only used to get the flexbox vertical centering to work\n    // with the `min-height` on IE11. It can be removed if we drop support for IE.\n    .mat-paginator-outer-container {\n        display: flex;\n        font-size: 14px;\n    }\n\n    .mat-paginator-container {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: $mat-paginator-padding;\n        flex-wrap: wrap-reverse;\n        width: 100%;\n    }\n\n    .mat-paginator-page-size {\n        display: flex;\n        align-items: baseline;\n        margin-right: $mat-paginator-page-size-margin-right;\n        margin [dir=\"rtl\"] & {\n            margin-right: 0;\n            margin-left: $mat-paginator-page-size-margin-right;\n        }\n    }\n\n    .mat-paginator-page-size-label {\n        margin: $mat-paginator-items-per-page-label-margin;\n    }\n\n    .mat-paginator-page-size-select {\n        margin: $mat-paginator-selector-margin;\n        width: $mat-paginator-selector-trigger-width;\n\n        &.mat-form-field-appearance-outline {\n            width: $mat-paginator-selector-trigger-outline-width;\n        }\n\n        &.mat-form-field-appearance-fill {\n            width: $mat-paginator-selector-trigger-fill-width;\n        }\n    }\n\n    .mat-paginator-range-actions .mat-paginator-page-label {\n        margin: $mat-paginator-page-label-margin;\n        min-width: 7em;\n        text-align: center;\n    }\n\n    .mat-paginator-range-label {\n        margin-left: $mat-paginator-range-label-margin-right;\n        min-width: 7em;\n    }\n\n    .mat-paginator-range-actions {\n        display: flex;\n        align-items: center;\n    }\n\n    .mat-paginator-icon {\n        width: $mat-paginator-button-icon-size;\n        height: $mat-paginator-button-icon-size;\n        fill: currentColor;\n\n        [dir=\"rtl\"] & {\n            transform: rotate(180deg);\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}                                                                                                                                                                                                    {{_intl.getPageLabel(pageIndex+1, pageCount)}}                                                                                                                                                                                                                {{_intl.itemsPerPageLabel}}                         1\"                            [appearance]=\"_formFieldAppearance!\"                            [color]=\"color\"                            class=\"mat-paginator-page-size-select\">                                                            {{ pageSizeOption }}                                                            {{pageSize}}            '\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiGridCustomPaginatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiGridCustomPaginatorModule.html":{"url":"modules/UiGridCustomPaginatorModule.html","title":"module - UiGridCustomPaginatorModule","body":"\n                   \n\n\n\n\n    Modules\n    UiGridCustomPaginatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiGridCustomPaginatorModule\n\n\n\ncluster_UiGridCustomPaginatorModule_declarations\n\n\n\ncluster_UiGridCustomPaginatorModule_exports\n\n\n\n\nUiGridCustomPaginatorComponent\n\nUiGridCustomPaginatorComponent\n\n\n\nUiGridCustomPaginatorModule\n\nUiGridCustomPaginatorModule\n\nUiGridCustomPaginatorModule -->\n\nUiGridCustomPaginatorComponent->UiGridCustomPaginatorModule\n\n\n\n\n\nUiGridCustomPaginatorComponent \n\nUiGridCustomPaginatorComponent \n\nUiGridCustomPaginatorComponent  -->\n\nUiGridCustomPaginatorModule->UiGridCustomPaginatorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiGridCustomPaginatorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiGridCustomPaginatorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { UiGridCustomPaginatorComponent } from './ui-grid-custom-paginator.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatTooltipModule,\n    ],\n    declarations: [UiGridCustomPaginatorComponent],\n    exports: [UiGridCustomPaginatorComponent],\n})\nexport class UiGridCustomPaginatorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridDropdownFilterDirective.html":{"url":"directives/UiGridDropdownFilterDirective.html","title":"directive - UiGridDropdownFilterDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridDropdownFilterDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The dropdown filter definition directive.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridDropdownFilter], ui-grid-dropdown-filter\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                emptyStateValue\n                            \n                            \n                                items\n                            \n                            \n                                showAllOption\n                            \n                            \n                                value\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visible\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        emptyStateValue\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts:69\n                            \n                        \n                \n                    \n                        The empty dropdown state.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         IDropdownOption[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts:48\n                            \n                        \n                \n                    \n                        The dropdown items.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllOption\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts:55\n                            \n                        \n                \n                    \n                        If it should display the All option.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         IDropdownOption\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts:62\n                            \n                        \n                \n                    \n                        The current dropdown option.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts:75\n                            \n                        \n                \n                    \n                        Wether the filter should be rendered in the grid.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value?: IDropdownOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts:87\n                \n            \n\n\n            \n                \n                    Updates the dropdown value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                IDropdownOption\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts:75\n                                \n                            \n                    \n                        \n                                Wether the filter should be rendered in the grid.\n\n\n                        \n                    \n\n                \n                    \n                        setvisible(visible: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts:76\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            visible\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport {\n    Directive,\n    Input,\n    OnDestroy,\n} from '@angular/core';\n\nimport { UiGridFilterDirective } from './ui-grid-filter';\n\n/**\n * Dropdown option schema.\n *\n * @export\n */\nexport interface IDropdownOption {\n    /**\n     * The current dropdown value.\n     *\n     */\n    value: string | number | boolean;\n    /**\n     * The dropdown option label.\n     *\n     */\n    label: string;\n    /**\n     * The dropdown translation key, used by the `intl` service.\n     *\n     */\n    translationKey?: string;\n}\n\n/**\n * The dropdown filter definition directive.\n *\n * @export\n */\n@Directive({\n    selector: '[uiGridDropdownFilter], ui-grid-dropdown-filter',\n})\nexport class UiGridDropdownFilterDirective extends UiGridFilterDirective implements OnDestroy {\n    /**\n     * The dropdown items.\n     *\n     */\n    @Input()\n    items?: IDropdownOption[];\n\n    /**\n     * If it should display the `All` option.\n     *\n     */\n    @Input()\n    showAllOption = true;\n\n    /**\n     * The current dropdown option.\n     *\n     */\n    @Input()\n    value?: IDropdownOption;\n\n    /**\n     * The empty dropdown state.\n     *\n     */\n    @Input()\n    emptyStateValue?: IDropdownOption['value'];\n    /**\n     * Wether the filter should be rendered in the grid.\n     *\n     */\n    @Input()\n    get visible() { return this.visible$.value; }\n    set visible(visible: boolean) { this.visible$.next(visible); }\n\n    /**\n     * @ignore\n     */\n    visible$ = new BehaviorSubject(true);\n\n    /**\n     * Updates the dropdown value.\n     *\n     */\n    updateValue(value?: IDropdownOption) {\n        this.value = value;\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.filterChange.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridExpandedRowDirective.html":{"url":"directives/UiGridExpandedRowDirective.html","title":"directive - UiGridExpandedRowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridExpandedRowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/body/ui-grid-expanded-row.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Expanded row definition directive.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridExpandedRow], ui-grid-expanded-row\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ContentChild,\n    Directive,\n    TemplateRef,\n} from '@angular/core';\n\n/**\n * Expanded row definition directive.\n *\n * @export\n */\n@Directive({\n    selector: '[uiGridExpandedRow], ui-grid-expanded-row',\n})\nexport class UiGridExpandedRowDirective {\n    /**\n     * @internal\n     * @ignore\n     */\n    @ContentChild(TemplateRef, {\n        static: true,\n    })\n    html?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridFooterDirective.html":{"url":"directives/UiGridFooterDirective.html","title":"directive - UiGridFooterDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridFooterDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Footer definition directive.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridFooter], ui-grid-footer\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hidden\n                            \n                            \n                                hidePageSize\n                            \n                            \n                                length\n                            \n                            \n                                pageIndex\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pageSize\n                                \n                                \n                                    pageIndex\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidePageSize\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:60\n                            \n                        \n                \n                    \n                        If the page size options should be hidden.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:28\n                            \n                        \n                \n                    \n                        The total item length.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pageIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:44\n                            \n                        \n                \n                    \n                        The active page index\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:35\n                            \n                        \n                \n                    \n                        The active page size.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSizes\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:53\n                            \n                        \n                \n                    \n                        The available page size options.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:73\n                            \n                        \n                \n                    \n                        Emits when the page is changed.\n\n                    \n                \n            \n        \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pageSize\n                    \n                \n\n\n                \n                    \n                        setpageSize(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:35\n                                \n                            \n                    \n                        \n                                The active page size.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        pageIndex\n                    \n                \n\n\n                \n                    \n                        setpageIndex(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:44\n                                \n                            \n                    \n                        \n                                The active page index\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts:79\n                                \n                            \n                    \n                        \n                                The current footer state.\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import { tap } from 'rxjs/operators';\n\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { PageChangeEvent } from '../events/page-change-event';\n\n/**\n * Footer definition directive.\n *\n * @export\n */\n@Directive({\n    selector: '[uiGridFooter], ui-grid-footer',\n})\nexport class UiGridFooterDirective implements OnDestroy, OnInit {\n    /**\n     * The total item length.\n     *\n     */\n    @Input()\n    length = 0;\n\n    /**\n     * The active page size.\n     *\n     */\n    @Input()\n    set pageSize(value: number) {\n        this._state.pageSize = value;\n    }\n\n    /**\n     * The active page index\n     *\n     */\n    @Input()\n    set pageIndex(value: number) {\n        this._state.pageIndex = value;\n    }\n\n    /**\n     * The available page size options.\n     *\n     */\n    @Input()\n    pageSizes: number[] = [];\n\n    /**\n     * If the page size options should be hidden.\n     *\n     */\n    @Input()\n    hidePageSize = false;\n\n    /*\n    * Support hiding footer even if it's defined.\n    */\n    @Input()\n    hidden = false;\n\n    /**\n     * Emits when the page is changed.\n     *\n     */\n    @Output()\n    pageChange = new EventEmitter();\n\n    /**\n     * The current footer state.\n     *\n     */\n    get state() {\n        return this._state;\n    }\n\n    private _state: PageChangeEvent = {\n        length: NaN,\n        pageIndex: 0,\n        pageSize: NaN,\n        previousPageIndex: NaN,\n    };\n\n    /**\n     * @ignore\n     */\n    constructor() {\n        this.pageChange.pipe(\n            tap(ev => this._state = ev),\n        ).subscribe();\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        this._state = {\n            ...this._state,\n            length: this.length,\n        };\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this.pageChange.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridHeaderButtonDirective.html":{"url":"directives/UiGridHeaderButtonDirective.html","title":"directive - UiGridHeaderButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridHeaderButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/header/ui-grid-header-button.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Header button definition directive.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiHeaderButton], ui-header-button\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"action\" | \"main\" | \"inline\"\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/header/ui-grid-header-button.directive.ts:22\n                            \n                        \n                \n                    \n                        Configure if the button is the grid main action, or a selection action.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/header/ui-grid-header-button.directive.ts:29\n                            \n                        \n                \n                    \n                        Configure if the button is visible or not.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ContentChild,\n    Directive,\n    Input,\n    TemplateRef,\n} from '@angular/core';\n\n/**\n * Header button definition directive.\n *\n * @export\n */\n@Directive({\n    selector: '[uiHeaderButton], ui-header-button',\n})\nexport class UiGridHeaderButtonDirective {\n    /**\n     * Configure if the button is the grid main action, or a selection action.\n     *\n     */\n    @Input()\n    type?: 'action' | 'main' | 'inline';\n\n    /**\n     * Configure if the button is visible or not.\n     *\n     */\n    @Input()\n    visible = true;\n\n    /**\n     * @internal\n     * @ignore\n     */\n    @ContentChild(TemplateRef, {\n        static: true,\n    })\n    html?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridHeaderDirective.html":{"url":"directives/UiGridHeaderDirective.html","title":"directive - UiGridHeaderDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridHeaderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/header/ui-grid-header.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Grid header definition directive.\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridHeader], ui-grid-header\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                            \n                                searchDebounce\n                            \n                            \n                                searchMaxLength\n                            \n                            \n                                searchValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchFilter\n                            \n                            \n                                searchTerm\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/header/ui-grid-header.directive.ts:29\n                            \n                        \n                \n                    \n                        If the search input is available.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchDebounce\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/header/ui-grid-header.directive.ts:43\n                            \n                        \n                \n                    \n                        The search debounce time (ms).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchMaxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 64\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/header/ui-grid-header.directive.ts:50\n                            \n                        \n                \n                    \n                        The search max length.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/header/ui-grid-header.directive.ts:36\n                            \n                        \n                \n                    \n                        The active search value.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchFilter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/header/ui-grid-header.directive.ts:57\n                            \n                        \n                \n                    \n                        Emits a filter model event when the search changes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchTerm\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/header/ui-grid-header.directive.ts:64\n                            \n                        \n                \n                    \n                        Emits the search term when the search changes.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import type { QueryList } from '@angular/core';\nimport {\n    AfterViewInit,\n    ContentChildren,\n    Directive,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\nimport { IFilterModel } from '../models';\nimport { UiGridHeaderButtonDirective } from './ui-grid-header-button.directive';\n\n/**\n * Grid header definition directive.\n *\n * @export\n */\n@Directive({\n    selector: '[uiGridHeader], ui-grid-header',\n})\nexport class UiGridHeaderDirective implements AfterViewInit, OnDestroy {\n    /**\n     * If the search input is available.\n     *\n     */\n    @Input()\n    search = false;\n\n    /**\n     * The active search value.\n     *\n     */\n    @Input()\n    searchValue?: string;\n\n    /**\n     * The search debounce time (ms).\n     *\n     */\n    @Input()\n    searchDebounce = 500;\n\n    /**\n     * The search max length.\n     *\n     */\n    @Input()\n    searchMaxLength = 64;\n\n    /**\n     * Emits a filter model event when the search changes.\n     *\n     */\n    @Output()\n    searchFilter = new EventEmitter[]>();\n\n    /**\n     * Emits the search term when the search changes.\n     *\n     */\n    @Output()\n    searchTerm = new EventEmitter();\n\n    /**\n     * @internal\n     * @ignore\n     */\n    mainButtons?: UiGridHeaderButtonDirective[];\n\n    /**\n     * @internal\n     * @ignore\n     */\n    actionButtons?: UiGridHeaderButtonDirective[];\n\n    /**\n     * @internal\n     * @ignore\n     */\n    inlineButtons?: UiGridHeaderButtonDirective[];\n\n    @ContentChildren(UiGridHeaderButtonDirective)\n    private _buttons!: QueryList;\n\n    /**\n     * @internal\n     * @ignore\n     */\n    ngAfterViewInit() {\n        this.mainButtons = this._buttons.filter(b => b.type === 'main');\n        this.actionButtons = this._buttons.filter(b => b.type === 'action');\n        this.inlineButtons = this._buttons.filter(b => b.type === 'inline');\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    ngOnDestroy() {\n        this.searchFilter.complete();\n        this.searchTerm.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiGridIntl.html":{"url":"injectables/UiGridIntl.html","title":"injectable - UiGridIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiGridIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/ui-grid.intl.ts\n        \n\n\n            \n                Description\n            \n            \n                Internationalization service definition for UiGrid.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ascending\n                            \n                            \n                                changes\n                            \n                            \n                                clearCustomFilter\n                            \n                            \n                                clearSelectionTooltip\n                            \n                            \n                                clearTooltip\n                            \n                            \n                                columnSortedAscending\n                            \n                            \n                                columnSortedDescending\n                            \n                            \n                                columnUnsorted\n                            \n                            \n                                descending\n                            \n                            \n                                filters\n                            \n                            \n                                gridHeaderActionsNotice\n                            \n                            \n                                loadedPage\n                            \n                            \n                                loadingPage\n                            \n                            \n                                multiPageSelectionInfoTooltip\n                            \n                            \n                                noDataMessage\n                            \n                            \n                                noDataMessageAlternative\n                            \n                            \n                                noFilterPlaceholder\n                            \n                            \n                                noSelectionMessage\n                            \n                            \n                                pageRefreshing\n                            \n                            \n                                refreshTooltip\n                            \n                            \n                                searchPlaceholder\n                            \n                            \n                                searchTooltip\n                            \n                            \n                                sortableMessage\n                            \n                            \n                                togglePlaceholderTitle\n                            \n                            \n                                toggleResetToDefaults\n                            \n                            \n                                toggleTitle\n                            \n                            \n                                toggleTooltip\n                            \n                            \n                                translateDropdownOption\n                            \n                            \n                                translateMultiPageSelectionCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxTooltip\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkboxTooltip\n                        \n                    \n                \n            \n            \n                \ncheckboxTooltip(selected: boolean, rowIndex?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:132\n                \n            \n\n\n            \n                \n                    Determines the checkbox matToolTip.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The rowIndex for which the label is computed.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ascending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ascending'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:100\n                        \n                    \n\n            \n                \n                    Ascending aria-sort text.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:22\n                        \n                    \n\n            \n                \n                    Notify if changes have occured that require that the labels be updated.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCustomFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Clear custom filter'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:120\n                        \n                    \n\n            \n                \n                    Message for the button that clears the applied custom filter.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelectionTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Clear Selection'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:49\n                        \n                    \n\n            \n                \n                    Clear multi-page selection tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Clear'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:44\n                        \n                    \n\n            \n                \n                    Clear search tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnSortedAscending\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:188\n                        \n                    \n\n            \n                \n                    Live announcer sort ascending notification.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    columnTitle\n                                                    \n                                                            The sorted column title.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnSortedDescending\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:196\n                        \n                    \n\n            \n                \n                    Live announcer sort descending notification.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    columnTitle\n                                                    \n                                                            The sorted column title.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnUnsorted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:204\n                        \n                    \n\n            \n                \n                    Live announcer sort unsorted notification.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    columnTitle\n                                                    \n                                                            The sorted column title.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'descending'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:105\n                        \n                    \n\n            \n                \n                    Descending aria-sort text.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridHeaderActionsNotice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Grid header actions updated. Press Shift + Alt + Arrow Up to move there.'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:110\n                        \n                    \n\n            \n                \n                    Live announced text when new action buttons are revealed on selection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadedPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:154\n                        \n                    \n\n            \n                \n                    Live announcer page loaded state notification.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    page\n                                                    \n                                                            The current loaded page number.\n\n                                                    \n                                            \n                                            \n                                                    renderedItemCount\n                                                    \n                                                            The number of rendered items.\n\n                                                    \n                                            \n                                            \n                                                    total\n                                                    \n                                                            The total number of items available.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:167\n                        \n                    \n\n            \n                \n                    Live announcer page loading state notification.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    page\n                                                    \n                                                            The current loaded page number.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multiPageSelectionInfoTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Multi-page selection is enabled.'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:54\n                        \n                    \n\n            \n                \n                    Multi-page selection information tootlip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noDataMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No data is available.'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:90\n                        \n                    \n\n            \n                \n                    No data row message.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noDataMessageAlternative\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:125\n                        \n                    \n\n            \n                \n                    No data row message alternative function.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noFilterPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'All'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:60\n                        \n                    \n\n            \n                \n                    No active filter placeholder.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noSelectionMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No items currently selected.'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:95\n                        \n                    \n\n            \n                \n                    No selection text (for multi-page selection).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageRefreshing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Page refreshing'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:28\n                        \n                    \n\n            \n                \n                    Live announcer refresh message.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Refresh'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:34\n                        \n                    \n\n            \n                \n                    Refresh button tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:65\n                        \n                    \n\n            \n                \n                    Search placeholder.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:39\n                        \n                    \n\n            \n                \n                    Search tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortableMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:115\n                        \n                    \n\n            \n                \n                    A message to let the users know when they've focused a sortable column.\nThis is an optional property\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePlaceholderTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Columns'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:85\n                        \n                    \n\n            \n                \n                    Text displayed next to icon for dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleResetToDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Reset'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:75\n                        \n                    \n\n            \n                \n                    Tooltip for resetting to column defaults\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Visible Columns'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:80\n                        \n                    \n\n            \n                \n                    Main title for visible columns displayed within the dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Toggle column visibility'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:70\n                        \n                    \n\n            \n                \n                    Tooltip for toggle columns select dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateDropdownOption\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:180\n                        \n                    \n\n            \n                \n                    Handles dropdown label transaltions.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    option\n                                                    \n                                                            The current dropdown option.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateMultiPageSelectionCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/ui-grid.intl.ts:144\n                        \n                    \n\n            \n                \n                    Generates a selection label for the given count.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    count\n                                                    \n                                                            The total selection count.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\n\nimport {\n    Injectable,\n    OnDestroy,\n} from '@angular/core';\n\nimport { IDropdownOption } from './filters/ui-grid-dropdown-filter.directive';\n\n/**\n * Internationalization service definition for `UiGrid`.\n *\n * @export\n */\n@Injectable()\nexport class UiGridIntl implements OnDestroy {\n    /**\n     * Notify if changes have occured that require that the labels be updated.\n     *\n     */\n    // eslint-disable-next-line rxjs/finnish\n    changes = new Subject();\n\n    /**\n     * Live announcer refresh message.\n     *\n     */\n    pageRefreshing = 'Page refreshing';\n\n    /**\n     * Refresh button tooltip.\n     *\n     */\n    refreshTooltip = 'Refresh';\n    /**\n     * Search tooltip.\n     *\n     */\n    searchTooltip = 'Search';\n    /**\n     * Clear search tooltip.\n     *\n     */\n    clearTooltip = 'Clear';\n    /**\n     * Clear multi-page selection tooltip.\n     *\n     */\n    clearSelectionTooltip = 'Clear Selection';\n    /**\n     * Multi-page selection information tootlip.\n     *\n     */\n    multiPageSelectionInfoTooltip = 'Multi-page selection is enabled.';\n\n    /**\n     * No active filter placeholder.\n     *\n     */\n    noFilterPlaceholder = 'All';\n    /**\n     * Search placeholder.\n     *\n     */\n    searchPlaceholder = 'Search';\n    /**\n     * Tooltip for toggle columns select dropdown\n     *\n     */\n    toggleTooltip = 'Toggle column visibility';\n    /**\n     * Tooltip for resetting to column defaults\n     *\n     */\n    toggleResetToDefaults = 'Reset';\n    /**\n     * Main title for visible columns displayed within the dropdown\n     *\n     */\n    toggleTitle = 'Visible Columns';\n    /**\n     * Text displayed next to icon for dropdown\n     *\n     */\n    togglePlaceholderTitle = 'Columns';\n    /**\n     * No data row message.\n     *\n     */\n    noDataMessage = 'No data is available.';\n    /**\n     * No selection text (for multi-page selection).\n     *\n     */\n    noSelectionMessage = 'No items currently selected.';\n    /**\n     * Ascending `aria-sort` text.\n     *\n     */\n    ascending = 'ascending';\n    /**\n     * Descending `aria-sort` text.\n     *\n     */\n    descending = 'descending';\n    /**\n     * Live announced text when new action buttons are revealed on selection\n     *\n     */\n    gridHeaderActionsNotice = 'Grid header actions updated. Press Shift + Alt + Arrow Up to move there.';\n    /**\n     * A message to let the users know when they've focused a sortable column.\n     * This is an optional property\n     */\n     sortableMessage: string | undefined;\n    /**\n     * Message for the button that clears the applied custom filter.\n     *\n     */\n    clearCustomFilter = 'Clear custom filter';\n    /**\n     * No data row message alternative function.\n     *\n     */\n    noDataMessageAlternative = (searchValue?: string, activeFilters?: number | null) =>\n        `No data is available${searchValue ? ` for ${searchValue}` : ''}${activeFilters ? ' for applied filters' : ''}.`;\n    /**\n     * Determines the `checkbox` `matToolTip`.\n     *\n     * @param [rowIndex] The rowIndex for which the label is computed.\n     */\n    checkboxTooltip(selected: boolean, rowIndex?: number): string {\n        if (rowIndex == null) {\n            return `${selected ? 'Deselect' : 'Select'} all`;\n        }\n        return `${selected ? 'Deselect' : 'Select'} row ${rowIndex}`;\n    }\n\n    /**\n     * Generates a selection label for the given count.\n     *\n     * @param count The total selection count.\n     */\n    translateMultiPageSelectionCount =\n        (count: number) => `You have selected ${count} items.`;\n\n    /**\n     * Live announcer page loaded state notification.\n     *\n     * @param page The current loaded page number.\n     * @param renderedItemCount The number of rendered items.\n     * @param total The total number of items available.\n     */\n    loadedPage = (page: number, renderedItemCount: number, total?: number | null) => {\n        if (total == null || isNaN(total)) {\n            return `Loaded page number ${page} containing ${renderedItemCount} items`;\n        }\n\n        return `Loaded page number ${page} containing ${renderedItemCount} out of ${total} items`;\n    };\n\n    /**\n     * Live announcer page loading state notification.\n     *\n     * @param page The current loaded page number.\n     */\n    loadingPage = (page: number) =>\n        `Loading page number ${page}`;\n\n    filters = (filtersCount?: number | null) =>\n        (filtersCount && filtersCount > 0)\n            ? `Filters (${filtersCount})`\n            : 'Filters';\n\n    /**\n     * Handles dropdown label transaltions.\n     *\n     * @param option The current dropdown option.\n     */\n    translateDropdownOption =\n        (option: IDropdownOption) => option.label;\n\n    /**\n     * Live announcer sort ascending notification.\n     *\n     * @param columnTitle The sorted column title.\n     */\n    columnSortedAscending = (columnTitle: string) =>\n        `Column ${columnTitle} sorted ` + this.ascending;\n\n    /**\n     * Live announcer sort descending notification.\n     *\n     * @param columnTitle The sorted column title.\n     */\n    columnSortedDescending = (columnTitle: string) =>\n        `Column ${columnTitle} sorted ` + this.descending;\n\n    /**\n     * Live announcer sort unsorted notification.\n     *\n     * @param columnTitle The sorted column title.\n     */\n    columnUnsorted = (columnTtile: string) =>\n        `Column ${columnTtile} unsorted`;\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this.changes.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridLoadingDirective.html":{"url":"directives/UiGridLoadingDirective.html","title":"directive - UiGridLoadingDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridLoadingDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/body/ui-grid-loading.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridLoading], ui-grid-loading\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TemplateRef, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/body/ui-grid-loading.directive.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n    ContentChild,\n    Directive,\n    TemplateRef,\n} from '@angular/core';\n\n@Directive({\n    selector: '[uiGridLoading], ui-grid-loading',\n})\nexport class UiGridLoadingDirective {\n    @ContentChild(TemplateRef, {\n        static: true,\n    })\n    html?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiGridModule.html":{"url":"modules/UiGridModule.html","title":"module - UiGridModule","body":"\n                   \n\n\n\n\n    Modules\n    UiGridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiGridModule\n\n\n\ncluster_UiGridModule_declarations\n\n\n\ncluster_UiGridModule_exports\n\n\n\ncluster_UiGridModule_imports\n\n\n\n\nUiGridColumnDirective\n\nUiGridColumnDirective\n\n\n\nUiGridModule\n\nUiGridModule\n\nUiGridModule -->\n\nUiGridColumnDirective->UiGridModule\n\n\n\n\n\nUiGridComponent\n\nUiGridComponent\n\nUiGridModule -->\n\nUiGridComponent->UiGridModule\n\n\n\n\n\nUiGridDropdownFilterDirective\n\nUiGridDropdownFilterDirective\n\nUiGridModule -->\n\nUiGridDropdownFilterDirective->UiGridModule\n\n\n\n\n\nUiGridExpandedRowDirective\n\nUiGridExpandedRowDirective\n\nUiGridModule -->\n\nUiGridExpandedRowDirective->UiGridModule\n\n\n\n\n\nUiGridFooterDirective\n\nUiGridFooterDirective\n\nUiGridModule -->\n\nUiGridFooterDirective->UiGridModule\n\n\n\n\n\nUiGridHeaderButtonDirective\n\nUiGridHeaderButtonDirective\n\nUiGridModule -->\n\nUiGridHeaderButtonDirective->UiGridModule\n\n\n\n\n\nUiGridHeaderDirective\n\nUiGridHeaderDirective\n\nUiGridModule -->\n\nUiGridHeaderDirective->UiGridModule\n\n\n\n\n\nUiGridLoadingDirective\n\nUiGridLoadingDirective\n\nUiGridModule -->\n\nUiGridLoadingDirective->UiGridModule\n\n\n\n\n\nUiGridNoContentDirective\n\nUiGridNoContentDirective\n\nUiGridModule -->\n\nUiGridNoContentDirective->UiGridModule\n\n\n\n\n\nUiGridRowActionDirective\n\nUiGridRowActionDirective\n\nUiGridModule -->\n\nUiGridRowActionDirective->UiGridModule\n\n\n\n\n\nUiGridRowConfigDirective\n\nUiGridRowConfigDirective\n\nUiGridModule -->\n\nUiGridRowConfigDirective->UiGridModule\n\n\n\n\n\nUiGridSearchFilterDirective\n\nUiGridSearchFilterDirective\n\nUiGridModule -->\n\nUiGridSearchFilterDirective->UiGridModule\n\n\n\n\n\nUiGridColumnDirective \n\nUiGridColumnDirective \n\nUiGridColumnDirective  -->\n\nUiGridModule->UiGridColumnDirective \n\n\n\n\n\nUiGridComponent \n\nUiGridComponent \n\nUiGridComponent  -->\n\nUiGridModule->UiGridComponent \n\n\n\n\n\nUiGridDropdownFilterDirective \n\nUiGridDropdownFilterDirective \n\nUiGridDropdownFilterDirective  -->\n\nUiGridModule->UiGridDropdownFilterDirective \n\n\n\n\n\nUiGridExpandedRowDirective \n\nUiGridExpandedRowDirective \n\nUiGridExpandedRowDirective  -->\n\nUiGridModule->UiGridExpandedRowDirective \n\n\n\n\n\nUiGridFooterDirective \n\nUiGridFooterDirective \n\nUiGridFooterDirective  -->\n\nUiGridModule->UiGridFooterDirective \n\n\n\n\n\nUiGridHeaderButtonDirective \n\nUiGridHeaderButtonDirective \n\nUiGridHeaderButtonDirective  -->\n\nUiGridModule->UiGridHeaderButtonDirective \n\n\n\n\n\nUiGridHeaderDirective \n\nUiGridHeaderDirective \n\nUiGridHeaderDirective  -->\n\nUiGridModule->UiGridHeaderDirective \n\n\n\n\n\nUiGridLoadingDirective \n\nUiGridLoadingDirective \n\nUiGridLoadingDirective  -->\n\nUiGridModule->UiGridLoadingDirective \n\n\n\n\n\nUiGridNoContentDirective \n\nUiGridNoContentDirective \n\nUiGridNoContentDirective  -->\n\nUiGridModule->UiGridNoContentDirective \n\n\n\n\n\nUiGridRowActionDirective \n\nUiGridRowActionDirective \n\nUiGridRowActionDirective  -->\n\nUiGridModule->UiGridRowActionDirective \n\n\n\n\n\nUiGridRowConfigDirective \n\nUiGridRowConfigDirective \n\nUiGridRowConfigDirective  -->\n\nUiGridModule->UiGridRowConfigDirective \n\n\n\n\n\nUiGridSearchFilterDirective \n\nUiGridSearchFilterDirective \n\nUiGridSearchFilterDirective  -->\n\nUiGridModule->UiGridSearchFilterDirective \n\n\n\n\n\nUiAutoAccessibleLabelModule\n\nUiAutoAccessibleLabelModule\n\nUiGridModule -->\n\nUiAutoAccessibleLabelModule->UiGridModule\n\n\n\n\n\nUiGridCustomPaginatorModule\n\nUiGridCustomPaginatorModule\n\nUiGridModule -->\n\nUiGridCustomPaginatorModule->UiGridModule\n\n\n\n\n\nUiGridSearchModule\n\nUiGridSearchModule\n\nUiGridModule -->\n\nUiGridSearchModule->UiGridModule\n\n\n\n\n\nUiGridToggleColumnsModule\n\nUiGridToggleColumnsModule\n\nUiGridModule -->\n\nUiGridToggleColumnsModule->UiGridModule\n\n\n\n\n\nUiNgLetModule\n\nUiNgLetModule\n\nUiGridModule -->\n\nUiNgLetModule->UiGridModule\n\n\n\n\n\nUiSuggestModule\n\nUiSuggestModule\n\nUiGridModule -->\n\nUiSuggestModule->UiGridModule\n\n\n\n\n\nUiVirtualScrollViewportResizeModule\n\nUiVirtualScrollViewportResizeModule\n\nUiGridModule -->\n\nUiVirtualScrollViewportResizeModule->UiGridModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/ui-grid.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiGridColumnDirective\n                        \n                        \n                            UiGridComponent\n                        \n                        \n                            UiGridDropdownFilterDirective\n                        \n                        \n                            UiGridExpandedRowDirective\n                        \n                        \n                            UiGridFooterDirective\n                        \n                        \n                            UiGridHeaderButtonDirective\n                        \n                        \n                            UiGridHeaderDirective\n                        \n                        \n                            UiGridLoadingDirective\n                        \n                        \n                            UiGridNoContentDirective\n                        \n                        \n                            UiGridRowActionDirective\n                        \n                        \n                            UiGridRowConfigDirective\n                        \n                        \n                            UiGridSearchFilterDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiAutoAccessibleLabelModule\n                        \n                        \n                            UiGridCustomPaginatorModule\n                        \n                        \n                            UiGridSearchModule\n                        \n                        \n                            UiGridToggleColumnsModule\n                        \n                        \n                            UiNgLetModule\n                        \n                        \n                            UiSuggestModule\n                        \n                        \n                            UiVirtualScrollViewportResizeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiGridColumnDirective\n                        \n                        \n                            UiGridComponent\n                        \n                        \n                            UiGridDropdownFilterDirective\n                        \n                        \n                            UiGridExpandedRowDirective\n                        \n                        \n                            UiGridFooterDirective\n                        \n                        \n                            UiGridHeaderButtonDirective\n                        \n                        \n                            UiGridHeaderDirective\n                        \n                        \n                            UiGridLoadingDirective\n                        \n                        \n                            UiGridNoContentDirective\n                        \n                        \n                            UiGridRowActionDirective\n                        \n                        \n                            UiGridRowConfigDirective\n                        \n                        \n                            UiGridSearchFilterDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { A11yModule } from '@angular/cdk/a11y';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { UiAutoAccessibleLabelModule } from '@uipath/angular/a11y';\nimport { UiSuggestModule } from '@uipath/angular/components/ui-suggest';\nimport { UiNgLetModule } from '@uipath/angular/directives/ui-ng-let';\nimport { UiVirtualScrollViewportResizeModule } from '@uipath/angular/directives/ui-virtual-scroll-viewport-resize';\n\nimport { UiGridColumnDirective } from './body/ui-grid-column.directive';\nimport { UiGridExpandedRowDirective } from './body/ui-grid-expanded-row.directive';\nimport { UiGridLoadingDirective } from './body/ui-grid-loading.directive';\nimport { UiGridNoContentDirective } from './body/ui-grid-no-content.directive';\nimport { UiGridRowActionDirective } from './body/ui-grid-row-action.directive';\nimport { UiGridRowConfigDirective } from './body/ui-grid-row-config.directive';\nimport { UiGridCustomPaginatorModule } from './components/ui-grid-custom-paginator/ui-grid-custom-paginator.module';\nimport { UiGridSearchModule } from './components/ui-grid-search/ui-grid-search.module';\nimport { UiGridToggleColumnsModule } from './components/ui-grid-toggle-columns/ui-grid-toggle-columns.module';\nimport { UiGridDropdownFilterDirective } from './filters/ui-grid-dropdown-filter.directive';\nimport { UiGridSearchFilterDirective } from './filters/ui-grid-search-filter.directive';\nimport { UiGridFooterDirective } from './footer/ui-grid-footer.directive';\nimport { UiGridHeaderButtonDirective } from './header/ui-grid-header-button.directive';\nimport { UiGridHeaderDirective } from './header/ui-grid-header.directive';\nimport { UiGridComponent } from './ui-grid.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatPaginatorModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatIconModule,\n        MatMenuModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatProgressBarModule,\n        ScrollingModule,\n        UiGridSearchModule,\n        UiGridToggleColumnsModule,\n        UiGridCustomPaginatorModule,\n        UiSuggestModule,\n        A11yModule,\n        UiVirtualScrollViewportResizeModule,\n        UiAutoAccessibleLabelModule,\n        UiNgLetModule,\n    ],\n    declarations: [\n        UiGridComponent,\n        UiGridRowActionDirective,\n        UiGridColumnDirective,\n        UiGridHeaderDirective,\n        UiGridHeaderButtonDirective,\n        UiGridFooterDirective,\n        UiGridSearchFilterDirective,\n        UiGridDropdownFilterDirective,\n        UiGridRowConfigDirective,\n        UiGridExpandedRowDirective,\n        UiGridNoContentDirective,\n        UiGridLoadingDirective,\n    ],\n    exports: [\n        UiGridComponent,\n        UiGridRowActionDirective,\n        UiGridColumnDirective,\n        UiGridHeaderDirective,\n        UiGridHeaderButtonDirective,\n        UiGridFooterDirective,\n        UiGridSearchFilterDirective,\n        UiGridDropdownFilterDirective,\n        UiGridRowConfigDirective,\n        UiGridExpandedRowDirective,\n        UiGridNoContentDirective,\n        UiGridLoadingDirective,\n    ],\n})\nexport class UiGridModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridNoContentDirective.html":{"url":"directives/UiGridNoContentDirective.html","title":"directive - UiGridNoContentDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridNoContentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/body/ui-grid-no-content.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridNoContent], ui-grid-no-content\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TemplateRef, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/body/ui-grid-no-content.directive.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n    ContentChild,\n    Directive,\n    TemplateRef,\n} from '@angular/core';\n\n@Directive({\n    selector: '[uiGridNoContent], ui-grid-no-content',\n})\nexport class UiGridNoContentDirective {\n    @ContentChild(TemplateRef, {\n        static: true,\n    })\n    html?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridRowActionDirective.html":{"url":"directives/UiGridRowActionDirective.html","title":"directive - UiGridRowActionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridRowActionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/body/ui-grid-row-action.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The row action definition directive.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridRowAction], ui-grid-row-action\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ContentChild,\n    Directive,\n    TemplateRef,\n} from '@angular/core';\n\n/**\n * The row action definition directive.\n *\n */\n@Directive({\n    selector: '[uiGridRowAction], ui-grid-row-action',\n})\nexport class UiGridRowActionDirective {\n    /**\n     * @ignore\n     */\n    @ContentChild(TemplateRef, {\n        static: true,\n    })\n    html?: TemplateRef;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridRowConfigDirective.html":{"url":"directives/UiGridRowConfigDirective.html","title":"directive - UiGridRowConfigDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridRowConfigDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/body/ui-grid-row-config.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Row configuration directive.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridRowConfig], ui-grid-row-config\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngClassFn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngClassFn\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : (_) => ({} as Record)\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/body/ui-grid-row-config.directive.ts:22\n                            \n                        \n                \n                    \n                        Class function factory, used to apply ngClass on rows.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    Input,\n} from '@angular/core';\n\nimport { IGridDataEntry } from '../models';\n\n/**\n * Row configuration directive.\n *\n * @export\n */\n@Directive({\n    selector: '[uiGridRowConfig], ui-grid-row-config',\n})\nexport class UiGridRowConfigDirective {\n    /**\n     * Class function factory, used to apply `ngClass` on rows.\n     *\n     */\n    @Input()\n    ngClassFn: (entry: T) => Record = (_) => ({} as Record);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiGridSearchComponent.html":{"url":"components/UiGridSearchComponent.html","title":"component - UiGridSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiGridSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        The grid search component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-grid-search\n            \n\n            \n                styleUrls\n                ./ui-grid-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui-grid-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearTooltip\n                            \n                            \n                                debounce\n                            \n                            \n                                maxLength\n                            \n                            \n                                placeholder\n                            \n                            \n                                searchTooltip\n                            \n                            \n                                tooltipDisabled\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:63\n                            \n                        \n                \n                    \n                        The clear search tooltip text.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:39\n                            \n                        \n                \n                    \n                        The search debounce time (ms).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:51\n                            \n                        \n                \n                    \n                        The max-length allowed in the search input.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:45\n                            \n                        \n                \n                    \n                        The search input placeholder.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:57\n                            \n                        \n                \n                    \n                        The search tooltip text.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:69\n                            \n                        \n                \n                    \n                        Configure if the search tooltip is disabled.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:76\n                            \n                        \n                \n                    \n                        The search value.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:93\n                            \n                        \n                \n                    \n                        The search event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:123\n                \n            \n\n\n            \n                \n                    Clears the search input value.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:76\n                                \n                            \n                    \n                        \n                                The search value.\n\n\n                        \n                    \n\n                \n                    \n                        setvalue(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts:79\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Subject } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    takeUntil,\n} from 'rxjs/operators';\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\n\n/**\n * The grid search component.\n *\n * @export\n */\n@Component({\n    selector: 'ui-grid-search',\n    templateUrl: './ui-grid-search.component.html',\n    styleUrls: ['./ui-grid-search.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiGridSearchComponent implements OnInit, OnDestroy {\n    /**\n     * The search debounce time (ms).\n     *\n     */\n    @Input()\n    debounce = 0;\n    /**\n     * The search input placeholder.\n     *\n     */\n    @Input()\n    placeholder?: string;\n    /**\n     * The max-length allowed in the search input.\n     *\n     */\n    @Input()\n    maxLength?: number;\n    /**\n     * The search tooltip text.\n     *\n     */\n    @Input()\n    searchTooltip?: string;\n    /**\n     * The clear search tooltip text.\n     *\n     */\n    @Input()\n    clearTooltip?: string;\n    /**\n     * Configure if the search tooltip is disabled.\n     *\n     */\n    @Input()\n    tooltipDisabled?: boolean;\n\n    /**\n     * The search value.\n     *\n     */\n    @Input()\n    get value() {\n        return this.search.value;\n    }\n    set value(value: string) {\n        this.search.setValue(value);\n    }\n\n    /**\n     * @ignore\n     */\n    search = new UntypedFormControl('');\n\n    /**\n     * The search event.\n     *\n     */\n    @Output()\n    searchChange = new EventEmitter();\n\n    private _destroyed$ = new Subject();\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        this.search.valueChanges.pipe(\n            debounceTime(this.debounce),\n            map(value => value.trim()),\n            distinctUntilChanged(),\n            takeUntil(this._destroyed$),\n        ).subscribe(value => this.searchChange.emit(value));\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this.searchChange.complete();\n\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n\n    /**\n     * Clears the search input value.\n     *\n     */\n    clear() {\n        this.search.setValue('');\n    }\n}\n\n    \n\n    \n        ﻿\n    \n    \n        \n            \n                \n            \n        \n    \n    \n        \n            \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./ui-grid-search.component.scss\n                \n                ui-grid-search {\n    mat-form-field {\n        width: 140px;\n\n        .mat-form-field-flex {\n            align-items: flex-end;\n        }\n    }\n\n    .ui-grid-search-cancel {\n        cursor: pointer;\n\n        &:focus {\n            outline: none;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿                                                                                                                                    '\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiGridSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiGridSearchFilterDirective.html":{"url":"directives/UiGridSearchFilterDirective.html","title":"directive - UiGridSearchFilterDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiGridSearchFilterDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The searchable dropdown definition directive.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiGridSearchFilter], ui-grid-search-filter\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drillDown\n                            \n                            \n                                fetchStrategy\n                            \n                            \n                                multiple\n                            \n                            \n                                noFilterPlaceholder\n                            \n                            \n                                property\n                            \n                            \n                                searchSourceFactory\n                            \n                            \n                                value\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visible\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        drillDown\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:53\n                            \n                        \n                \n                    \n                        Allow filter drill down\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fetchStrategy\n                    \n                \n                \n                    \n                        Type :     \"eager\" | \"onOpen\"\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:32\n                            \n                        \n                \n                    \n                        The property associated to the dropdown search fetch strategy.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        multiple\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:84\n                            \n                        \n                \n                    \n                        Allow multiple selection\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        noFilterPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:46\n                            \n                        \n                \n                    \n                        The no selection placeholder.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:39\n                            \n                        \n                \n                    \n                        The property associated to the dropdown search.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchSourceFactory\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:62\n                            \n                        \n                \n                    \n                        Stream factory, used to resolve a stream for the provided options.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         ISuggestValue | ISuggestValue[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:69\n                            \n                        \n                \n                    \n                        The current dropdown options.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:76\n                            \n                        \n                \n                    \n                        Wether the filter should be rendered in the grid.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value?: ISuggestValue, isSelected?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:95\n                \n            \n\n\n            \n                \n                    Updates the dropdown option.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ISuggestValue\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    isSelected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:76\n                                \n                            \n                    \n                        \n                                Wether the filter should be rendered in the grid.\n\n\n                        \n                    \n\n                \n                    \n                        setvisible(visible: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts:77\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            visible\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    BehaviorSubject,\n    Observable,\n} from 'rxjs';\n\nimport {\n    Directive,\n    Input,\n    OnDestroy,\n} from '@angular/core';\nimport {\n    ISuggestValue,\n    ISuggestValues,\n} from '@uipath/angular/components/ui-suggest';\n\nimport { UiGridFilterDirective } from './ui-grid-filter';\n\n/**\n * The searchable dropdown definition directive.\n *\n * @export\n */\n@Directive({\n    selector: '[uiGridSearchFilter], ui-grid-search-filter',\n})\nexport class UiGridSearchFilterDirective extends UiGridFilterDirective implements OnDestroy {\n    /**\n     * The property associated to the dropdown search fetch strategy.\n     *\n     */\n    @Input()\n    fetchStrategy?: 'eager' | 'onOpen';\n\n    /**\n     * The property associated to the dropdown search.\n     *\n     */\n    @Input()\n    property?: string;\n\n    /**\n     * The no selection placeholder.\n     *\n     */\n    @Input()\n    noFilterPlaceholder?: string;\n\n    /**\n     * Allow filter drill down\n     *\n     */\n    @Input()\n    drillDown = false;\n\n    /**\n     * Stream factory, used to resolve a stream for the provided options.\n     *\n     * @param searchTerm The current searched term.\n     * @param fetchSize The next chunk size that needs to be loaded.\n     */\n    @Input()\n    searchSourceFactory?: (searchTerm?: string, fetchSize?: number) => Observable>;\n\n    /**\n     * The current dropdown options.\n     *\n     */\n    @Input()\n    value?: ISuggestValue | ISuggestValue[];\n\n    /**\n     * Wether the filter should be rendered in the grid.\n     *\n     */\n    @Input()\n    get visible() { return this.visible$.value; }\n    set visible(visible: boolean) { this.visible$.next(visible); }\n\n    /**\n     * Allow multiple selection\n     *\n     */\n    @Input()\n    multiple = false;\n\n    /**\n     * @ignore\n     */\n    visible$ = new BehaviorSubject(true);\n\n    /**\n     * Updates the dropdown option.\n     *\n     */\n    updateValue(value?: ISuggestValue, isSelected?: boolean) {\n        if (this.multiple) {\n            this.handleMultiple(value, isSelected);\n        } else {\n            this.value = value;\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.filterChange.complete();\n    }\n\n    private handleMultiple(value?: ISuggestValue, isSelected?: boolean) {\n        if (!value) {\n            return;\n        }\n\n        if (!this.value) {\n            this.value = [];\n        }\n\n        if (isSelected) {\n            (this.value as ISuggestValue[]).push(value);\n        } else {\n            this.removeElement(value);\n        }\n    }\n\n    private removeElement(value: ISuggestValue) {\n        this.value = this.value as ISuggestValue[];\n\n        const index = this.value.findIndex(item => item.id === value.id);\n        if (index > -1) {\n            this.value.splice(index, 1);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiGridSearchModule.html":{"url":"modules/UiGridSearchModule.html","title":"module - UiGridSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    UiGridSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiGridSearchModule\n\n\n\ncluster_UiGridSearchModule_exports\n\n\n\ncluster_UiGridSearchModule_declarations\n\n\n\n\nUiGridSearchComponent\n\nUiGridSearchComponent\n\n\n\nUiGridSearchModule\n\nUiGridSearchModule\n\nUiGridSearchModule -->\n\nUiGridSearchComponent->UiGridSearchModule\n\n\n\n\n\nUiGridSearchComponent \n\nUiGridSearchComponent \n\nUiGridSearchComponent  -->\n\nUiGridSearchModule->UiGridSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiGridSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiGridSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { UiGridSearchComponent } from './ui-grid-search.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatInputModule,\n        MatTooltipModule,\n        ReactiveFormsModule,\n    ],\n    declarations: [UiGridSearchComponent],\n    exports: [UiGridSearchComponent],\n})\nexport class UiGridSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiGridToggleColumnsComponent.html":{"url":"components/UiGridToggleColumnsComponent.html","title":"component - UiGridToggleColumnsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiGridToggleColumnsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                COMPONENT_SELECTOR\n            \n\n            \n                styleUrls\n                ./ui-grid-toggle-columns.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui-grid-toggle-columns.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hostClass\n                            \n                            \n                                    Optional\n                                resetBtn\n                            \n                            \n                                    Optional\n                                selectColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                reset\n                            \n                            \n                                resetKeyDown\n                            \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dirty\n                            \n                            \n                                options\n                            \n                            \n                                resetToDefaults\n                            \n                            \n                                showDivider\n                            \n                            \n                                togglePlaceholderTitle\n                            \n                            \n                                toggleTitle\n                            \n                            \n                                toggleTooltip\n                            \n                            \n                                useLegacyDesign\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resetColumns\n                            \n                            \n                                visibleColumns\n                            \n                            \n                                visibleColumnsToggled\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, _cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:126\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dirty\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resetToDefaults\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:79\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showDivider\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        togglePlaceholderTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:82\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:76\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useLegacyDesign\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:70\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resetColumns\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:88\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visibleColumns\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:85\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visibleColumnsToggled\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:91\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : COMPONENT_SELECTOR\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetKeyDown\n                        \n                    \n                \n            \n            \n                \nresetKeyDown(e: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionChange\n                        \n                    \n                \n            \n            \n                \nselectionChange(undefined: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hostClass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : COMPONENT_SELECTOR\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resetBtn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatAnchor\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('resetBtn', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSelect\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSelect, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:94\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:65\n                                \n                            \n\n                \n                    \n                        setoptions(options: IVisibleModel[] | null)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            options\n                                                    \n                                                            \n                                                                            IVisibleModel[] | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts:99\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import isEqual from 'lodash-es/isEqual';\nimport {\n    fromEvent,\n    Subject,\n} from 'rxjs';\nimport {\n    filter,\n    takeUntil,\n} from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport type { MatAnchor } from '@angular/material/button';\nimport {\n    MatSelect,\n    MatSelectChange,\n} from '@angular/material/select';\n\nimport {\n    IGridDataEntry,\n    IVisibleModel,\n} from '../../models';\n\nconst COMPONENT_SELECTOR = 'ui-grid-toggle-columns';\n\n@Component({\n    selector: COMPONENT_SELECTOR,\n    templateUrl: './ui-grid-toggle-columns.component.html',\n    styleUrls: ['./ui-grid-toggle-columns.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiGridToggleColumnsComponent implements AfterViewInit, OnDestroy {\n    @HostBinding('class')\n    hostClass = COMPONENT_SELECTOR;\n\n    @HostBinding(`class.${COMPONENT_SELECTOR}-dirty`)\n    @Input()\n    dirty = false;\n\n    @Input()\n    showDivider = false;\n\n    @Input()\n    set options(options: IVisibleModel[] | null) {\n        if (!options || isEqual(this._options, options)) { return; }\n\n        this._options = options;\n        this._selected = options\n            .filter(({ checked }) => checked)\n            .map(o => o.property);\n    }\n    get options() {\n        return this._options;\n    }\n\n    @Input()\n    useLegacyDesign = false;\n\n    @Input()\n    toggleTooltip?: string;\n\n    @Input()\n    toggleTitle?: string;\n\n    @Input()\n    resetToDefaults?: string;\n\n    @Input()\n    togglePlaceholderTitle?: string;\n\n    @Output()\n    visibleColumns = new EventEmitter();\n\n    @Output()\n    resetColumns = new EventEmitter();\n\n    @Output()\n    visibleColumnsToggled = new EventEmitter();\n\n    @ViewChild(MatSelect, { static: false })\n    selectColumns?: MatSelect;\n\n    @ViewChild('resetBtn', { static: false })\n    resetBtn?: MatAnchor;\n\n    get selected() {\n        return this._selected;\n    }\n\n    private get _currentIndex() {\n        if (!this.selectColumns) { return null; }\n        // eslint-disable-next-line no-underscore-dangle\n        return this.selectColumns._keyManager.activeItemIndex;\n    }\n\n    private set _currentIndex(i: number | null) {\n        if (i == null || !this.selectColumns) { return; }\n        // eslint-disable-next-line no-underscore-dangle\n        this.selectColumns._keyManager.setActiveItem(i);\n    }\n\n    private get _isFirstValidIndex() {\n        return !this._isResetIndex &&\n            this._currentIndex === this._options.findIndex(o => !o.disabled);\n    }\n\n    private get _isResetIndex() {\n        return this._currentIndex === -1;\n    }\n\n    private _selected: (string | keyof T)[] = [];\n    private _options: IVisibleModel[] = [];\n    private _destroyed$ = new Subject();\n\n    constructor(\n        private _elementRef: ElementRef,\n        private _cd: ChangeDetectorRef,\n    ) { }\n\n    ngAfterViewInit() {\n        fromEvent(\n            this._elementRef.nativeElement,\n            'keydown',\n            { capture: true },\n        ).pipe(\n            filter(_ => this.dirty),\n            takeUntil(this._destroyed$),\n        ).subscribe(this._onKeyDown);\n\n        this.selectColumns!.openedChange\n            .pipe(\n                takeUntil(this._destroyed$),\n            )\n            .subscribe((open) => {\n                this.visibleColumnsToggled.emit(open);\n            });\n    }\n\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n\n    selectionChange({ value }: MatSelectChange) {\n        this._selected = value;\n        this._options\n            .forEach(c => c.checked = value.includes(c.property));\n\n        this.visibleColumns.emit(value);\n    }\n\n    reset() {\n        this.resetColumns.emit();\n        this.selectColumns!.close();\n        this.selectColumns!.focus();\n    }\n\n    resetKeyDown(e: KeyboardEvent) {\n        if (this._isArrowUp(e)) {\n            e.stopImmediatePropagation();\n            return;\n        }\n\n        if (this._isArrowDown(e)) {\n            this.selectColumns?.focus();\n        }\n    }\n\n    private _onKeyDown = (e: KeyboardEvent) => {\n        if (\n            this._isResetIndex &&\n            this._isArrowDown(e)\n        ) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            this.selectColumns?.focus();\n            // eslint-disable-next-line no-underscore-dangle\n            this.selectColumns?._keyManager.setFirstItemActive();\n            this._cd.detectChanges();\n        }\n\n        if (\n            this._isArrowUp(e) &&\n            this._isFirstValidIndex\n        ) {\n            e.stopPropagation();\n            this._focusOnReset();\n        }\n    };\n\n    private _isArrowUp(e: KeyboardEvent) {\n        return ['Up', 'ArrowUp'].includes(e.key);\n    }\n\n    private _isArrowDown(e: KeyboardEvent) {\n        return ['Down', 'ArrowDown'].includes(e.key);\n    }\n\n    private _focusOnReset() {\n        this._currentIndex = -1;\n        this.resetBtn?.focus('keyboard');\n        this._cd.detectChanges();\n    }\n}\n\n    \n\n    \n        \n    \n        table_chart\n        {{togglePlaceholderTitle}}\n        keyboard_arrow_down\n    \n\n    \n        \n            \n                view_column {{ toggleTitle }}\n            \n\n            \n                {{resetToDefaults}}\n            \n\n            {{ o.label }}\n        \n    \n\n    \n\n\n\n    \n        table_chart\n    \n\n\n    \n\n    \n                \n                    ./ui-grid-toggle-columns.component.scss\n                \n                $toggle-col-width: 10em;\n\n.ui-grid-toggle-columns {\n    margin-right: 6px;\n    padding-left: 0;\n    display: flex;\n\n    mat-divider {\n        margin-left: 6px;\n        height: 32px;\n        align-self: center;\n    }\n\n    mat-select {\n        overflow: hidden;\n        width: 0;\n        // adjustments in order to match trigger icon with optgroup-label icon\n        position: relative;\n        top: -10px;\n        left: -4px;\n\n        &.use-alternate {\n            top: -10px;\n            left: -67px;\n        }\n    }\n}\n\n// overlay panel\n.ui-grid-toggle-panel {\n    // IE fix - min-width with calc does not render properly so we add a fallback in case min-width is evaluated even lower\n    width: 210px !important;\n\n    .mat-optgroup-label {\n        padding-left: 12px;\n        display: flex;\n        padding-right: 6px;\n        justify-content: space-between;\n        align-items: center;\n\n        .mat-icon {\n            margin-right: 0;\n        }\n    }\n\n    &-alternate {\n        .mat-optgroup-label {\n            padding-right: 3px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            table_chart        {{togglePlaceholderTitle}}        keyboard_arrow_down                                            view_column {{ toggleTitle }}                                        {{resetToDefaults}}                        {{ o.label }}                            table_chart    '\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiGridToggleColumnsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiGridToggleColumnsModule.html":{"url":"modules/UiGridToggleColumnsModule.html","title":"module - UiGridToggleColumnsModule","body":"\n                   \n\n\n\n\n    Modules\n    UiGridToggleColumnsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiGridToggleColumnsModule\n\n\n\ncluster_UiGridToggleColumnsModule_declarations\n\n\n\ncluster_UiGridToggleColumnsModule_imports\n\n\n\ncluster_UiGridToggleColumnsModule_exports\n\n\n\n\nUiGridToggleColumnsComponent\n\nUiGridToggleColumnsComponent\n\n\n\nUiGridToggleColumnsModule\n\nUiGridToggleColumnsModule\n\nUiGridToggleColumnsModule -->\n\nUiGridToggleColumnsComponent->UiGridToggleColumnsModule\n\n\n\n\n\nUiGridToggleColumnsComponent \n\nUiGridToggleColumnsComponent \n\nUiGridToggleColumnsComponent  -->\n\nUiGridToggleColumnsModule->UiGridToggleColumnsComponent \n\n\n\n\n\nUiAutoAccessibleLabelModule\n\nUiAutoAccessibleLabelModule\n\nUiGridToggleColumnsModule -->\n\nUiAutoAccessibleLabelModule->UiGridToggleColumnsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiGridToggleColumnsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiAutoAccessibleLabelModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiGridToggleColumnsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { UiAutoAccessibleLabelModule } from '@uipath/angular/a11y';\n\nimport { UiGridToggleColumnsComponent } from './ui-grid-toggle-columns.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatDividerModule,\n        UiAutoAccessibleLabelModule,\n    ],\n    declarations: [UiGridToggleColumnsComponent],\n    exports: [UiGridToggleColumnsComponent],\n})\nexport class UiGridToggleColumnsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiLoaderButtonDirective.html":{"url":"directives/UiLoaderButtonDirective.html","title":"directive - UiLoaderButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiLoaderButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/internal/src/ui-loader-button.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderType: Type, _componentFactory: ComponentFactoryResolver, _container: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/directives/internal/src/ui-loader-button.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderType\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _componentFactory\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _container\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/internal/src/ui-loader-button.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/internal/src/ui-loader-button.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    OnChanges,\n    OnDestroy,\n    SimpleChange,\n    SimpleChanges,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\n@Directive()\nexport abstract class UiLoaderButtonDirective implements OnChanges, OnDestroy {\n    protected _loader: T;\n    protected _loaderElement: HTMLElement;\n    protected _loaderRef: ComponentRef;\n\n    protected get _buttonElement(): HTMLButtonElement {\n        return this._container.element.nativeElement;\n    }\n\n    private _watchers = new Map void>();\n\n    constructor(\n        loaderType: Type,\n        private _componentFactory: ComponentFactoryResolver,\n        private _container: ViewContainerRef,\n    ) {\n        this._loaderRef = this._createLoader(loaderType);\n        this._loader = this._loaderRef.instance;\n        this._loaderElement = this._loaderRef.location.nativeElement;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this._loaderElement) { return; }\n\n        for (const watcher of this._watchers) {\n            const [key, action] = watcher;\n\n            this._doIfChange(changes[key as string], action);\n        }\n    }\n\n    ngOnDestroy() {\n        this._loaderRef.destroy();\n    }\n\n    protected _initialize() {\n        this._watchers\n            .forEach(action => {\n                action();\n            });\n    }\n\n    protected _registerWatcher = (key: string, action: () => void) => {\n        this._watchers.set(key, action);\n    };\n\n    protected _createLoader = (type: Type) => {\n        const factory = this._componentFactory.resolveComponentFactory(type);\n        return this._container.createComponent(factory, 0, this._container.injector);\n    };\n\n    protected _doIfChange = (change: SimpleChange, action: () => void) => {\n        if (\n            !change ||\n            change.currentValue === change.previousValue\n        ) { return; }\n\n        action();\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiMatFormFieldRequiredDirective.html":{"url":"directives/UiMatFormFieldRequiredDirective.html","title":"directive - UiMatFormFieldRequiredDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiMatFormFieldRequiredDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        mat-form-field\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_overlay: Overlay, _elemRef: ElementRef, _scrollDispatcher: ScrollDispatcher, _viewContainerRef: ViewContainerRef, _ngZone: NgZone, _platform: Platform, _ariaDescriber: AriaDescriber, _focusMonitor: FocusMonitor, _scrollStrategy: any, _dir: Directionality, _defaultOptions: MatTooltipDefaultOptions, _document: any, intl: UiMatFormFieldRequiredIntl)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _elemRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scrollDispatcher\n                                                  \n                                                        \n                                                                    ScrollDispatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ariaDescriber\n                                                  \n                                                        \n                                                                    AriaDescriber\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scrollStrategy\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _dir\n                                                  \n                                                        \n                                                                    Directionality\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _defaultOptions\n                                                  \n                                                        \n                                                                    MatTooltipDefaultOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        intl\n                                                  \n                                                        \n                                                                        UiMatFormFieldRequiredIntl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        intl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UiMatFormFieldRequiredIntl\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.ts:81\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matControl\n                    \n                \n\n\n                \n                    \n                        setmatControl(matControl: MatFormFieldControl)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            matControl\n                                                    \n                                                            \n                                                                        MatFormFieldControl\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    Subject,\n    Subscription,\n} from 'rxjs';\nimport {\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AriaDescriber,\n    FocusMonitor,\n} from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ContentChild,\n    Directive,\n    ElementRef,\n    Inject,\n    NgZone,\n    OnDestroy,\n    Optional,\n    ViewContainerRef,\n} from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport {\n    MatTooltip,\n    MatTooltipDefaultOptions,\n    MAT_TOOLTIP_DEFAULT_OPTIONS,\n    MAT_TOOLTIP_SCROLL_STRATEGY,\n} from '@angular/material/tooltip';\n\nimport { UiMatFormFieldRequiredIntl } from './ui-matformfield-required.directive.intl';\n\nconst MATFORMFIELD_LABEL_SELECTOR = '.mat-form-field-label-wrapper label';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: `mat-form-field`,\n})\nexport class UiMatFormFieldRequiredDirective implements AfterViewInit, OnDestroy {\n    @ContentChild(MatFormFieldControl)\n    set matControl(matControl: MatFormFieldControl) {\n        if (this._matControlSubscription) {\n            this._matControlSubscription.unsubscribe();\n        }\n        this._matControlSubscription = matControl.stateChanges.pipe(\n            takeUntil(this._destroyed$),\n        ).subscribe(this._updateDisableTooltipProperty(matControl));\n    }\n\n    private _matControlSubscription?: Subscription;\n    private _tooltip?: MatTooltip;\n    private _labelElement?: HTMLElement;\n    private _destroyed$ = new Subject();\n\n    constructor(\n        private _overlay: Overlay,\n        private _elemRef: ElementRef,\n        private _scrollDispatcher: ScrollDispatcher,\n        private _viewContainerRef: ViewContainerRef,\n        private _ngZone: NgZone,\n        private _platform: Platform,\n        private _ariaDescriber: AriaDescriber,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MAT_TOOLTIP_SCROLL_STRATEGY)\n        private _scrollStrategy: any,\n        @Optional()\n        private _dir: Directionality,\n        @Optional()\n        @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n        private _defaultOptions: MatTooltipDefaultOptions,\n        @Inject(DOCUMENT)\n        private _document: any,\n        @Optional()\n        public intl: UiMatFormFieldRequiredIntl) {\n        this.intl = this.intl || new UiMatFormFieldRequiredIntl();\n    }\n\n    ngAfterViewInit() {\n        // attach tooltip on the span, which is the parent of label\n        this._labelElement = this._elemRef.nativeElement.querySelector(MATFORMFIELD_LABEL_SELECTOR)?.parentNode;\n\n        if (this._elemRef.nativeElement.querySelector('[required]')\n            && !this._elemRef.nativeElement.classList.contains('mat-form-field-disabled')) {\n            this._createMatTooltip();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n\n    private _updateDisableTooltipProperty(matControl: MatFormFieldControl) {\n        return () => {\n            if (this._tooltip && (!matControl.required || matControl.disabled)) {\n                this._tooltip.disabled = true;\n            }\n            if (matControl.required && !matControl.disabled) {\n                if (this._tooltip) {\n                    this._tooltip.disabled = false;\n                } else {\n                    this._createMatTooltip();\n                }\n            }\n        };\n    }\n\n    private _createMatTooltip() {\n        if (!this._labelElement) { return; }\n\n        const labelElementRef = new ElementRef(this._labelElement!);\n        // FIXME: should find another way to instantiate the MatTooltip\n        // https://github.com/angular/angular/issues/8785\n        this._tooltip = new MatTooltip(\n            this._overlay,\n            labelElementRef,\n            this._scrollDispatcher,\n            this._viewContainerRef,\n            this._ngZone,\n            this._platform,\n            this._ariaDescriber,\n            this._focusMonitor,\n            this._scrollStrategy,\n            this._dir,\n            this._defaultOptions,\n            this._document,\n        );\n\n        this._tooltip.message = this.intl.tooltipMessage;\n        // eslint-disable-next-line @angular-eslint/no-lifecycle-call\n        this._tooltip.ngAfterViewInit();\n\n        this.intl.changes.pipe(\n            tap(() => this._tooltip!.message = this.intl.tooltipMessage),\n            takeUntil(this._destroyed$),\n        ).subscribe();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiMatFormFieldRequiredIntl.html":{"url":"injectables/UiMatFormFieldRequiredIntl.html","title":"injectable - UiMatFormFieldRequiredIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiMatFormFieldRequiredIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.intl.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changes\n                            \n                            \n                                tooltipMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.intl.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.intl.ts:15\n                        \n                    \n\n            \n                \n                    Notify if changes have occured that require that the labels be updated.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltipMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'This field is required.'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.intl.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\n\nimport {\n    Injectable,\n    OnDestroy,\n} from '@angular/core';\n\n@Injectable()\nexport class UiMatFormFieldRequiredIntl implements OnDestroy {\n    /**\n     * Notify if changes have occured that require that the labels be updated.\n     *\n     */\n    // eslint-disable-next-line rxjs/finnish\n    changes = new Subject();\n\n    tooltipMessage = 'This field is required.';\n\n    ngOnDestroy() {\n        this.changes.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiMatFormFieldRequiredModule.html":{"url":"modules/UiMatFormFieldRequiredModule.html","title":"module - UiMatFormFieldRequiredModule","body":"\n                   \n\n\n\n\n    Modules\n    UiMatFormFieldRequiredModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiMatFormFieldRequiredModule\n\n\n\ncluster_UiMatFormFieldRequiredModule_exports\n\n\n\ncluster_UiMatFormFieldRequiredModule_declarations\n\n\n\n\nUiMatFormFieldRequiredDirective\n\nUiMatFormFieldRequiredDirective\n\n\n\nUiMatFormFieldRequiredModule\n\nUiMatFormFieldRequiredModule\n\nUiMatFormFieldRequiredModule -->\n\nUiMatFormFieldRequiredDirective->UiMatFormFieldRequiredModule\n\n\n\n\n\nUiMatFormFieldRequiredDirective \n\nUiMatFormFieldRequiredDirective \n\nUiMatFormFieldRequiredDirective  -->\n\nUiMatFormFieldRequiredModule->UiMatFormFieldRequiredDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiMatFormFieldRequiredDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiMatFormFieldRequiredDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiMatFormFieldRequiredDirective } from './ui-matformfield-required.directive';\n\n@NgModule({\n    declarations: [UiMatFormFieldRequiredDirective],\n    exports: [UiMatFormFieldRequiredDirective],\n})\nexport class UiMatFormFieldRequiredModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiMatPaginatorIntl.html":{"url":"injectables/UiMatPaginatorIntl.html","title":"injectable - UiMatPaginatorIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiMatPaginatorIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MatPaginatorIntl\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPageLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPageLabel\n                        \n                    \n                \n            \n            \n                \ngetPageLabel(currentPage: number, pageCount?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    HostBinding,\n    Inject,\n    Injectable,\n    Optional,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\nimport {\n    MatPaginatorDefaultOptions,\n    MatPaginatorIntl,\n    MAT_PAGINATOR_DEFAULT_OPTIONS,\n    _MatPaginatorBase,\n} from '@angular/material/paginator';\n\n@Injectable()\nexport class UiMatPaginatorIntl extends MatPaginatorIntl {\n    getPageLabel(currentPage: number, pageCount?: number): string {\n        if (!pageCount) {\n            return `Page ${currentPage}`;\n        }\n        return `Page ${currentPage} / ${pageCount}`;\n    }\n}\n\n@Component({\n    selector: 'ui-grid-custom-paginator',\n    templateUrl: './ui-grid-custom-paginator.component.html',\n    styleUrls: ['./ui-grid-custom-paginator.component.scss'],\n    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class UiGridCustomPaginatorComponent extends _MatPaginatorBase {\n    // eslint-disable-next-line\n    public _formFieldAppearance?: MatFormFieldAppearance;\n    // eslint-disable-next-line\n    public _intl!: UiMatPaginatorIntl;\n\n    @HostBinding('class')\n    hostClass = 'mat-paginator';\n\n    get pageCount(): number {\n        return Math.ceil(this.length / this.pageSize);\n    }\n\n    constructor(\n        changeDetectorRef: ChangeDetectorRef,\n        @Optional()\n        intl?: UiMatPaginatorIntl,\n        @Optional()\n        @Inject(MAT_PAGINATOR_DEFAULT_OPTIONS)\n        defaults?: MatPaginatorDefaultOptions,\n    ) {\n        super(intl ?? new UiMatPaginatorIntl(), changeDetectorRef, defaults);\n\n        if (defaults?.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UiMatSnackBarConfig.html":{"url":"classes/UiMatSnackBarConfig.html","title":"class - UiMatSnackBarConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UiMatSnackBarConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                restrictHtml\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        restrictHtml\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:149\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ComponentPortal,\n    ComponentType,\n} from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector,\n    Optional,\n    TemplateRef,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    MatSnackBar,\n    MatSnackBarConfig,\n    MatSnackBarRef,\n    MAT_SNACK_BAR_DATA,\n    MAT_SNACK_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/snack-bar';\n\nimport { UiSnackbarIntl } from './ui-snackbar.intl';\n\ninterface ISnackBarAlert {\n    /**\n     * Alert message\n     */\n    message: string | TemplateRef | ComponentType;\n    /**\n     * Optional action button message,\n     * will emit `dismissWithAction` on click\n     */\n    actionMessage?: string;\n    /**\n     * How long to remain on the screen\n     */\n    duration: number;\n    /**\n     * Material icon to be used in snackbar\n     */\n    icon?: string;\n    /**\n     * Aria label for screen-readers on close button\n     */\n    closeAriaLabel?: string;\n    /**\n     * Additional information to pass to components. Can be used by injecting `UI_MAT_SNACK_BAR_PAYLOAD`.\n     */\n    payload?: unknown;\n    /**\n     *  Extra CSS classes to be added to the snack bar container.\n     */\n    extraCssClasses?: string[];\n}\n\n@Component({\n    templateUrl: './ui-snackbar.component.html',\n    styleUrls: [\n        './ui-snackbar.component.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiSnackBarComponent {\n    private _componentPortal?: ComponentPortal;\n\n    get componentPortal() {\n        if (typeof this.data.message !== 'function') {\n            throw new Error('`componentPortal` getter cannot be used when `data.message` is not a component type');\n        }\n\n        this._componentPortal ??= new ComponentPortal(\n            this.data.message,\n            null,\n            Injector.create({\n                providers: [\n                    {\n                        provide: UI_MAT_SNACK_BAR_PAYLOAD,\n                        useValue: this.data.payload,\n                    },\n                ],\n                parent: this._injector,\n\n            }),\n        );\n\n        return this._componentPortal;\n    }\n\n    constructor(\n        @Inject(MAT_SNACK_BAR_DATA)\n        public data: ISnackBarAlert,\n        public snackBarRef: MatSnackBarRef,\n        private _injector: Injector,\n    ) { }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isPropertyString(property: unknown): property is string {\n        return typeof property === 'string';\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isTemplateRef(property: unknown): property is TemplateRef {\n        return property instanceof TemplateRef;\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isComponentType(property: unknown): property is ComponentType {\n        return typeof property === 'function';\n    }\n}\n\nexport enum SnackBarType {\n    Info = 'info',\n    Error = 'error',\n    Warning = 'warning',\n    Success = 'success',\n    None = 'none',\n}\n\nexport const ICON_MAP: Map = new Map([\n    [SnackBarType.Info, 'info'],\n    [SnackBarType.Success, 'check_circle'],\n    [SnackBarType.Warning, 'warning'],\n    [SnackBarType.Error, 'error'],\n]);\nexport type SnackbarAction = (\n    message: string | TemplateRef | ComponentType,\n    config?: {\n        actionMessage?: string;\n        duration?: number;\n        payload?: unknown;\n        extraCssClasses?: string[];\n    },\n) => MatSnackBarRef;\n\nexport class UiMatSnackBarConfig {\n    restrictHtml = false;\n}\n\nexport const UI_MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('UiMatSnackBarConfig');\nexport const UI_MAT_SNACK_BAR_PAYLOAD = new InjectionToken('UiSnackBarService Payload');\n\n/**\n * Snackbar config options\n */\ninterface ISnackBarOptions extends Partial> {\n    /**\n     * The type of the alert (info, success, warning or error)\n     */\n    type?: SnackBarType;\n}\n\nexport const panelClass = (type: SnackBarType) =>\n    `ui-snackbar-${type}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiSnackBarService {\n\n    /**\n     * Display an info snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    info: SnackbarAction;\n    /**\n     * Display an error snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    error: SnackbarAction;\n    /**\n     * Display an success snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    success: SnackbarAction;\n    /**\n     * Display an warning snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    warning: SnackbarAction;\n    private _ref?: MatSnackBarRef;\n\n    constructor(\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        private _options: MatSnackBarConfig,\n        @Optional()\n        private readonly _snackIntl: UiSnackbarIntl,\n        @Inject(UI_MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        @Optional()\n        private _additionalOptions?: UiMatSnackBarConfig,\n    ) {\n        this._snackIntl = this._snackIntl ||\n            new UiSnackbarIntl();\n\n        this.info = this._alertFactory(SnackBarType.Info);\n        this.error = this._alertFactory(SnackBarType.Error);\n        this.success = this._alertFactory(SnackBarType.Success);\n        this.warning = this._alertFactory(SnackBarType.Warning);\n    }\n\n    /**\n     * Display a snackbar (customizable)\n     *\n     * @param message The message to be displayed\n     * @param options Customize default options: snackbar type, icon, display duration, and action message\n     */\n    show = (\n        message: string | TemplateRef | ComponentType,\n        { type, duration, icon, actionMessage, payload, extraCssClasses }: ISnackBarOptions = {},\n    ) =>\n        this._alert(type ?? SnackBarType.None, {\n            message,\n            icon: icon ?? ICON_MAP.get(type!),\n            duration: duration || duration === 0 ? duration : this._options.duration!,\n            actionMessage,\n            payload,\n            extraCssClasses,\n        });\n\n    /**\n     * Dismiss the displayed snackbar\n     */\n    clear() {\n        if (!this._ref) { return; }\n\n        this._ref.dismiss();\n    }\n\n    private _alertFactory = (type: SnackBarType) =>\n        (\n            message: string | TemplateRef | ComponentType,\n            config?: { actionMessage?: string; duration?: number; payload?: unknown; extraCssClasses?: string[] }) =>\n            this._alert(type, {\n                message,\n                actionMessage: config?.actionMessage,\n                icon: ICON_MAP.get(type),\n                duration: config?.duration || config?.duration === 0\n                    ? config.duration\n                    : this._options.duration!,\n                payload: config?.payload,\n                extraCssClasses: config?.extraCssClasses,\n            });\n\n    private _alert(type: SnackBarType, options: ISnackBarAlert) {\n        if (\n            this._additionalOptions?.restrictHtml &&\n            typeof options.message === 'string'\n        ) {\n            const span = document.createElement('span');\n            span.innerText = options.message;\n            options.message = span.innerHTML;\n            span.remove();\n        }\n\n        const extraPanelClasses = options.extraCssClasses ?? [];\n        this._ref = this._snackBar.openFromComponent(UiSnackBarComponent, {\n            data: {\n                closeAriaLabel: this._snackIntl.closeSnackbarShortcut,\n                ...options,\n            },\n            duration: options.duration,\n            panelClass: [panelClass(type), ...extraPanelClasses],\n        });\n\n        return this._ref;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiNgLetDirective.html":{"url":"directives/UiNgLetDirective.html","title":"directive - UiNgLetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiNgLetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-ng-let/src/ui-ng-let.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that allows declaration of streams inside the template.\nSimilar to *ngIf=\"source$ | async as source\".\nNgLet works the same way, the difference being that the content is rendered,\neven if the source has not yet been initialized.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngLet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngLet\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngLet\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-ng-let/src/ui-ng-let.directive.ts:36\n                            \n                        \n                \n                    \n                        The context bound to the decorated area.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n\n\n                \n                    \n                        setngLet(value: T)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-ng-let/src/ui-ng-let.directive.ts:36\n                                \n                            \n                    \n                        \n                                The context bound to the decorated area.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    Directive,\n    Input,\n    TemplateRef,\n    ViewContainerRef,\n} from '@angular/core';\n\n/**\n * @ignore\n */\nclass NgLetContext {\n    $implicit: T = null!;\n    ngLet: T = null!;\n}\n\n/**\n * A directive that allows declaration of streams inside the `template`.\n * Similar to `*ngIf=\"source$ | async as source\"`.\n * `NgLet` works the same way, the difference being that the content is rendered,\n * even if the source has not yet been initialized.\n *\n * @export\n */\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[ngLet]',\n})\nexport class UiNgLetDirective {\n    private _context = new NgLetContext();\n\n    /**\n     * The context bound to the decorated area.\n     *\n     */\n    @Input()\n    set ngLet(value: T) {\n        this._context.$implicit = this._context.ngLet = value;\n    }\n\n    /**\n     * @ignore\n     */\n    constructor(\n        private _vcr: ViewContainerRef,\n        private _templateRef: TemplateRef>,\n    ) {\n        this._vcr.createEmbeddedView(\n            this._templateRef,\n            this._context,\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiNgLetModule.html":{"url":"modules/UiNgLetModule.html","title":"module - UiNgLetModule","body":"\n                   \n\n\n\n\n    Modules\n    UiNgLetModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiNgLetModule\n\n\n\ncluster_UiNgLetModule_declarations\n\n\n\ncluster_UiNgLetModule_exports\n\n\n\n\nUiNgLetDirective\n\nUiNgLetDirective\n\n\n\nUiNgLetModule\n\nUiNgLetModule\n\nUiNgLetModule -->\n\nUiNgLetDirective->UiNgLetModule\n\n\n\n\n\nUiNgLetDirective \n\nUiNgLetDirective \n\nUiNgLetDirective  -->\n\nUiNgLetModule->UiNgLetDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-ng-let/src/ui-ng-let.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiNgLetDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiNgLetDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiNgLetDirective } from './ui-ng-let.directive';\n\n@NgModule({\n    declarations: [UiNgLetDirective],\n    exports: [UiNgLetDirective],\n})\nexport class UiNgLetModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UiNl2BrPipe.html":{"url":"pipes/UiNl2BrPipe.html","title":"pipe - UiNl2BrPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UiNl2BrPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/pipes/src/nl2br/nl2br.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        nl2br\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/pipes/src/nl2br/nl2br.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n@Pipe({ name: 'nl2br' })\nexport class UiNl2BrPipe implements PipeTransform {\n    transform(value?: string | null) {\n        return value ?\n            value\n                .replace(/\\r\\n/g, '')\n                .replace(/\\r/g, '')\n                .replace(/\\n/g, '')\n            :\n            null;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiPasswordComplexityIntl.html":{"url":"injectables/UiPasswordComplexityIntl.html","title":"injectable - UiPasswordComplexityIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiPasswordComplexityIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-password-indicator/src/ui-password-indicator.intl.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allMet\n                            \n                            \n                                changes\n                            \n                            \n                                notMet\n                            \n                            \n                                percentageTitle\n                            \n                            \n                                ruleLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allMet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'All complexity rules are met'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.intl.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.intl.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notMet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Complexity rules not met:'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.intl.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        percentageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.intl.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ruleLabel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.intl.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import startCase from 'lodash-es/startCase';\nimport { Subject } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiPasswordComplexityIntl {\n    // eslint-disable-next-line rxjs/finnish\n    changes = new Subject();\n    notMet = 'Complexity rules not met:';\n    allMet = 'All complexity rules are met';\n\n    ruleLabel = (ruleKey: string) => startCase(ruleKey);\n    percentageTitle = (percentage: number) => `${percentage}%`;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiPasswordIndicatorComponent.html":{"url":"components/UiPasswordIndicatorComponent.html","title":"component - UiPasswordIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiPasswordIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-password-indicator\n            \n\n            \n                styleUrls\n                ./ui-password-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui-password-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intl\n                            \n                            \n                                isErrorState$\n                            \n                            \n                                percentage$\n                            \n                            \n                                rules$\n                            \n                            \n                                state$\n                            \n                            \n                                trackByKey\n                            \n                            \n                                visibleRules$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                hideValidRuleDefinition\n                            \n                            \n                                passwordRules\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(intl: UiPasswordComplexityIntl, _announcer: LiveAnnouncer)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        intl\n                                                  \n                                                        \n                                                                        UiPasswordComplexityIntl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _announcer\n                                                  \n                                                        \n                                                                    LiveAnnouncer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         AbstractControl\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideValidRuleDefinition\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordRules\n                    \n                \n                \n                    \n                        Type :         IPasswordRuleSet\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:55\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        intl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UiPasswordComplexityIntl\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isErrorState$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        percentage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rules$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visibleRules$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n    combineLatest,\n    Observable,\n    Subject,\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    map,\n    share,\n    takeUntil,\n} from 'rxjs/operators';\n\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n} from '@angular/core';\nimport type { AbstractControl } from '@angular/forms';\n\nimport {\n    PROGRESS_ANIMATION,\n    RULE_ITEM_ANIMATION,\n    RULE_LIST_ANIMATION,\n} from './ui-password-indicator.animations';\nimport { UiPasswordComplexityIntl } from './ui-password-indicator.intl';\nimport {\n    IPasswordRuleSet,\n    IRuleValidationState,\n    VALIDATION_RULE_NAME,\n} from './ui-password-indicator.validator';\n\ntype RulesAndStates = [string[], IRuleValidationState];\n\n@Component({\n    selector: 'ui-password-indicator',\n    templateUrl: './ui-password-indicator.component.html',\n    styleUrls: ['./ui-password-indicator.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        RULE_ITEM_ANIMATION,\n        RULE_LIST_ANIMATION,\n        PROGRESS_ANIMATION,\n    ],\n})\nexport class UiPasswordIndicatorComponent implements OnInit, OnDestroy {\n    @Input()\n    control!: AbstractControl;\n\n    @Input()\n    passwordRules!: IPasswordRuleSet;\n\n    @Input()\n    hideValidRuleDefinition = false;\n\n    state$!: Observable;\n    rules$!: Observable;\n    visibleRules$!: Observable;\n    percentage$!: Observable;\n    isErrorState$!: Observable;\n\n    private _destroyed$ = new Subject();\n\n    constructor(\n        public intl: UiPasswordComplexityIntl,\n        private _announcer: LiveAnnouncer,\n    ) { }\n\n    ngOnInit() {\n        this.state$ = this.control\n            .valueChanges\n            .pipe(\n                map(() => this.control.getError(VALIDATION_RULE_NAME) || {}),\n                share(),\n                takeUntil(this._destroyed$),\n            );\n\n        this.isErrorState$ = this.control\n            .statusChanges\n            .pipe(\n                map(this._mapDirtyState),\n                takeUntil(this._destroyed$),\n            );\n\n        this.rules$ = this.state$\n            .pipe(\n                map(() => Object.keys(this.passwordRules || {})),\n                share(),\n            );\n\n        const rulesAndState$ = combineLatest([\n            this.rules$,\n            this.state$,\n        ]).pipe(\n            share(),\n        );\n\n        this.visibleRules$ = rulesAndState$\n            .pipe(\n                map(this._mapVisibleRules),\n            );\n\n        this.percentage$ = rulesAndState$\n            .pipe(\n                map(this._calculatePercentage),\n                distinctUntilChanged(),\n            );\n\n        this.state$.pipe(\n            distinctUntilChanged(\n                (left, right) => Object.values(left).join('') === Object.values(right).join(''),\n            ),\n            takeUntil(this._destroyed$),\n        ).subscribe(this._announceChanges);\n    }\n\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n\n    trackByKey = (_id: number, key: string) => key;\n\n    private _mapDirtyState = () => this.control.dirty &&\n        this.control.hasError(VALIDATION_RULE_NAME);\n\n    private _calculatePercentage = ([rules, state]: RulesAndStates) => {\n        if (!state) { return 100; }\n\n        const increment = 100 / rules.length;\n\n        const validationPercentage = rules\n            .reduce(\n                (percentage, ruleKey) => !state[ruleKey] ? percentage + increment : percentage,\n                0,\n            );\n\n        return validationPercentage;\n    };\n\n    private _mapVisibleRules = ([rules, state]: RulesAndStates) => this.hideValidRuleDefinition ?\n        rules.filter(rule => state[rule]) :\n        rules;\n\n    private _announceChanges = (state: IRuleValidationState) => {\n        const rulesNotMet = Object.keys(this.passwordRules || {})\n            .filter(\n                rule => state[rule],\n            )\n            .map(\n                rule => this.intl.ruleLabel(rule),\n            );\n\n        this._announcer.announce(\n            rulesNotMet.length\n                ? `${this.intl.notMet} ${rulesNotMet.join(', ')}`\n                : this.intl.allMet,\n            'polite',\n        );\n    };\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n        \n        \n            \n                \n                    \n                        check_circle\n                        \n                            error\n                        \n                    \n                    \n                        {{ intl.ruleLabel(rule) }}\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./ui-password-indicator.component.scss\n                \n                $progress-height: 1px;\n$progress-top: 30px;\n\nui-password-indicator {\n    display: block;\n    position: absolute;\n    width: 100%;\n    top: $progress-top;\n    z-index: 1;\n\n    .ui-password-progress-container {\n        /* Hide leaking glow from mat-form-field-underline */\n        border-top-width: 2px;\n        border-top-style: solid;\n        border-bottom-width: 2px;\n        border-bottom-style: solid;\n\n        .mat-progress-bar {\n            height: $progress-height;\n        }\n    }\n\n    .mat-list {\n        padding-top: 0;\n        display: inline-flex;\n\n        $font-size: 75%;\n\n        .mat-list-item {\n            &.mat-2-line {\n                height: $font-size;\n            }\n\n            .mat-list-text {\n                flex-direction: row;\n                align-items: center;\n\n                .ui-password-rule-label {\n                    font-size: $font-size;\n                }\n\n                mat-icon {\n                    /* Force Font Smoothing (small sizes of icon fonts get edgy 😢) */\n                    transform: rotate(0.03deg);\n                    font-size: $font-size;\n                    width: $font-size;\n                    height: $font-size;\n                    line-height: $font-size;\n                    margin-right: 2px;\n                }\n            }\n\n            &:not(:last-child) {\n                margin-right: 5px;\n            }\n\n            .mat-list-item-content {\n                padding: 0;\n            }\n        }\n    }\n}\n\n.mat-form-field {\n    &.mat-focused {\n        ui-password-indicator {\n            top: $progress-top - 1px;\n\n            .ui-password-progress-container {\n                .mat-progress-bar {\n                    height: $progress-height + 1px;\n                }\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                            check_circle                                                    error                                                                                        {{ intl.ruleLabel(rule) }}                                                            '\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiPasswordIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiPasswordIndicatorModule.html":{"url":"modules/UiPasswordIndicatorModule.html","title":"module - UiPasswordIndicatorModule","body":"\n                   \n\n\n\n\n    Modules\n    UiPasswordIndicatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiPasswordIndicatorModule\n\n\n\ncluster_UiPasswordIndicatorModule_imports\n\n\n\ncluster_UiPasswordIndicatorModule_exports\n\n\n\ncluster_UiPasswordIndicatorModule_declarations\n\n\n\n\nUiPasswordIndicatorComponent\n\nUiPasswordIndicatorComponent\n\n\n\nUiPasswordIndicatorModule\n\nUiPasswordIndicatorModule\n\nUiPasswordIndicatorModule -->\n\nUiPasswordIndicatorComponent->UiPasswordIndicatorModule\n\n\n\n\n\nUiPasswordIndicatorComponent \n\nUiPasswordIndicatorComponent \n\nUiPasswordIndicatorComponent  -->\n\nUiPasswordIndicatorModule->UiPasswordIndicatorComponent \n\n\n\n\n\nUiNgLetModule\n\nUiNgLetModule\n\nUiPasswordIndicatorModule -->\n\nUiNgLetModule->UiPasswordIndicatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/components/ui-password-indicator/src/ui-password-indicator.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiPasswordIndicatorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiNgLetModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiPasswordIndicatorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { UiNgLetModule } from '@uipath/angular/directives/ui-ng-let';\n\nimport { UiPasswordIndicatorComponent } from './ui-password-indicator.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatListModule,\n        MatProgressBarModule,\n        MatIconModule,\n        UiNgLetModule,\n    ],\n    declarations: [\n        UiPasswordIndicatorComponent,\n    ],\n    exports: [\n        UiPasswordIndicatorComponent,\n    ],\n})\nexport class UiPasswordIndicatorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiPasswordToggleComponent.html":{"url":"components/UiPasswordToggleComponent.html","title":"component - UiPasswordToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiPasswordToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-password-toggle\n            \n\n\n\n\n            \n                templateUrl\n                ./ui-password-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible$\n                            \n                            \n                                tooltip$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_intl: UiPasswordToggleIntl, _renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _intl\n                                                  \n                                                        \n                                                                        UiPasswordToggleIntl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts:44\n                            \n                        \n                \n                    \n                        The disabled state of the toggle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :     HTMLInputElement\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts:37\n                            \n                        \n                \n                    \n                        The input element that needs to be toggled.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts:50\n                        \n                    \n\n            \n                \n                    Emits the password input visibility state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts:56\n                        \n                    \n\n            \n                \n                    Emits the password toggle active tooltip.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n    BehaviorSubject,\n    combineLatest,\n    Observable,\n    Subject,\n} from 'rxjs';\nimport {\n    map,\n    startWith,\n    takeUntil,\n} from 'rxjs/operators';\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Renderer2,\n} from '@angular/core';\n\nimport { UiPasswordToggleIntl } from './ui-password-toggle.intl';\n\n@Component({\n    selector: 'ui-password-toggle',\n    templateUrl: './ui-password-toggle.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiPasswordToggleComponent implements OnInit, OnDestroy {\n    /**\n     * The input element that needs to be toggled.\n     *\n     */\n    @Input()\n    element?: HTMLInputElement;\n\n    /**\n     * The disabled state of the toggle.\n     *\n     */\n    @Input()\n    disabled?: boolean;\n\n    /**\n     * Emits the password input visibility state.\n     *\n     */\n    isVisible$ = new BehaviorSubject(false);\n\n    /**\n     * Emits the password toggle active tooltip.\n     *\n     */\n    tooltip$: Observable;\n\n    private _destroyed$ = new Subject();\n\n    private get _isVisible() {\n        return this.isVisible$.value;\n    }\n\n    constructor(\n        @Inject(UiPasswordToggleIntl)\n        @Optional()\n        private _intl: UiPasswordToggleIntl,\n        private _renderer: Renderer2,\n    ) {\n        this._intl = this._intl || new UiPasswordToggleIntl();\n\n        this.tooltip$ = combineLatest([\n            this.isVisible$,\n            this._intl.changes\n                .pipe(startWith(void 0)),\n        ]).pipe(\n            map(([isVisible]) => isVisible ? this._intl.tooltipHide : this._intl.tooltipShow),\n            takeUntil(this._destroyed$),\n        );\n    }\n\n    ngOnInit() {\n        if (\n            !!this.element &&\n            this.element instanceof HTMLInputElement\n        ) { return; }\n\n        throw new Error('The password toggle must be bound to an input element!');\n    }\n\n    ngOnDestroy() {\n        this.isVisible$.complete();\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n\n    toggle() {\n        this._toggleVisibiltyState();\n\n        const type = this._isVisible ? 'text' : 'password';\n        this._renderer.setProperty(this.element, 'type', type);\n    }\n\n    private _toggleVisibiltyState = () => {\n        this.isVisible$.next(!this._isVisible);\n    };\n}\n\n    \n\n    \n        \n    \n        {{ state?.isVisible ? 'visibility' : 'visibility_off' }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ state?.isVisible ? \\'visibility\\' : \\'visibility_off\\' }}    '\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiPasswordToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiPasswordToggleIntl.html":{"url":"injectables/UiPasswordToggleIntl.html","title":"injectable - UiPasswordToggleIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiPasswordToggleIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-password-toggle/src/ui-password-toggle.intl.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changes\n                            \n                            \n                                tooltipHide\n                            \n                            \n                                tooltipShow\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.intl.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltipHide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Hide'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.intl.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltipShow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Show'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-password-toggle/src/ui-password-toggle.intl.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UiPasswordToggleIntl {\n    // eslint-disable-next-line rxjs/finnish\n    changes = new Subject();\n\n    tooltipShow = 'Show';\n    tooltipHide = 'Hide';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiPasswordToggleModule.html":{"url":"modules/UiPasswordToggleModule.html","title":"module - UiPasswordToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    UiPasswordToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiPasswordToggleModule\n\n\n\ncluster_UiPasswordToggleModule_exports\n\n\n\ncluster_UiPasswordToggleModule_declarations\n\n\n\ncluster_UiPasswordToggleModule_imports\n\n\n\n\nUiPasswordToggleComponent\n\nUiPasswordToggleComponent\n\n\n\nUiPasswordToggleModule\n\nUiPasswordToggleModule\n\nUiPasswordToggleModule -->\n\nUiPasswordToggleComponent->UiPasswordToggleModule\n\n\n\n\n\nUiPasswordToggleComponent \n\nUiPasswordToggleComponent \n\nUiPasswordToggleComponent  -->\n\nUiPasswordToggleModule->UiPasswordToggleComponent \n\n\n\n\n\nUiAutoAccessibleLabelModule\n\nUiAutoAccessibleLabelModule\n\nUiPasswordToggleModule -->\n\nUiAutoAccessibleLabelModule->UiPasswordToggleModule\n\n\n\n\n\nUiNgLetModule\n\nUiNgLetModule\n\nUiPasswordToggleModule -->\n\nUiNgLetModule->UiPasswordToggleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/components/ui-password-toggle/src/ui-password-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiPasswordToggleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiAutoAccessibleLabelModule\n                        \n                        \n                            UiNgLetModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiPasswordToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { UiAutoAccessibleLabelModule } from '@uipath/angular/a11y';\nimport { UiNgLetModule } from '@uipath/angular/directives/ui-ng-let';\n\nimport { UiPasswordToggleComponent } from './ui-password-toggle.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatTooltipModule,\n        MatIconModule,\n        MatButtonModule,\n        UiAutoAccessibleLabelModule,\n        UiNgLetModule,\n    ],\n    declarations: [\n        UiPasswordToggleComponent,\n    ],\n    exports: [\n        UiPasswordToggleComponent,\n    ],\n})\nexport class UiPasswordToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiPipeModule.html":{"url":"modules/UiPipeModule.html","title":"module - UiPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    UiPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiPipeModule\n\n\n\ncluster_UiPipeModule_exports\n\n\n\ncluster_UiPipeModule_declarations\n\n\n\n\nUiNl2BrPipe\n\nUiNl2BrPipe\n\n\n\nUiPipeModule\n\nUiPipeModule\n\nUiPipeModule -->\n\nUiNl2BrPipe->UiPipeModule\n\n\n\n\n\nUiNl2BrPipe \n\nUiNl2BrPipe \n\nUiNl2BrPipe  -->\n\nUiPipeModule->UiNl2BrPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/pipes/src/pipe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiNl2BrPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiNl2BrPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiNl2BrPipe } from './nl2br/nl2br.pipe';\n\nconst PIPES = [\n    UiNl2BrPipe,\n];\n\n@NgModule({\n    declarations: PIPES,\n    exports: PIPES,\n})\nexport class UiPipeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiProgressButtonDirective.html":{"url":"directives/UiProgressButtonDirective.html","title":"directive - UiProgressButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiProgressButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        \n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    \n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressButtonBufferValue\n                            \n                            \n                                progressButtonColor\n                            \n                            \n                                progressButtonLoading\n                            \n                            \n                                progressButtonMode\n                            \n                            \n                                progressButtonValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactory: ComponentFactoryResolver, container: ViewContainerRef, _renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactory\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressButtonBufferValue\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressButtonColor\n                    \n                \n                \n                    \n                        Default value : 'accent'\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressButtonLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressButtonMode\n                    \n                \n                \n                    \n                        Default value : 'indeterminate'\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressButtonValue\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts:42\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    Directive,\n    Input,\n    OnInit,\n    Renderer2,\n    ViewContainerRef,\n} from '@angular/core';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { UiLoaderButtonDirective } from '@uipath/angular/directives/internal';\n\nimport { UiButtonProgressBarComponent } from './internal/ui-button-progress-bar.component';\n\nexport const enum ButtonProgressClass {\n    Base = 'ui-button-progress',\n}\n\n@Directive({\n    selector: `\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    `,\n    exportAs: 'uiProgressButton',\n})\nexport class UiProgressButtonDirective\n    extends UiLoaderButtonDirective\n    implements OnInit {\n\n    @Input()\n    progressButtonLoading = false;\n\n    @Input()\n    progressButtonMode: MatProgressBar['mode'] = 'indeterminate';\n\n    @Input()\n    progressButtonValue: MatProgressBar['value'] = 0;\n\n    @Input()\n    progressButtonBufferValue: MatProgressBar['bufferValue'] = 0;\n\n    @Input()\n    progressButtonColor: MatProgressBar['color'] = 'accent';\n\n    constructor(\n        componentFactory: ComponentFactoryResolver,\n        container: ViewContainerRef,\n        private _renderer: Renderer2,\n    ) {\n        super(\n            UiButtonProgressBarComponent,\n            componentFactory,\n            container,\n        );\n\n        this._registerWatcher('progressButtonLoading', this._applyLoading);\n        this._registerWatcher('progressButtonMode', this._applyMode);\n        this._registerWatcher('progressButtonValue', this._applyValue);\n        this._registerWatcher('progressButtonBufferValue', this._applyBufferValue);\n        this._registerWatcher('progressButtonColor', this._applyColor);\n    }\n\n    ngOnInit() {\n        this._initialize();\n\n        this._renderer.addClass(this._buttonElement, ButtonProgressClass.Base);\n\n        this._renderer.appendChild(\n            this._buttonElement,\n            this._loaderElement,\n        );\n    }\n\n    private _applyColor = () => {\n        this._loader.color$.next(this.progressButtonColor);\n    };\n\n    private _applyValue = () => {\n        this._loader.value$.next(this.progressButtonValue);\n    };\n\n    private _applyBufferValue = () => {\n        this._loader.bufferValue$.next(this.progressButtonBufferValue);\n    };\n\n    private _applyMode = () => {\n        this._loader.mode$.next(this.progressButtonMode);\n    };\n\n    private _applyLoading = () => {\n        this._loader.loading$.next(this.progressButtonLoading);\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiProgressButtonModule.html":{"url":"modules/UiProgressButtonModule.html","title":"module - UiProgressButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    UiProgressButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiProgressButtonModule\n\n\n\ncluster_UiProgressButtonModule_exports\n\n\n\ncluster_UiProgressButtonModule_declarations\n\n\n\n\nUiButtonProgressBarComponent\n\nUiButtonProgressBarComponent\n\n\n\nUiProgressButtonModule\n\nUiProgressButtonModule\n\nUiProgressButtonModule -->\n\nUiButtonProgressBarComponent->UiProgressButtonModule\n\n\n\n\n\nUiProgressButtonDirective\n\nUiProgressButtonDirective\n\nUiProgressButtonModule -->\n\nUiProgressButtonDirective->UiProgressButtonModule\n\n\n\n\n\nUiProgressButtonDirective \n\nUiProgressButtonDirective \n\nUiProgressButtonDirective  -->\n\nUiProgressButtonModule->UiProgressButtonDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-progress-button/src/ui-progress-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiButtonProgressBarComponent\n                        \n                        \n                            UiProgressButtonDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiProgressButtonDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { UiButtonProgressBarComponent } from './internal/ui-button-progress-bar.component';\nimport { UiProgressButtonDirective } from './ui-progress-button.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatProgressBarModule,\n    ],\n    declarations: [\n        UiButtonProgressBarComponent,\n        UiProgressButtonDirective,\n    ],\n    exports: [\n        UiProgressButtonDirective,\n    ],\n})\nexport class UiProgressButtonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiScrollIntoViewDirective.html":{"url":"directives/UiScrollIntoViewDirective.html","title":"directive - UiScrollIntoViewDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiScrollIntoViewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-scroll-into-view/src/ui-scroll-into-view.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that scrolls an element into view.\nDepends On: scroll-into-view-if-needed\nThe browser APIs available for scrolling to an element are very primitive, scrolls on the parents as well as the child.\nThis behavior results in weird jumps in certain scenarios, using scroll-into-view-if-needed helps avoid this issue.\nscroll-into-view-if-needed allows us to better control the scroll boundary and much more.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiScrollIntoView]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scrollIntoViewIfNeeded\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                block\n                            \n                            \n                                boundary\n                            \n                            \n                                uiScrollIntoView\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    uiScrollIntoView\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        block\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-scroll-into-view/src/ui-scroll-into-view.directive.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        boundary\n                    \n                \n                \n                    \n                        Type :         Boundary\n\n                    \n                \n                \n                    \n                        Default value : 'parent'\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-scroll-into-view/src/ui-scroll-into-view.directive.ts:34\n                            \n                        \n                \n                    \n                        The boundary of the scroll effect.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uiScrollIntoView\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-scroll-into-view/src/ui-scroll-into-view.directive.ts:45\n                            \n                        \n                \n                    \n                        Configures if the decorated element should be scrolled into view.\neg: [uiScrollIntoView]=\"isFocused\"\n\n                    \n                \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        scrollIntoViewIfNeeded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : scrollIntoViewIfNeeded\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-scroll-into-view/src/ui-scroll-into-view.directive.ts:71\n                        \n                    \n\n            \n                \n                    Method that scrolls to the the provided target.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        uiScrollIntoView\n                    \n                \n\n\n                \n                    \n                        setuiScrollIntoView(condition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-scroll-into-view/src/ui-scroll-into-view.directive.ts:45\n                                \n                            \n                    \n                        \n                                Configures if the decorated element should be scrolled into view.\neg: [uiScrollIntoView]=\"isFocused\"\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { merge } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport scrollIntoViewIfNeeded, { Options } from 'scroll-into-view-if-needed';\n\nimport {\n    Directive,\n    ElementRef,\n    Input,\n    NgZone,\n} from '@angular/core';\n\ntype Boundary = 'parent' | Element;\n\n/**\n * A directive that scrolls an element into view.\n * Depends On: [scroll-into-view-if-needed](https://www.npmjs.com/package/scroll-into-view-if-needed)\n *\n * The browser APIs available for scrolling to an element are very primitive, scrolls on the parents as well as the child.\n * This behavior results in weird jumps in certain scenarios, using `scroll-into-view-if-needed` helps avoid this issue.\n *\n * `scroll-into-view-if-needed` allows us to better control the scroll `boundary` and much more.\n *\n * @export\n */\n@Directive({\n    selector: '[uiScrollIntoView]',\n})\nexport class UiScrollIntoViewDirective {\n    /**\n     * The boundary of the `scroll` effect.\n     *\n     */\n    @Input()\n    boundary: Boundary = 'parent';\n\n    @Input()\n    block: Options['block'] = 'start';\n\n    /**\n     * Configures if the decorated element should be scrolled into view.\n     * eg: `[uiScrollIntoView]=\"isFocused\"`\n     *\n     */\n    @Input()\n    set uiScrollIntoView(condition: boolean) {\n        this._zone.runOutsideAngular(() => {\n            if (!condition) { return; }\n            merge(\n                this._zone.onMicrotaskEmpty,\n                this._zone.onStable,\n            ).\n                pipe(\n                    take(1),\n                ).subscribe(() => {\n                    this.scrollIntoViewIfNeeded(\n                        this._element.nativeElement, {\n                        block: this.block,\n                        boundary: this.boundary === 'parent' ?\n                            this._element.nativeElement.parentElement :\n                            this.boundary,\n                    },\n                    );\n                });\n        });\n    }\n\n    /**\n     * Method that scrolls to the the provided `target`.\n     *\n     */\n    scrollIntoViewIfNeeded = scrollIntoViewIfNeeded;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        private _element: ElementRef,\n        private _zone: NgZone,\n    ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiScrollIntoViewModule.html":{"url":"modules/UiScrollIntoViewModule.html","title":"module - UiScrollIntoViewModule","body":"\n                   \n\n\n\n\n    Modules\n    UiScrollIntoViewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiScrollIntoViewModule\n\n\n\ncluster_UiScrollIntoViewModule_exports\n\n\n\ncluster_UiScrollIntoViewModule_declarations\n\n\n\n\nUiScrollIntoViewDirective\n\nUiScrollIntoViewDirective\n\n\n\nUiScrollIntoViewModule\n\nUiScrollIntoViewModule\n\nUiScrollIntoViewModule -->\n\nUiScrollIntoViewDirective->UiScrollIntoViewModule\n\n\n\n\n\nUiScrollIntoViewDirective \n\nUiScrollIntoViewDirective \n\nUiScrollIntoViewDirective  -->\n\nUiScrollIntoViewModule->UiScrollIntoViewDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-scroll-into-view/src/ui-scroll-into-view.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiScrollIntoViewDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiScrollIntoViewDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiScrollIntoViewDirective } from './ui-scroll-into-view.directive';\n\n@NgModule({\n    declarations: [UiScrollIntoViewDirective],\n    exports: [UiScrollIntoViewDirective],\n})\nexport class UiScrollIntoViewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiSecondFormatDirective.html":{"url":"components/UiSecondFormatDirective.html","title":"component - UiSecondFormatDirective","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiSecondFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts\n\n\n\n    \n        Description\n    \n    \n        A directive that formats a given number of seconds into a human readable format.\neg:\nFor input 61 -> output 1 minute with the tooltip PT1M1S.\nDepends On:\n\nmoment\nmoment-timezone\n\nIn order to reduce bundle sizes, we strongly recommend using the following webpack plugins:\n\nmoment-locales-webpack-plugin\nmoment-timezone-data-webpack-plugin\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-secondformat\n            \n\n\n\n            \n                template\n                {{ text$ | async }}\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text$\n                            \n                            \n                                tooltip$\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                seconds\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    seconds\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        seconds\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts:66\n                            \n                        \n                \n                    \n                        The number of seconds that need to be formatted.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        text$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts:72\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        seconds\n                    \n                \n\n                \n                    \n                        getseconds()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts:66\n                                \n                            \n                    \n                        \n                                The number of seconds that need to be formatted.\n\n\n                        \n                    \n\n                \n                    \n                        setseconds(seconds: number | null)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            seconds\n                                                    \n                                                            \n                                                                        number | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import moment from 'moment';\nimport {\n    BehaviorSubject,\n    merge,\n    Observable,\n    of,\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    map,\n} from 'rxjs/operators';\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    InjectionToken,\n    Input,\n    Optional,\n} from '@angular/core';\n\n/**\n * The date format options schema.\n */\nexport interface ISecondFormatOptions {\n    /**\n     * Stream that triggers a re-render of the component.\n     *\n     */\n    redraw$: Observable;\n}\n\n/**\n * `ui-secondformat` injection token for the `options`.\n *\n */\nexport const UI_SECONDFORMAT_OPTIONS = new InjectionToken>('UiSecondFormat options.');\n\n/**\n * A directive that formats a given number of `seconds` into a human readable format.\n *\n * eg:\n * For input `61` -> output `1 minute` with the tooltip PT1M1S.\n * Depends On:\n * - [moment](https://www.npmjs.com/package/moment)\n * - [moment-timezone](https://www.npmjs.com/package/moment-timezone)\n *\n * In order to reduce bundle sizes, we strongly recommend using the following webpack plugins:\n * - [moment-locales-webpack-plugin](https://www.npmjs.com/package/moment-locales-webpack-plugin)\n * - [moment-timezone-data-webpack-plugin](https://www.npmjs.com/package/moment-timezone-data-webpack-plugin)\n *\n * @export\n */\n@Component({\n    selector: 'ui-secondformat',\n    template: `{{ text$ | async }}`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class UiSecondFormatDirective {\n    /**\n     * The number of `seconds` that need to be formatted.\n     *\n     */\n    @Input()\n    get seconds() { return this._seconds$.value; }\n    set seconds(seconds: number | null) { this._seconds$.next(seconds); }\n\n    /**\n     * @internal\n     */\n    tooltip$: Observable;\n\n    /**\n     * @internal\n     */\n    text$: Observable;\n\n    protected _text?: HTMLElement;\n\n    private _seconds$ = new BehaviorSubject(null);\n\n    /**\n     * @ignore\n     */\n    constructor(\n        @Inject(UI_SECONDFORMAT_OPTIONS)\n        @Optional()\n        options: ISecondFormatOptions,\n    ) {\n        options = options || {};\n        const redraw$ = options.redraw$ || of(null);\n\n        const seconds$ = merge(\n            redraw$,\n            this._seconds$.pipe(distinctUntilChanged()),\n        ).pipe(\n            map(() => this.seconds),\n            map(seconds => seconds != null ? moment.duration(seconds, 'seconds') : undefined),\n        );\n\n        this.text$ = seconds$.pipe(\n            map(seconds => seconds?.humanize() ?? ''),\n        );\n\n        this.tooltip$ = seconds$.pipe(\n            map(seconds => seconds?.toISOString()),\n        );\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text$ | async }}'\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiSecondFormatDirective'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiSecondFormatModule.html":{"url":"modules/UiSecondFormatModule.html","title":"module - UiSecondFormatModule","body":"\n                   \n\n\n\n\n    Modules\n    UiSecondFormatModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiSecondFormatModule\n\n\n\ncluster_UiSecondFormatModule_declarations\n\n\n\ncluster_UiSecondFormatModule_exports\n\n\n\n\nUiSecondFormatDirective\n\nUiSecondFormatDirective\n\n\n\nUiSecondFormatModule\n\nUiSecondFormatModule\n\nUiSecondFormatModule -->\n\nUiSecondFormatDirective->UiSecondFormatModule\n\n\n\n\n\nUiSecondFormatDirective \n\nUiSecondFormatDirective \n\nUiSecondFormatDirective  -->\n\nUiSecondFormatModule->UiSecondFormatDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-secondformat/src/ui-secondformat.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiSecondFormatDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiSecondFormatDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { UiSecondFormatDirective } from './ui-secondformat.directive';\n\n@NgModule({\n    imports: [CommonModule, MatTooltipModule],\n    declarations: [UiSecondFormatDirective],\n    exports: [UiSecondFormatDirective],\n})\nexport class UiSecondFormatModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiSnackBarComponent.html":{"url":"components/UiSnackBarComponent.html","title":"component - UiSnackBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiSnackBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./ui-snackbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui-snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                snackBarRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    componentPortal\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarAlert, snackBarRef: MatSnackBarRef, _injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ISnackBarAlert\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBarRef\n                                                  \n                                                        \n                                                                        MatSnackBarRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ISnackBarAlert\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBarRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatSnackBarRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        componentPortal\n                    \n                \n\n                \n                    \n                        getcomponentPortal()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n    ComponentPortal,\n    ComponentType,\n} from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector,\n    Optional,\n    TemplateRef,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    MatSnackBar,\n    MatSnackBarConfig,\n    MatSnackBarRef,\n    MAT_SNACK_BAR_DATA,\n    MAT_SNACK_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/snack-bar';\n\nimport { UiSnackbarIntl } from './ui-snackbar.intl';\n\ninterface ISnackBarAlert {\n    /**\n     * Alert message\n     */\n    message: string | TemplateRef | ComponentType;\n    /**\n     * Optional action button message,\n     * will emit `dismissWithAction` on click\n     */\n    actionMessage?: string;\n    /**\n     * How long to remain on the screen\n     */\n    duration: number;\n    /**\n     * Material icon to be used in snackbar\n     */\n    icon?: string;\n    /**\n     * Aria label for screen-readers on close button\n     */\n    closeAriaLabel?: string;\n    /**\n     * Additional information to pass to components. Can be used by injecting `UI_MAT_SNACK_BAR_PAYLOAD`.\n     */\n    payload?: unknown;\n    /**\n     *  Extra CSS classes to be added to the snack bar container.\n     */\n    extraCssClasses?: string[];\n}\n\n@Component({\n    templateUrl: './ui-snackbar.component.html',\n    styleUrls: [\n        './ui-snackbar.component.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiSnackBarComponent {\n    private _componentPortal?: ComponentPortal;\n\n    get componentPortal() {\n        if (typeof this.data.message !== 'function') {\n            throw new Error('`componentPortal` getter cannot be used when `data.message` is not a component type');\n        }\n\n        this._componentPortal ??= new ComponentPortal(\n            this.data.message,\n            null,\n            Injector.create({\n                providers: [\n                    {\n                        provide: UI_MAT_SNACK_BAR_PAYLOAD,\n                        useValue: this.data.payload,\n                    },\n                ],\n                parent: this._injector,\n\n            }),\n        );\n\n        return this._componentPortal;\n    }\n\n    constructor(\n        @Inject(MAT_SNACK_BAR_DATA)\n        public data: ISnackBarAlert,\n        public snackBarRef: MatSnackBarRef,\n        private _injector: Injector,\n    ) { }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isPropertyString(property: unknown): property is string {\n        return typeof property === 'string';\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isTemplateRef(property: unknown): property is TemplateRef {\n        return property instanceof TemplateRef;\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isComponentType(property: unknown): property is ComponentType {\n        return typeof property === 'function';\n    }\n}\n\nexport enum SnackBarType {\n    Info = 'info',\n    Error = 'error',\n    Warning = 'warning',\n    Success = 'success',\n    None = 'none',\n}\n\nexport const ICON_MAP: Map = new Map([\n    [SnackBarType.Info, 'info'],\n    [SnackBarType.Success, 'check_circle'],\n    [SnackBarType.Warning, 'warning'],\n    [SnackBarType.Error, 'error'],\n]);\nexport type SnackbarAction = (\n    message: string | TemplateRef | ComponentType,\n    config?: {\n        actionMessage?: string;\n        duration?: number;\n        payload?: unknown;\n        extraCssClasses?: string[];\n    },\n) => MatSnackBarRef;\n\nexport class UiMatSnackBarConfig {\n    restrictHtml = false;\n}\n\nexport const UI_MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('UiMatSnackBarConfig');\nexport const UI_MAT_SNACK_BAR_PAYLOAD = new InjectionToken('UiSnackBarService Payload');\n\n/**\n * Snackbar config options\n */\ninterface ISnackBarOptions extends Partial> {\n    /**\n     * The type of the alert (info, success, warning or error)\n     */\n    type?: SnackBarType;\n}\n\nexport const panelClass = (type: SnackBarType) =>\n    `ui-snackbar-${type}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiSnackBarService {\n\n    /**\n     * Display an info snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    info: SnackbarAction;\n    /**\n     * Display an error snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    error: SnackbarAction;\n    /**\n     * Display an success snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    success: SnackbarAction;\n    /**\n     * Display an warning snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    warning: SnackbarAction;\n    private _ref?: MatSnackBarRef;\n\n    constructor(\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        private _options: MatSnackBarConfig,\n        @Optional()\n        private readonly _snackIntl: UiSnackbarIntl,\n        @Inject(UI_MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        @Optional()\n        private _additionalOptions?: UiMatSnackBarConfig,\n    ) {\n        this._snackIntl = this._snackIntl ||\n            new UiSnackbarIntl();\n\n        this.info = this._alertFactory(SnackBarType.Info);\n        this.error = this._alertFactory(SnackBarType.Error);\n        this.success = this._alertFactory(SnackBarType.Success);\n        this.warning = this._alertFactory(SnackBarType.Warning);\n    }\n\n    /**\n     * Display a snackbar (customizable)\n     *\n     * @param message The message to be displayed\n     * @param options Customize default options: snackbar type, icon, display duration, and action message\n     */\n    show = (\n        message: string | TemplateRef | ComponentType,\n        { type, duration, icon, actionMessage, payload, extraCssClasses }: ISnackBarOptions = {},\n    ) =>\n        this._alert(type ?? SnackBarType.None, {\n            message,\n            icon: icon ?? ICON_MAP.get(type!),\n            duration: duration || duration === 0 ? duration : this._options.duration!,\n            actionMessage,\n            payload,\n            extraCssClasses,\n        });\n\n    /**\n     * Dismiss the displayed snackbar\n     */\n    clear() {\n        if (!this._ref) { return; }\n\n        this._ref.dismiss();\n    }\n\n    private _alertFactory = (type: SnackBarType) =>\n        (\n            message: string | TemplateRef | ComponentType,\n            config?: { actionMessage?: string; duration?: number; payload?: unknown; extraCssClasses?: string[] }) =>\n            this._alert(type, {\n                message,\n                actionMessage: config?.actionMessage,\n                icon: ICON_MAP.get(type),\n                duration: config?.duration || config?.duration === 0\n                    ? config.duration\n                    : this._options.duration!,\n                payload: config?.payload,\n                extraCssClasses: config?.extraCssClasses,\n            });\n\n    private _alert(type: SnackBarType, options: ISnackBarAlert) {\n        if (\n            this._additionalOptions?.restrictHtml &&\n            typeof options.message === 'string'\n        ) {\n            const span = document.createElement('span');\n            span.innerText = options.message;\n            options.message = span.innerHTML;\n            span.remove();\n        }\n\n        const extraPanelClasses = options.extraCssClasses ?? [];\n        this._ref = this._snackBar.openFromComponent(UiSnackBarComponent, {\n            data: {\n                closeAriaLabel: this._snackIntl.closeSnackbarShortcut,\n                ...options,\n            },\n            duration: options.duration,\n            panelClass: [panelClass(type), ...extraPanelClasses],\n        });\n\n        return this._ref;\n    }\n}\n\n    \n\n    \n        \n    \n        {{data.icon}}\n        \n        \n        \n    \n\n    \n        \n            {{ data.actionMessage }}\n        \n\n        \n            close\n        \n    \n\n\n    \n\n    \n                \n                    ./ui-snackbar.component.scss\n                \n                .ui-snackbar {\n    &-container {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    &-message,\n    &-dismiss {\n        display: flex;\n        align-items: center;\n    }\n\n    &-action {\n        margin-right: 10px;\n    }\n\n    &-message {\n        mat-icon {\n            margin-right: 10px;\n        }\n        span {\n            overflow-y: auto;\n            max-height: calc(100vh - 80px);\n            font-size: 14.5px;\n            line-height: 1.35em;\n            word-break: break-word;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{data.icon}}                                                    {{ data.actionMessage }}                            close            '\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiSnackBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiSnackBarModule.html":{"url":"modules/UiSnackBarModule.html","title":"module - UiSnackBarModule","body":"\n                   \n\n\n\n\n    Modules\n    UiSnackBarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiSnackBarModule\n\n\n\ncluster_UiSnackBarModule_declarations\n\n\n\ncluster_UiSnackBarModule_imports\n\n\n\n\nUiSnackBarComponent\n\nUiSnackBarComponent\n\n\n\nUiSnackBarModule\n\nUiSnackBarModule\n\nUiSnackBarModule -->\n\nUiSnackBarComponent->UiSnackBarModule\n\n\n\n\n\nKeyboardShortcutModule\n\nKeyboardShortcutModule\n\nUiSnackBarModule -->\n\nKeyboardShortcutModule->UiSnackBarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/components/ui-snackbar/src/ui-snackbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiSnackBarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            KeyboardShortcutModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport {\n    MatSnackBarModule,\n    MAT_SNACK_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/snack-bar';\nimport { KeyboardShortcutModule } from '@uipath/angular/directives/keyboard-shortcut';\nimport { UiPipeModule } from '@uipath/angular/pipes';\n\nimport { UiSnackBarComponent } from './ui-snackbar.component';\n\nconst DEFAULT_DURATION = 10000;\nconst DEFAULT_HORIZONTAL = 'center';\nconst DEFAULT_VERTICAL = 'top';\n\n@NgModule({\n    imports: [\n        MatSnackBarModule,\n        MatIconModule,\n        MatButtonModule,\n        PortalModule,\n        UiPipeModule,\n        CommonModule,\n        KeyboardShortcutModule,\n    ],\n    declarations: [UiSnackBarComponent],\n    providers: [{\n        provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n        useValue: {\n            verticalPosition: DEFAULT_VERTICAL,\n            horizontalPosition: DEFAULT_HORIZONTAL,\n            duration: DEFAULT_DURATION,\n        },\n    }],\n})\nexport class UiSnackBarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiSnackBarService.html":{"url":"injectables/UiSnackBarService.html","title":"injectable - UiSnackBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiSnackBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                show\n                            \n                            \n                                success\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_snackBar: MatSnackBar, _options: MatSnackBarConfig, _snackIntl: UiSnackbarIntl, _additionalOptions?: UiMatSnackBarConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:201\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _options\n                                                  \n                                                        \n                                                                    MatSnackBarConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackIntl\n                                                  \n                                                        \n                                                                        UiSnackbarIntl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _additionalOptions\n                                                  \n                                                        \n                                                                        UiMatSnackBarConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:244\n                \n            \n\n\n            \n                \n                    Dismiss the displayed snackbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnackbarAction\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:186\n                        \n                    \n\n            \n                \n                    Display an error snackbar\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    message\n                                                    \n                                                            The message to be displayed\n\n                                                    \n                                            \n                                            \n                                                    config\n                                                    \n                                                            { actionMessage, duration }\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnackbarAction\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:179\n                        \n                    \n\n            \n                \n                    Display an info snackbar\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    message\n                                                    \n                                                            The message to be displayed\n\n                                                    \n                                            \n                                            \n                                                    config\n                                                    \n                                                            { actionMessage, duration }\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:228\n                        \n                    \n\n            \n                \n                    Display a snackbar (customizable)\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    message\n                                                    \n                                                            The message to be displayed\n\n                                                    \n                                            \n                                            \n                                                    options\n                                                    \n                                                            Customize default options: snackbar type, icon, display duration, and action message\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnackbarAction\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:193\n                        \n                    \n\n            \n                \n                    Display an success snackbar\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    message\n                                                    \n                                                            The message to be displayed\n\n                                                    \n                                            \n                                            \n                                                    config\n                                                    \n                                                            { actionMessage, duration }\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warning\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnackbarAction\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts:200\n                        \n                    \n\n            \n                \n                    Display an warning snackbar\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    message\n                                                    \n                                                            The message to be displayed\n\n                                                    \n                                            \n                                            \n                                                    config\n                                                    \n                                                            { actionMessage, duration }\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import {\n    ComponentPortal,\n    ComponentType,\n} from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector,\n    Optional,\n    TemplateRef,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    MatSnackBar,\n    MatSnackBarConfig,\n    MatSnackBarRef,\n    MAT_SNACK_BAR_DATA,\n    MAT_SNACK_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/snack-bar';\n\nimport { UiSnackbarIntl } from './ui-snackbar.intl';\n\ninterface ISnackBarAlert {\n    /**\n     * Alert message\n     */\n    message: string | TemplateRef | ComponentType;\n    /**\n     * Optional action button message,\n     * will emit `dismissWithAction` on click\n     */\n    actionMessage?: string;\n    /**\n     * How long to remain on the screen\n     */\n    duration: number;\n    /**\n     * Material icon to be used in snackbar\n     */\n    icon?: string;\n    /**\n     * Aria label for screen-readers on close button\n     */\n    closeAriaLabel?: string;\n    /**\n     * Additional information to pass to components. Can be used by injecting `UI_MAT_SNACK_BAR_PAYLOAD`.\n     */\n    payload?: unknown;\n    /**\n     *  Extra CSS classes to be added to the snack bar container.\n     */\n    extraCssClasses?: string[];\n}\n\n@Component({\n    templateUrl: './ui-snackbar.component.html',\n    styleUrls: [\n        './ui-snackbar.component.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UiSnackBarComponent {\n    private _componentPortal?: ComponentPortal;\n\n    get componentPortal() {\n        if (typeof this.data.message !== 'function') {\n            throw new Error('`componentPortal` getter cannot be used when `data.message` is not a component type');\n        }\n\n        this._componentPortal ??= new ComponentPortal(\n            this.data.message,\n            null,\n            Injector.create({\n                providers: [\n                    {\n                        provide: UI_MAT_SNACK_BAR_PAYLOAD,\n                        useValue: this.data.payload,\n                    },\n                ],\n                parent: this._injector,\n\n            }),\n        );\n\n        return this._componentPortal;\n    }\n\n    constructor(\n        @Inject(MAT_SNACK_BAR_DATA)\n        public data: ISnackBarAlert,\n        public snackBarRef: MatSnackBarRef,\n        private _injector: Injector,\n    ) { }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isPropertyString(property: unknown): property is string {\n        return typeof property === 'string';\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isTemplateRef(property: unknown): property is TemplateRef {\n        return property instanceof TemplateRef;\n    }\n\n    /**\n     * @internal\n     * @ignore\n     */\n    isComponentType(property: unknown): property is ComponentType {\n        return typeof property === 'function';\n    }\n}\n\nexport enum SnackBarType {\n    Info = 'info',\n    Error = 'error',\n    Warning = 'warning',\n    Success = 'success',\n    None = 'none',\n}\n\nexport const ICON_MAP: Map = new Map([\n    [SnackBarType.Info, 'info'],\n    [SnackBarType.Success, 'check_circle'],\n    [SnackBarType.Warning, 'warning'],\n    [SnackBarType.Error, 'error'],\n]);\nexport type SnackbarAction = (\n    message: string | TemplateRef | ComponentType,\n    config?: {\n        actionMessage?: string;\n        duration?: number;\n        payload?: unknown;\n        extraCssClasses?: string[];\n    },\n) => MatSnackBarRef;\n\nexport class UiMatSnackBarConfig {\n    restrictHtml = false;\n}\n\nexport const UI_MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('UiMatSnackBarConfig');\nexport const UI_MAT_SNACK_BAR_PAYLOAD = new InjectionToken('UiSnackBarService Payload');\n\n/**\n * Snackbar config options\n */\ninterface ISnackBarOptions extends Partial> {\n    /**\n     * The type of the alert (info, success, warning or error)\n     */\n    type?: SnackBarType;\n}\n\nexport const panelClass = (type: SnackBarType) =>\n    `ui-snackbar-${type}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiSnackBarService {\n\n    /**\n     * Display an info snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    info: SnackbarAction;\n    /**\n     * Display an error snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    error: SnackbarAction;\n    /**\n     * Display an success snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    success: SnackbarAction;\n    /**\n     * Display an warning snackbar\n     *\n     * @param message The message to be displayed\n     * @param config  `{ actionMessage, duration }`\n     */\n    warning: SnackbarAction;\n    private _ref?: MatSnackBarRef;\n\n    constructor(\n        private _snackBar: MatSnackBar,\n        @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        private _options: MatSnackBarConfig,\n        @Optional()\n        private readonly _snackIntl: UiSnackbarIntl,\n        @Inject(UI_MAT_SNACK_BAR_DEFAULT_OPTIONS)\n        @Optional()\n        private _additionalOptions?: UiMatSnackBarConfig,\n    ) {\n        this._snackIntl = this._snackIntl ||\n            new UiSnackbarIntl();\n\n        this.info = this._alertFactory(SnackBarType.Info);\n        this.error = this._alertFactory(SnackBarType.Error);\n        this.success = this._alertFactory(SnackBarType.Success);\n        this.warning = this._alertFactory(SnackBarType.Warning);\n    }\n\n    /**\n     * Display a snackbar (customizable)\n     *\n     * @param message The message to be displayed\n     * @param options Customize default options: snackbar type, icon, display duration, and action message\n     */\n    show = (\n        message: string | TemplateRef | ComponentType,\n        { type, duration, icon, actionMessage, payload, extraCssClasses }: ISnackBarOptions = {},\n    ) =>\n        this._alert(type ?? SnackBarType.None, {\n            message,\n            icon: icon ?? ICON_MAP.get(type!),\n            duration: duration || duration === 0 ? duration : this._options.duration!,\n            actionMessage,\n            payload,\n            extraCssClasses,\n        });\n\n    /**\n     * Dismiss the displayed snackbar\n     */\n    clear() {\n        if (!this._ref) { return; }\n\n        this._ref.dismiss();\n    }\n\n    private _alertFactory = (type: SnackBarType) =>\n        (\n            message: string | TemplateRef | ComponentType,\n            config?: { actionMessage?: string; duration?: number; payload?: unknown; extraCssClasses?: string[] }) =>\n            this._alert(type, {\n                message,\n                actionMessage: config?.actionMessage,\n                icon: ICON_MAP.get(type),\n                duration: config?.duration || config?.duration === 0\n                    ? config.duration\n                    : this._options.duration!,\n                payload: config?.payload,\n                extraCssClasses: config?.extraCssClasses,\n            });\n\n    private _alert(type: SnackBarType, options: ISnackBarAlert) {\n        if (\n            this._additionalOptions?.restrictHtml &&\n            typeof options.message === 'string'\n        ) {\n            const span = document.createElement('span');\n            span.innerText = options.message;\n            options.message = span.innerHTML;\n            span.remove();\n        }\n\n        const extraPanelClasses = options.extraCssClasses ?? [];\n        this._ref = this._snackBar.openFromComponent(UiSnackBarComponent, {\n            data: {\n                closeAriaLabel: this._snackIntl.closeSnackbarShortcut,\n                ...options,\n            },\n            duration: options.duration,\n            panelClass: [panelClass(type), ...extraPanelClasses],\n        });\n\n        return this._ref;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiSnackbarIntl.html":{"url":"injectables/UiSnackbarIntl.html","title":"injectable - UiSnackbarIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiSnackbarIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-snackbar/src/ui-snackbar.intl.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeAriaLabel\n                            \n                            \n                                closeSnackbarShortcut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.intl.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closeAriaLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Close'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.intl.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeSnackbarShortcut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Close the snackbar using the shortcut: Delete + x'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-snackbar/src/ui-snackbar.intl.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\n\nimport {\n    Injectable,\n    OnDestroy,\n} from '@angular/core';\n\n@Injectable()\nexport class UiSnackbarIntl implements OnDestroy {\n    closeAriaLabel = 'Close';\n    closeSnackbarShortcut = 'Close the snackbar using the shortcut: Delete + x';\n    protected _destroyed$ = new Subject();\n\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiSpinnerButtonDirective.html":{"url":"directives/UiSpinnerButtonDirective.html","title":"directive - UiSpinnerButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiSpinnerButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-spinner-button/src/ui-spinner-button.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        \n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    \n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                spinnerButtonColor\n                            \n                            \n                                spinnerButtonLoading\n                            \n                            \n                                spinnerButtonMode\n                            \n                            \n                                spinnerButtonValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(button: MatButton, componentFactory: ComponentFactoryResolver, container: ViewContainerRef, _renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/directives/ui-spinner-button/src/ui-spinner-button.directive.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        button\n                                                  \n                                                        \n                                                                    MatButton\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactory\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        spinnerButtonColor\n                    \n                \n                \n                    \n                        Default value : 'accent'\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-spinner-button/src/ui-spinner-button.directive.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spinnerButtonLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-spinner-button/src/ui-spinner-button.directive.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spinnerButtonMode\n                    \n                \n                \n                    \n                        Default value : 'indeterminate'\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-spinner-button/src/ui-spinner-button.directive.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spinnerButtonValue\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-spinner-button/src/ui-spinner-button.directive.ts:49\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/directives/ui-spinner-button/src/ui-spinner-button.directive.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    Directive,\n    Input,\n    OnInit,\n    Renderer2,\n    ViewContainerRef,\n} from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { UiLoaderButtonDirective } from '@uipath/angular/directives/internal';\n\nimport { UiButtonProgressSpinnerComponent } from './internal/ui-button-progress-spinner.component';\n\nexport const enum SpinnerButtonClass {\n    Base = 'ui-spinner-button',\n    Loading = 'ui-spinner-button-loading',\n}\n\n@Directive({\n    selector: `\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    `,\n    exportAs: 'uiSpinnerButton',\n})\nexport class UiSpinnerButtonDirective\n    extends UiLoaderButtonDirective\n    implements OnInit {\n    @Input()\n    spinnerButtonLoading = false;\n\n    @Input()\n    spinnerButtonMode: MatProgressSpinner['mode'] = 'indeterminate';\n\n    @Input()\n    spinnerButtonValue: MatProgressSpinner['value'] = 0;\n\n    @Input()\n    spinnerButtonColor: MatProgressSpinner['color'] = 'accent';\n\n    constructor(\n        button: MatButton,\n        componentFactory: ComponentFactoryResolver,\n        container: ViewContainerRef,\n        private _renderer: Renderer2,\n    ) {\n        super(\n            UiButtonProgressSpinnerComponent,\n            componentFactory,\n            container,\n        );\n\n        const isRound = button.isIconButton ||\n            button.isRoundButton;\n\n        this._loader.isRound$.next(isRound);\n\n        this._registerWatcher('spinnerButtonLoading', this._applyLoading);\n        this._registerWatcher('spinnerButtonMode', this._applyMode);\n        this._registerWatcher('spinnerButtonValue', this._applyValue);\n        this._registerWatcher('spinnerButtonColor', this._applyColor);\n    }\n\n    ngOnInit() {\n        this._initialize();\n\n        this._renderer.addClass(this._buttonElement, SpinnerButtonClass.Base);\n\n        this._renderer.appendChild(\n            this._buttonElement,\n            this._loaderElement,\n        );\n    }\n\n    private _applyColor = () => {\n        this._loader.color$.next(this.spinnerButtonColor);\n    };\n\n    private _applyValue = () => {\n        this._loader.value$.next(this.spinnerButtonValue);\n    };\n\n    private _applyMode = () => {\n        this._loader.mode$.next(this.spinnerButtonMode);\n    };\n\n    private _applyLoading = () => {\n        if (this.spinnerButtonLoading) {\n            this._renderer.addClass(this._buttonElement, SpinnerButtonClass.Loading);\n        } else {\n            this._renderer.removeClass(this._buttonElement, SpinnerButtonClass.Loading);\n        }\n\n        this._loader.loading$.next(this.spinnerButtonLoading);\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiSpinnerButtonModule.html":{"url":"modules/UiSpinnerButtonModule.html","title":"module - UiSpinnerButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    UiSpinnerButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiSpinnerButtonModule\n\n\n\ncluster_UiSpinnerButtonModule_declarations\n\n\n\ncluster_UiSpinnerButtonModule_exports\n\n\n\n\nUiButtonProgressSpinnerComponent\n\nUiButtonProgressSpinnerComponent\n\n\n\nUiSpinnerButtonModule\n\nUiSpinnerButtonModule\n\nUiSpinnerButtonModule -->\n\nUiButtonProgressSpinnerComponent->UiSpinnerButtonModule\n\n\n\n\n\nUiSpinnerButtonDirective\n\nUiSpinnerButtonDirective\n\nUiSpinnerButtonModule -->\n\nUiSpinnerButtonDirective->UiSpinnerButtonModule\n\n\n\n\n\nUiSpinnerButtonDirective \n\nUiSpinnerButtonDirective \n\nUiSpinnerButtonDirective  -->\n\nUiSpinnerButtonModule->UiSpinnerButtonDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-spinner-button/src/ui-spinner-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiButtonProgressSpinnerComponent\n                        \n                        \n                            UiSpinnerButtonDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiSpinnerButtonDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { UiButtonProgressSpinnerComponent } from './internal/ui-button-progress-spinner.component';\nimport { UiSpinnerButtonDirective } from './ui-spinner-button.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatProgressSpinnerModule,\n    ],\n    declarations: [\n        UiButtonProgressSpinnerComponent,\n        UiSpinnerButtonDirective,\n    ],\n    exports: [\n        UiSpinnerButtonDirective,\n    ],\n})\nexport class UiSpinnerButtonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiSuggestIntl.html":{"url":"injectables/UiSuggestIntl.html","title":"injectable - UiSuggestIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiSuggestIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-suggest/src/ui-suggest.intl.ts\n        \n\n\n            \n                Description\n            \n            \n                Internationalization service definition for UiSuggest.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changes\n                            \n                            \n                                clearSelectionLabel\n                            \n                            \n                                currentItemLabel\n                            \n                            \n                                customValueAlreadySelected\n                            \n                            \n                                customValueLabel\n                            \n                            \n                                customValueLiveLabel\n                            \n                            \n                                loadingLabel\n                            \n                            \n                                minCharsLength\n                            \n                            \n                                noResultsLabel\n                            \n                            \n                                translateLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:46\n                        \n                    \n\n            \n                \n                    Notify if changes have occurred that require that the labels be updated.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelectionLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Clear Selection'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:24\n                        \n                    \n\n            \n                \n                    Label for the selection clear tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentItemLabel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:57\n                        \n                    \n\n            \n                \n                    Live announced label for the current item.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    text\n                                                    \n                                                            The text of the active item.\n\n                                                    \n                                            \n                                            \n                                                    itemNo\n                                                    \n                                                            The current item index.\n\n                                                    \n                                            \n                                            \n                                                    itemCount\n                                                    \n                                                            The total item count.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customValueAlreadySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'This item is already added.'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:19\n                        \n                    \n\n            \n                \n                    Label displayed when you re-enter an existing custom value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customValueLabel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:64\n                        \n                    \n\n            \n                \n                    Custom value label generator function.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    text\n                                                    \n                                                            The text of the custom value.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customValueLiveLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Custom value'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:39\n                        \n                    \n\n            \n                \n                    Label announced by the a11y live announcer for custom values.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Loading...'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:34\n                        \n                    \n\n            \n                \n                    Label displayed when an item is in a loading state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minCharsLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:70\n                        \n                    \n\n            \n                \n                    Label displayed when minimum number of characters to trigger the search is not met.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noResultsLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No results'\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:29\n                        \n                    \n\n            \n                \n                    Label displayed when no results are available.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateLabel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.intl.ts:79\n                        \n                    \n\n            \n                \n                    Value label generator function.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    text\n                                                    \n                                                            The text of the value.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\n\nimport {\n    Injectable,\n    OnDestroy,\n} from '@angular/core';\n\n/**\n * Internationalization service definition for `UiSuggest`.\n *\n * @export\n */\n@Injectable()\nexport class UiSuggestIntl implements OnDestroy {\n    /**\n     * Label displayed when you re-enter an existing custom value.\n     *\n     */\n    customValueAlreadySelected = 'This item is already added.';\n    /**\n     * Label for the selection clear tooltip.\n     *\n     */\n    clearSelectionLabel = 'Clear Selection';\n    /**\n     * Label displayed when no results are available.\n     *\n     */\n    noResultsLabel = 'No results';\n    /**\n     * Label displayed when an item is in a loading state.\n     *\n     */\n    loadingLabel = 'Loading...';\n    /**\n     * Label announced by the a11y live announcer for custom values.\n     *\n     */\n    customValueLiveLabel = 'Custom value';\n\n    /**\n     * Notify if changes have occurred that require that the labels be updated.\n     *\n     */\n    // eslint-disable-next-line rxjs/finnish\n    changes = new Subject();\n\n    protected _destroyed$ = new Subject();\n\n    /**\n     * Live announced label for the current item.\n     *\n     * @param text The text of the active item.\n     * @param itemNo The current item index.\n     * @param itemCount The total item count.\n     */\n    currentItemLabel = (text: string, itemNo: number, itemCount: number) => `${text} item ${itemNo} out of ${itemCount}`;\n\n    /**\n     * Custom value label generator function.\n     *\n     * @param text The text of the custom value.\n     */\n    customValueLabel = (text: string) => text;\n\n    /**\n     * Label displayed when minimum number of characters to trigger the search is not met.\n     *\n     */\n    minCharsLength = (length: number) => length === 1\n        ? 'Please start typing to search'\n        : `Please type at least ${length} characters to search`;\n\n    /**\n     * Value label generator function.\n     *\n     * @param text The text of the value.\n     */\n    translateLabel = (text: string) => text;\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        this.changes.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiSuggestMatFormFieldDirective.html":{"url":"directives/UiSuggestMatFormFieldDirective.html","title":"directive - UiSuggestMatFormFieldDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiSuggestMatFormFieldDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            DoCheck\n                        MatFormFieldControl\n                            ControlValueAccessor\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                customItemSize\n                            \n                            \n                                displayPriority\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.floating\n                            \n                            \n                                class.form-control\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    shouldLabelFloat\n                                \n                                \n                                    required\n                                \n                                \n                                    isFormControl\n                                \n                                \n                                    placeholder\n                                \n                                \n                                    itemSize\n                                \n                                \n                                    empty\n                                \n                                \n                                    isDown\n                                \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        customItemSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:111\n                            \n                        \n                \n                    \n                        Set a custom size for the list items.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        displayPriority\n                    \n                \n                \n                    \n                        Type :         SuggestDisplayPriority\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:177\n                            \n                        \n                \n                    \n                        Configure the component display priority.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:97\n                            \n                        \n                \n                    \n                        Configure the component placeholder.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:60\n                            \n                        \n                \n                    \n                        Configure if the input should be marked as required inside the form field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:144\n                            \n                        \n                \n                    \n                        Handles the dropdown value binding.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:202\n                            \n                        \n                \n                    \n                        Emits the deselected item value when an item is deselected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:195\n                            \n                        \n                \n                    \n                        Emits the selected item value an item is selected.\n\n                    \n                \n            \n        \n\n            \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.floating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:51\n                        \n                    \n\n            \n                \n                    Configure if the form control label should float.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.form-control\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:81\n                        \n                    \n\n            \n                \n                    Determine if the component is rendered inside a form control\n\n                \n            \n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:275\n                \n            \n\n\n            \n                \n                    Clears the search input value.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:44\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        shouldLabelFloat\n                    \n                \n\n                \n                    \n                        getshouldLabelFloat()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:51\n                                \n                            \n                    \n                        \n                                Configure if the form control label should float.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n\n                \n                    \n                        getrequired()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:60\n                                \n                            \n                    \n                        \n                                Configure if the input should be marked as required inside the form field.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isFormControl\n                    \n                \n\n                \n                    \n                        getisFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:81\n                                \n                            \n                    \n                        \n                                Determine if the component is rendered inside a form control\n\n\n                        \n                    \n\n                \n                    \n                        setisFormControl(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:88\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n\n                \n                    \n                        getplaceholder()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:97\n                                \n                            \n                    \n                        \n                                Configure the component placeholder.\n\n\n                        \n                    \n\n                \n                    \n                        setplaceholder(placeholder)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:101\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            placeholder\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        itemSize\n                    \n                \n\n                \n                    \n                        getitemSize()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:117\n                                \n                            \n                    \n                        \n                                Computes the component item height depending on the current render mode.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        empty\n                    \n                \n\n                \n                    \n                        getempty()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:127\n                                \n                            \n                    \n                        \n                                Returns true if there are no items available.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDown\n                    \n                \n\n                \n                    \n                        getisDown()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:135\n                                \n                            \n                    \n                        \n                                Determines if the render direction is down.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts:144\n                                \n                            \n                    \n                        \n                                Handles the dropdown value binding.\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import cloneDeep from 'lodash-es/cloneDeep';\nimport isEqual from 'lodash-es/isEqual';\nimport { Subject } from 'rxjs';\n\nimport {\n    ChangeDetectorRef,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Optional,\n    Output,\n    Self,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    UntypedFormControl,\n    FormGroupDirective,\n    NgControl,\n    NgForm,\n} from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { identifier } from '@uipath/angular/utilities';\n\nimport {\n    ISuggestValue,\n    SuggestDirection,\n    SuggestDisplayPriority,\n} from './models';\nimport {\n    checkAndNormalizeValue,\n    sortByPriorityAndDirection,\n} from './utils';\n\n@Directive()\nexport abstract class UiSuggestMatFormFieldDirective implements\n    DoCheck,\n    MatFormFieldControl,\n    ControlValueAccessor {\n\n    abstract disabled: boolean;\n\n    /**\n     * Configure if the form control label should float.\n     *\n     */\n    @HostBinding('class.floating')\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n\n    /**\n     * Configure if the input should be marked as `required` inside the form field.\n     *\n     */\n    @Input()\n    get required() {\n        return this._required;\n    }\n    /**\n     * @ignore\n     */\n    set required(required) {\n\n        required = !!required || this._elementRef.nativeElement.hasAttribute('required');\n\n        if (this._required !== required) {\n            this._required = required;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Determine if the component is rendered inside a form control\n     *\n     */\n    @HostBinding('class.form-control')\n    get isFormControl() {\n        return this._isFormControl || this._elementRef\n            .nativeElement\n            .classList\n            .contains('form-control');\n    }\n\n    set isFormControl(value) {\n        this._isFormControl = value;\n    }\n\n    /**\n     * Configure the component placeholder.\n     *\n     */\n    @Input()\n    get placeholder() {\n        return this._placeholder;\n    }\n\n    set placeholder(placeholder) {\n        this._placeholder = placeholder;\n        this.stateChanges.next();\n    }\n\n    /**\n     * Set a custom size for the list items.\n     *\n     */\n    @Input()\n    customItemSize?: number;\n\n    /**\n     * Computes the component item height depending on the current render mode.\n     *\n     */\n    get itemSize() {\n        if (this.customItemSize) { return this.customItemSize; }\n\n        return this.isFormControl ? 32 : 40;\n    }\n\n    /**\n     * Returns `true` if there are no items available.\n     *\n     */\n    get empty() {\n        return !this._value.length;\n    }\n\n    /**\n     * Determines if the render direction is `down`.\n     *\n     */\n    get isDown() {\n        return this._direction === 'down';\n    }\n\n    /**\n     * Handles the dropdown value binding.\n     *\n     */\n    @Input()\n    get value() {\n        return this._value;\n    }\n    /**\n     * @ignore\n     */\n    set value(newValue: ISuggestValue[]) {\n\n        const checkedNewValue = checkAndNormalizeValue(newValue);\n\n        if (isEqual(checkedNewValue, this._value)) { return; }\n\n        this._value = checkedNewValue;\n\n        for (const entry of checkedNewValue) {\n            this.selected.emit(entry);\n        }\n        this.stateChanges.next();\n        this.registerChange(checkedNewValue);\n\n        this._items = this._sortItems(this._items);\n    }\n\n    /**\n     * @ignore\n     */\n    inputControl = new UntypedFormControl('');\n\n    /**\n     * Configure the component display priority.\n     *\n     */\n    @Input()\n    displayPriority: SuggestDisplayPriority = 'default';\n\n    /**\n     * @ignore\n     */\n    @HostBinding()\n    id = `ui-suggest-${identifier()}`;\n\n    /**\n     * @ignore\n     */\n    describedBy?: string;\n\n    /**\n     * Emits the selected item value an item is selected.\n     *\n     */\n    @Output()\n    selected = new EventEmitter();\n\n    /**\n     * Emits the deselected item value when an item is deselected.\n     *\n     */\n    @Output()\n    deselected = new EventEmitter();\n\n    /**\n     * @ignore\n     */\n    errorState = false;\n    /**\n     * @ignore\n     */\n    focused = false;\n    /**\n     * @ignore\n     */\n    // eslint-disable-next-line rxjs/finnish\n    stateChanges = new Subject();\n\n    protected _direction: SuggestDirection = 'down';\n    protected _items: ISuggestValue[] = [];\n    protected _value: ISuggestValue[] = [];\n\n    private _isFormControl = false;\n\n    private _placeholder = '';\n    private _required = false;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        protected _elementRef: ElementRef,\n        private _errorStateMatcher: ErrorStateMatcher,\n        private _parentForm: NgForm,\n        private _parentFormGroup: FormGroupDirective,\n        protected _cd: ChangeDetectorRef,\n        @Optional()\n        @Self()\n        public ngControl: NgControl,\n    ) {\n        this.isFormControl = this.isFormControl || !!this.ngControl;\n\n        // prevent cyclic dependency\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    ngDoCheck() {\n        if (!this.ngControl) { return; }\n\n        const oldState = this.errorState;\n        const control = this.ngControl ?\n            this.ngControl.control as UntypedFormControl :\n            null;\n        const parent = this._parentFormGroup || this._parentForm;\n        const newState = this._errorStateMatcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    abstract onContainerClick(event: MouseEvent): void;\n\n    /**\n     * Clears the search input value.\n     */\n    clear() {\n        this.inputControl.setValue('');\n    }\n\n    /**\n     * @ignore\n     */\n    setDescribedByIds(ids: string[]) {\n        this.describedBy = ids.join(' ').trim() || undefined;\n    }\n\n    /**\n     * @ignore\n     */\n    writeValue(value: ISuggestValue[]) {\n        value = checkAndNormalizeValue(value);\n\n        if (!isEqual(value, this._value)) {\n            this._value = value;\n            this._cd.markForCheck();\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    registerChange = (_: ISuggestValue[]) => { };\n\n    /**\n     * @ignore\n     */\n    registerTouch: (ev?: Event) => void = (_?: Event) => { };\n\n    /**\n     * @ignore\n     */\n    registerOnChange(fn: (_: ISuggestValue[]) => any) {\n        this.registerChange = fn;\n    }\n\n    /**\n     * @ignore\n     */\n    registerOnTouched(fn: (ev?: Event) => void) {\n        this.registerTouch = fn;\n    }\n\n    protected _sortItems = (items: ISuggestValue[]) =>\n        sortByPriorityAndDirection(\n            cloneDeep(items),\n            this.displayPriority,\n            this.value,\n            this.isDown,\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiSuggestModule.html":{"url":"modules/UiSuggestModule.html","title":"module - UiSuggestModule","body":"\n                   \n\n\n\n\n    Modules\n    UiSuggestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiSuggestModule\n\n\n\ncluster_UiSuggestModule_imports\n\n\n\n\nUiAutoAccessibleLabelModule\n\nUiAutoAccessibleLabelModule\n\n\n\nUiSuggestModule\n\nUiSuggestModule\n\nUiSuggestModule -->\n\nUiAutoAccessibleLabelModule->UiSuggestModule\n\n\n\n\n\nUiAutofocusModule\n\nUiAutofocusModule\n\nUiSuggestModule -->\n\nUiAutofocusModule->UiSuggestModule\n\n\n\n\n\nUiClickOutsideModule\n\nUiClickOutsideModule\n\nUiSuggestModule -->\n\nUiClickOutsideModule->UiSuggestModule\n\n\n\n\n\nUiNgLetModule\n\nUiNgLetModule\n\nUiSuggestModule -->\n\nUiNgLetModule->UiSuggestModule\n\n\n\n\n\nUiVirtualScrollRangeLoaderModule\n\nUiVirtualScrollRangeLoaderModule\n\nUiSuggestModule -->\n\nUiVirtualScrollRangeLoaderModule->UiSuggestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/components/ui-suggest/src/ui-suggest.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UiAutoAccessibleLabelModule\n                        \n                        \n                            UiAutofocusModule\n                        \n                        \n                            UiClickOutsideModule\n                        \n                        \n                            UiNgLetModule\n                        \n                        \n                            UiVirtualScrollRangeLoaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { UiAutoAccessibleLabelModule } from '@uipath/angular/a11y';\nimport { UiAutofocusModule } from '@uipath/angular/directives/ui-autofocus';\nimport { UiClickOutsideModule } from '@uipath/angular/directives/ui-click-outside';\nimport { UiNgLetModule } from '@uipath/angular/directives/ui-ng-let';\nimport { UiVirtualScrollRangeLoaderModule } from '@uipath/angular/directives/ui-virtual-scroll-range-loader';\n\nimport { UiSuggestComponent } from './ui-suggest.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        ScrollingModule,\n        MatRippleModule,\n        MatProgressSpinnerModule,\n        ReactiveFormsModule,\n        UiNgLetModule,\n        UiAutofocusModule,\n        UiClickOutsideModule,\n        UiVirtualScrollRangeLoaderModule,\n        MatChipsModule,\n        UiAutoAccessibleLabelModule,\n    ],\n    declarations: [\n        UiSuggestComponent,\n    ],\n    exports: [\n        UiSuggestComponent,\n    ],\n})\nexport class UiSuggestModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiTreeItemComponent.html":{"url":"components/UiTreeItemComponent.html","title":"component - UiTreeItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiTreeItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                FocusableOption\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-tree-item[node]\n            \n\n\n\n\n            \n                templateUrl\n                ./ui-tree-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                dblclick\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                expanded\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isSelected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         IFlatNodeObject\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dblclick\n                        \n                    \n                \n            \n            \n                \ndblclick()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focus\n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { FocusableOption } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  ViewEncapsulation,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { MatListModule } from '@angular/material/list';\nimport { IFlatNodeObject } from '../models/tree.models';\n\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatListModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'ui-tree-item[node]',\n  templateUrl: './ui-tree-item.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UiTreeItemComponent implements FocusableOption {\n  @Input()\n  node!: IFlatNodeObject;\n\n  @Input()\n  isSelected = false;\n\n  @Output()\n  expanded = new EventEmitter();\n\n  @Output()\n  selected = new EventEmitter();\n\n  constructor(\n    @Inject(forwardRef(() => ElementRef))\n    private readonly _el: ElementRef,\n  ) { }\n\n  click() {\n    this.selected.emit();\n  }\n\n  dblclick() {\n    this.selected.emit();\n    this.expanded.emit();\n  }\n\n  focus() {\n    this._el.nativeElement.querySelector('.mat-list-item').focus();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiTreeItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiTreeSelectComponent.html":{"url":"components/UiTreeSelectComponent.html","title":"component - UiTreeSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UiTreeSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-tree-select\n            \n\n            \n                styleUrls\n                ./ui-tree-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui-tree-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSelectedNodes\n                            \n                            \n                                items\n                            \n                            \n                                    Optional\n                                itemTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collapse\n                            \n                            \n                                expand\n                            \n                            \n                                isExpanded\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onKeydown\n                            \n                            \n                                select\n                            \n                            \n                                toggle\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                initialSelection\n                            \n                            \n                                itemPadding\n                            \n                            \n                                itemSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                collapsed\n                            \n                            \n                                expanded\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    initialSelection\n                                \n                                \n                                    data\n                                \n                                \n                                    dataSource\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:101\n                            \n                        \n                \n                    \n                        An array of nodes. Keep in mind they will be flattened when rendered in the tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialSelection\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:68\n                            \n                        \n                \n                    \n                        Path of keys key to the node that will be selected by default. The node must be present in the data array\nIf the node is a lower level node, the parent nodes must be present in the data array and then they will be expanded automatically\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemPadding\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20px'\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 26\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:61\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        collapsed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:95\n                            \n                        \n                \n                    \n                        Emits a clone of the original node when it's collapsed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:89\n                            \n                        \n                \n                    \n                        Emits a clone of the original node when it's expanded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:83\n                            \n                        \n                \n                    \n                        Emits an array of the selected nodes (keep in mind they are clones of the original nodes)\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        collapse\n                        \n                    \n                \n            \n            \n                \ncollapse(node: IFlatNodeObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expand\n                        \n                    \n                \n            \n            \n                \nexpand(node: IFlatNodeObject, opts)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        TREE_ACTION_DEFAULTS\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpanded\n                        \n                    \n                \n            \n            \n                \nisExpanded(node: IFlatNodeObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n            \n                \nisSelected(node: IFlatNodeObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeydown\n                        \n                    \n                \n            \n            \n                \nonKeydown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n            \n                \nselect(node: IFlatNodeObject, i, opts)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    i\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this._keyManager?.activeItemIndex\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        TREE_ACTION_DEFAULTS\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(node: IFlatNodeObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ($event: MouseEvent) => void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackById\n                        \n                    \n                \n            \n            \n                \ntrackById(_idx: number, node: IFlatNodeObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node\n                                    \n                                                IFlatNodeObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TrackByFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSelectedNodes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(UiTreeItemComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        itemTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild('itemTemplate')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        initialSelection\n                    \n                \n\n\n                \n                    \n                        setinitialSelection(value: string[] | null)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:68\n                                \n                            \n                    \n                        \n                                Path of keys key to the node that will be selected by default. The node must be present in the data array\nIf the node is a lower level node, the parent nodes must be present in the data array and then they will be expanded automatically\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string[] | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(value: ITreeNode[] | null)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:101\n                                \n                            \n                    \n                        \n                                An array of nodes. Keep in mind they will be flattened when rendered in the tree\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            ITreeNode[] | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n\n                \n                    \n                        getdataSource()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts:105\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n    CdkTreeModule, FlatTreeControl,\n} from '@angular/cdk/tree';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChildren,\n    ViewEncapsulation,\n} from '@angular/core';\n\nimport { MatTreeFlatDataSource } from '@angular/material/tree';\n\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { MatListModule } from '@angular/material/list';\nimport { CommonModule } from '@angular/common';\nimport { UiContentLoaderModule } from '@uipath/angular/directives/ui-content-loader';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport {\n    ITreeNode, IFlatNodeObject,\n} from './models/tree.models';\nimport {\n    TreeUtils, TREE_ACTION_DEFAULTS,\n} from './utils/tree.utils';\nimport { UiTreeItemComponent } from './ui-tree-item/ui-tree-item.component';\n\n@Component({\n    standalone: true,\n    imports: [\n        CommonModule,\n        MatListModule,\n\n        UiTreeItemComponent,\n        UiContentLoaderModule,\n\n        CdkTreeModule,\n        ScrollingModule,\n    ],\n    selector: 'ui-tree-select',\n    templateUrl: './ui-tree-select.component.html',\n    styleUrls: ['./ui-tree-select.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class UiTreeSelectComponent implements AfterViewInit {\n\n    @ViewChildren(UiTreeItemComponent)\n    items!: QueryList;\n\n    @ContentChild('itemTemplate')\n    itemTemplate?: any;\n\n    @Input()\n    itemSize = 26;\n\n    /**\n     * Path of keys key to the node that will be selected by default. The node must be present in the data array\n     * If the node is a lower level node, the parent nodes must be present in the data array and then they will be expanded automatically\n     */\n    @Input()\n    set initialSelection(value: string[] | null) {\n        this._initialSelection = value ?? [];\n        if (this._initialSelection.length > 0) {\n            this._selectInitialNode();\n        }\n    }\n\n    @HostBinding('style.--ui-tree-select-item-padding')\n    @Input()\n    itemPadding = '20px';\n\n    /**\n     * Emits an array of the selected nodes (keep in mind they are clones of the original nodes)\n     */\n    @Output()\n    selected = new EventEmitter();\n\n    /**\n     * Emits a clone of the original node when it's expanded\n     */\n    @Output()\n    expanded = new EventEmitter();\n\n    /**\n     * Emits a clone of the original node when it's collapsed\n     */\n    @Output()\n    collapsed = new EventEmitter();\n\n    /**\n     * An array of nodes. Keep in mind they will be flattened when rendered in the tree\n     */\n    @Input()\n    set data(value: ITreeNode[] | null) {\n        this._dataSource.data = value ?? [];\n    }\n\n    get dataSource() {\n        return this._dataSource;\n    }\n\n    currentSelectedNodes = new Map();\n\n    private _keyManager!: FocusKeyManager;\n    private _treeControl = new FlatTreeControl(TreeUtils.getNodeLevel, TreeUtils.getIsNodeExpandable, {\n        trackBy: (node) => node.key,\n    });\n    private _dataSource: MatTreeFlatDataSource = new MatTreeFlatDataSource(\n        this._treeControl,\n        TreeUtils.treeFlattener,\n    );\n\n    private _initialSelection: string[] = [];\n\n    ngAfterViewInit() {\n        this._keyManager = new FocusKeyManager(this.items);\n        if (this._initialSelection.length) {\n            this._selectInitialNode();\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        const activeNode = this._keyManager.activeItem?.node;\n        if (!activeNode) {\n            this._keyManager.onKeydown(event);\n            return;\n        }\n\n        const wasHandled = this._customKeydownHandle(event.key, activeNode);\n        if (!wasHandled) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    isExpanded(node: IFlatNodeObject) {\n        return this._treeControl.isExpanded(node);\n    }\n\n    isSelected(node: IFlatNodeObject) {\n        return this.currentSelectedNodes.has(node.key);\n    }\n\n    trackById(_idx: number, node: IFlatNodeObject): TrackByFunction {\n        return node.key as any;\n    }\n\n    select(node: IFlatNodeObject, i = this._keyManager?.activeItemIndex, opts = TREE_ACTION_DEFAULTS) {\n        if (i || i === 0) {\n            this._keyManager?.updateActiveItem(i);\n        }\n        // NOTE: the `clear` call can be removed to implement multi-select\n        this.currentSelectedNodes.clear();\n\n        this.currentSelectedNodes.set(node.key, node);\n        const selection = Array.from(this.currentSelectedNodes.values())\n            .map(v => TreeUtils.nodeBackTransformer(v))\n            .filter(Boolean) as ITreeNode[];\n\n        if (opts.emitEvent) {\n            this.selected.emit(selection);\n        }\n    }\n\n    expand(node: IFlatNodeObject, opts = TREE_ACTION_DEFAULTS) {\n        if (this._treeControl.isExpanded(node) || !node.hasChildren) {\n            return;\n        }\n        this._treeControl.expand(node);\n        if (opts.emitEvent) {\n            this.expanded.emit(node);\n        }\n    }\n\n    collapse(node: IFlatNodeObject) {\n        if (!this._treeControl.isExpanded(node) || !node.hasChildren) {\n            return;\n        }\n        this._treeControl.collapse(node);\n        this.collapsed.emit(node);\n    }\n\n    toggle(node: IFlatNodeObject) {\n        return ($event: MouseEvent) => {\n            $event.stopPropagation();\n            if (this._treeControl.isExpanded(node)) {\n                this.collapse(node);\n            } else {\n                this.expand(node);\n            }\n        };\n    }\n\n    private _customKeydownHandle(eventKey: string, activeNode: IFlatNodeObject) {\n        let wasHandled = false;\n        if (eventKey === 'Enter') {\n            this.select(activeNode);\n            wasHandled = true;\n        }\n        if (['ArrowRight', 'Right'].includes(eventKey)) {\n            this.expand(activeNode);\n            wasHandled = true;\n        }\n        if (['ArrowLeft', 'Left'].includes(eventKey)) {\n            this.collapse(activeNode);\n            wasHandled = true;\n        }\n        return wasHandled;\n    }\n\n    private _selectInitialNode() {\n        this._initialSelection.forEach((key, i) => {\n            const node = TreeUtils.getNodeByKey(key, i, this._treeControl);\n\n            if (i  n.key === node.key);\n                this.select(node, activeIndex, { emitEvent: false });\n            }\n        });\n    }\n}\n\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./ui-tree-select.component.scss\n                \n                .tree-item-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n}\n\n@mixin perLevelPadding($level, $padding) {\n  .node-level-#{$level} {\n      &:not(.node-type-leaf) {\n          padding-left: calc($padding * $level);\n      }\n\n      &.node-type-leaf {\n          padding-left: calc($padding + max($padding, calc($padding * ($level + 1))));\n      }\n  }\n}\n\n.tree-container {\n  @for $i from 0 through 7 {\n      @include perLevelPadding($i, var(--ui-tree-select-item-padding));\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                            '\n    var COMPONENTS = [{'name': 'UiButtonProgressBarComponent', 'selector': 'ui-button-progress-bar'},{'name': 'UiButtonProgressSpinnerComponent', 'selector': 'ui-button-progress-spinner'},{'name': 'UiContentSpinnerComponent', 'selector': 'ui-content-spinner'},{'name': 'UiGridComponent', 'selector': 'ui-grid'},{'name': 'UiGridCustomPaginatorComponent', 'selector': 'ui-grid-custom-paginator'},{'name': 'UiGridSearchComponent', 'selector': 'ui-grid-search'},{'name': 'UiGridToggleColumnsComponent', 'selector': 'COMPONENT_SELECTOR'},{'name': 'UiPasswordIndicatorComponent', 'selector': 'ui-password-indicator'},{'name': 'UiPasswordToggleComponent', 'selector': 'ui-password-toggle'},{'name': 'UiSecondFormatDirective', 'selector': 'ui-secondformat'},{'name': 'UiSnackBarComponent', 'selector': ''},{'name': 'UiTreeItemComponent', 'selector': 'ui-tree-item[node]'},{'name': 'UiTreeSelectComponent', 'selector': 'ui-tree-select'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutDirective', 'selector': '[uiKeyboardShortcut][shortcutKeys]'},{'name': 'UiAutoAccessibleLabelDirective', 'selector': ''},{'name': 'UiAutofocusDirective', 'selector': '[uiAutofocus]'},{'name': 'UiClickOutsideDirective', 'selector': '[uiClickOutside]'},{'name': 'UiClipboardDirective', 'selector': '[uiClipboard]'},{'name': 'UiContentLoaderDirective', 'selector': '[uiContentLoading]'},{'name': 'UiDateFormatDirective', 'selector': '[uiDateFormat], ui-dateformat'},{'name': 'UiDragAndDropFileDirective', 'selector': '[uiDragAndDropFile]'},{'name': 'UiFormatDirective', 'selector': ''},{'name': 'UiGridColumnDirective', 'selector': '[uiGridColumn], ui-grid-column'},{'name': 'UiGridDropdownFilterDirective', 'selector': '[uiGridDropdownFilter], ui-grid-dropdown-filter'},{'name': 'UiGridExpandedRowDirective', 'selector': '[uiGridExpandedRow], ui-grid-expanded-row'},{'name': 'UiGridFooterDirective', 'selector': '[uiGridFooter], ui-grid-footer'},{'name': 'UiGridHeaderButtonDirective', 'selector': '[uiHeaderButton], ui-header-button'},{'name': 'UiGridHeaderDirective', 'selector': '[uiGridHeader], ui-grid-header'},{'name': 'UiGridLoadingDirective', 'selector': '[uiGridLoading], ui-grid-loading'},{'name': 'UiGridNoContentDirective', 'selector': '[uiGridNoContent], ui-grid-no-content'},{'name': 'UiGridRowActionDirective', 'selector': '[uiGridRowAction], ui-grid-row-action'},{'name': 'UiGridRowConfigDirective', 'selector': '[uiGridRowConfig], ui-grid-row-config'},{'name': 'UiGridSearchFilterDirective', 'selector': '[uiGridSearchFilter], ui-grid-search-filter'},{'name': 'UiLoaderButtonDirective', 'selector': ''},{'name': 'UiMatFormFieldRequiredDirective', 'selector': 'mat-form-field'},{'name': 'UiNgLetDirective', 'selector': '[ngLet]'},{'name': 'UiProgressButtonDirective', 'selector': '\n        button[mat-button][ui-progress-button],\n        button[mat-raised-button][ui-progress-button],\n        button[mat-stroked-button][ui-progress-button],\n        button[mat-flat-button][ui-progress-button],\n        button[mat-button][uiProgressButton],\n        button[mat-raised-button][uiProgressButton],\n        button[mat-stroked-button][uiProgressButton],\n        button[mat-flat-button][uiProgressButton],\n    '},{'name': 'UiScrollIntoViewDirective', 'selector': '[uiScrollIntoView]'},{'name': 'UiSpinnerButtonDirective', 'selector': '\n        button[mat-icon-button][ui-spinner-button],\n        button[mat-fab][ui-spinner-button],\n        button[mat-mini-fab][ui-spinner-button],\n        button[mat-icon-button][uiSpinnerButton],\n        button[mat-raised-button][ui-spinner-button],\n        button[mat-stroked-button][ui-spinner-button],\n        button[mat-flat-button][ui-spinner-button],\n        button[mat-button][uiSpinnerButton],\n        button[mat-raised-button][uiSpinnerButton],\n        button[mat-stroked-button][uiSpinnerButton],\n        button[mat-flat-button][uiSpinnerButton],\n        button[mat-fab][uiSpinnerButton],\n        button[mat-mini-fab][uiSpinnerButton],\n        button[mat-button][ui-spinner-button],\n    '},{'name': 'UiSuggestMatFormFieldDirective', 'selector': ''},{'name': 'UiVirtualScrollRangeLoaderDirective', 'selector': '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader'},{'name': 'UiVirtualScrollViewportResizeDirective', 'selector': '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize'}];\n    var ACTUAL_COMPONENT = {'name': 'UiTreeSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiVirtualScrollRangeLoaderDirective.html":{"url":"directives/UiVirtualScrollRangeLoaderDirective.html","title":"directive - UiVirtualScrollRangeLoaderDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiVirtualScrollRangeLoaderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-virtual-scroll-range-loader/src/ui-virtual-scroll-range-loader.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that is designed to work alongside CdkVirtualScrollViewport\nwhich can be used to lazy load in chunks depending on what is in view\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buffer\n                            \n                            \n                                isDown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rangeLoad\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        buffer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-virtual-scroll-range-loader/src/ui-virtual-scroll-range-loader.directive.ts:83\n                            \n                        \n                \n                    \n                        Used to extend the ListRange interval emmited by rangeLoad Output\nthis will expand at both ends with the specified number,\ntaking into account the status of the loading items\navailable\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isDown\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-virtual-scroll-range-loader/src/ui-virtual-scroll-range-loader.directive.ts:90\n                            \n                        \n                \n                    \n                        Flag used to indicate the direction of items\nset to false if virtual scroll events indexes need to be reversed\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        rangeLoad\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-virtual-scroll-range-loader/src/ui-virtual-scroll-range-loader.directive.ts:100\n                            \n                        \n                \n                    \n                        Output of ListRange events based on renderedRangeStream from\nCdkVirtualScrollViewport which takes into account\ndirection of list (isDown), buffer\nand reduces interval to untouched indexes (items with loading: \"initial\")\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    map,\n    startWith,\n    takeUntil,\n    tap,\n    withLatestFrom,\n} from 'rxjs/operators';\n\nimport { ListRange } from '@angular/cdk/collections';\nimport {\n    CdkVirtualForOf,\n    CdkVirtualScrollViewport,\n} from '@angular/cdk/scrolling';\nimport {\n    ContentChild,\n    Directive,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    Self,\n} from '@angular/core';\n\n/**\n * Used for marking the loading state of items\n * within a lazily loaded collection\n *\n * @export\n */\nexport enum VirtualScrollItemStatus {\n    /**\n     * Initial status of an item within the collection,\n     * a placeholder with no content\n     */\n    initial = 'initial',\n    /**\n     * Item marked as pending to be loaded, a request was sent out,\n     * but still no content, item data was not yet received\n     */\n    pending = 'pending',\n    /**\n     * Item with content, data of item has been loaded\n     */\n    loaded = 'loaded',\n}\n\n/**\n * Item with loading state to be used\n * if lazily loading results to reduce events emitted\n * and intervals emitted within events on `rangeLoad` Output\n *\n * @export\n */\nexport interface VirtualScrollItem {\n    loading?: VirtualScrollItemStatus;\n}\n\n/**\n * A directive that is designed to work alongside CdkVirtualScrollViewport\n * which can be used to lazy load in chunks depending on what is in view\n *\n * @export\n */\n@Directive({\n    selector: '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader',\n})\nexport class UiVirtualScrollRangeLoaderDirective implements OnInit, OnDestroy {\n\n    /**\n     * Used to extend the ListRange interval emmited by rangeLoad Output\n     * this will expand at both ends with the specified number,\n     * taking into account the status of the loading items\n     * available\n     *\n     */\n    @Input()\n    buffer = 10;\n\n    /**\n     * Flag used to indicate the direction of items\n     * set to `false` if virtual scroll events indexes need to be reversed\n     */\n    @Input()\n    isDown = true;\n\n    /**\n     * Output of `ListRange` events based on renderedRangeStream from\n     * CdkVirtualScrollViewport which takes into account\n     * direction of list (`isDown`), `buffer`\n     * and reduces interval to untouched indexes (items with `loading: \"initial\"`)\n     *\n     */\n    @Output()\n    rangeLoad = new EventEmitter();\n\n    @ContentChild(CdkVirtualForOf, {\n        static: true,\n    })\n    private readonly _cdkVirtualForOf!: CdkVirtualForOf;\n\n    private readonly _destroyed$ = new Subject();\n\n    /**\n     * @ignore\n     */\n    constructor(\n        @Self()\n        @Inject(CdkVirtualScrollViewport)\n        private readonly _viewport: CdkVirtualScrollViewport,\n    ) { }\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        this._viewport.renderedRangeStream\n            .pipe(\n                withLatestFrom(\n                    this._cdkVirtualForOf.dataStream.pipe(\n                        startWith([] as VirtualScrollItem[]),\n                    ),\n                ),\n                distinctUntilChanged(([list1], [list2]) => `${list1.start}${list1.end}` === `${list2.start}${list2.end}`),\n                debounceTime(100),\n                // filter early, in case of false emissions like { 0,0 }\n                filter(([{ start, end }]) => this._isValidRange({\n                    start,\n                    end,\n                })),\n                filter(this._filterTouchedRange),\n                map(([{ start, end }, items]) => ({\n                    ...this._adjustLoadingRange(start, end, this.buffer, items),\n                    items,\n                })),\n                // eslint-disable-next-line sonarjs/no-identical-functions\n                filter(({ start, end }) => this._isValidRange({\n                    start,\n                    end,\n                })),\n                map(({ start, end, items }) =>\n                    this.isDown ?\n                        {\n                            start,\n                            end,\n                        } :\n                        this._reverseIndex({\n                            start,\n                            end,\n                        }, items.length),\n                ),\n                filter(this._isValidRange),\n                tap(range => this.rangeLoad.emit(range)),\n            )\n            .pipe(takeUntil(this._destroyed$))\n            .subscribe();\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n\n    private _filterTouchedRange = (\n        [{ start, end }, items]: [ListRange, VirtualScrollItem[] | readonly VirtualScrollItem[]],\n    ) =>\n        items\n            .slice(start, end)\n            .some(({ loading }) => loading === VirtualScrollItemStatus.initial);\n\n    private _isValidRange = ({ start, end }: ListRange) => end >= 0 && start >= 0 && end - start >= 0;\n    private _reverseIndex({ start, end }: ListRange, count: number) {\n        return {\n            start: count - 1 - end,\n            end: count - 1 - start,\n        };\n    }\n\n    private _adjustLoadingRange(\n        start: number,\n        end: number,\n        buffer: number,\n        items: VirtualScrollItem[] | readonly VirtualScrollItem[]): ListRange {\n        (\n            { start, end } = this._addSafeBuffer(start, end, buffer, items)\n        );\n\n        let isTrimmedBefore;\n        let isTrimmedAfter;\n\n        (\n            { start, end, isTrimmedBefore, isTrimmedAfter } = this._trimInterval(start, end, items)\n        );\n\n        if (start > end) {\n            // kill the request\n            return {\n                start,\n                end: -1,\n            };\n        }\n\n        const isNotTrimmedAtBothEnds = !isTrimmedBefore || !isTrimmedAfter;\n        if (\n            end - start  end) {\n            // kill the request\n            end = -1;\n        }\n\n        return {\n            start,\n            end,\n        };\n    }\n\n    private _addSafeBuffer(start: number, end: number, buffer: number, items: VirtualScrollItem[] | readonly VirtualScrollItem[]) {\n        end = Math.min(end + buffer, items.length - 1);\n        start = Math.max(start - buffer, 0);\n        return {\n            start,\n            end,\n        };\n    }\n\n    private _trimInterval(start: number, end: number, items: VirtualScrollItem[] | readonly VirtualScrollItem[]) {\n        let isTrimmedBefore = false;\n        let isTrimmedAfter = false;\n        while (start = start &&\n            items[end].loading !== VirtualScrollItemStatus.initial) {\n            isTrimmedAfter = true;\n            end -= 1;\n        }\n        return {\n            start,\n            end,\n            isTrimmedBefore,\n            isTrimmedAfter,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiVirtualScrollRangeLoaderModule.html":{"url":"modules/UiVirtualScrollRangeLoaderModule.html","title":"module - UiVirtualScrollRangeLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    UiVirtualScrollRangeLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiVirtualScrollRangeLoaderModule\n\n\n\ncluster_UiVirtualScrollRangeLoaderModule_declarations\n\n\n\ncluster_UiVirtualScrollRangeLoaderModule_exports\n\n\n\n\nUiVirtualScrollRangeLoaderDirective\n\nUiVirtualScrollRangeLoaderDirective\n\n\n\nUiVirtualScrollRangeLoaderModule\n\nUiVirtualScrollRangeLoaderModule\n\nUiVirtualScrollRangeLoaderModule -->\n\nUiVirtualScrollRangeLoaderDirective->UiVirtualScrollRangeLoaderModule\n\n\n\n\n\nUiVirtualScrollRangeLoaderDirective \n\nUiVirtualScrollRangeLoaderDirective \n\nUiVirtualScrollRangeLoaderDirective  -->\n\nUiVirtualScrollRangeLoaderModule->UiVirtualScrollRangeLoaderDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-virtual-scroll-range-loader/src/ui-virtual-scroll-range-loader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiVirtualScrollRangeLoaderDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiVirtualScrollRangeLoaderDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { UiVirtualScrollRangeLoaderDirective } from './ui-virtual-scroll-range-loader.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ScrollingModule,\n    ],\n    declarations: [UiVirtualScrollRangeLoaderDirective],\n    exports: [UiVirtualScrollRangeLoaderDirective],\n})\nexport class UiVirtualScrollRangeLoaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UiVirtualScrollViewportResizeDirective.html":{"url":"directives/UiVirtualScrollViewportResizeDirective.html","title":"directive - UiVirtualScrollViewportResizeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  UiVirtualScrollViewportResizeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-virtual-scroll-viewport-resize/src/ui-virtual-scroll-viewport-resize.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that is designed to work alongside CdkVirtualScrollViewport\nwhich triggers the viewport size check when the windows is resized\nor when the input length is changed.\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    total\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        total\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular/directives/ui-virtual-scroll-viewport-resize/src/ui-virtual-scroll-viewport-resize.directive.ts:42\n                            \n                        \n                \n                    \n                        The total item length.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        total\n                    \n                \n\n\n                \n                    \n                        settotal(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular/directives/ui-virtual-scroll-viewport-resize/src/ui-virtual-scroll-viewport-resize.directive.ts:42\n                                \n                            \n                    \n                        \n                                The total item length.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    fromEvent,\n    merge,\n    Subject,\n} from 'rxjs';\nimport {\n    debounceTime,\n    delay,\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\n\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Self,\n} from '@angular/core';\n\n/**\n * A directive that is designed to work alongside CdkVirtualScrollViewport\n * which triggers the viewport size check when the windows is resized\n * or when the input length is changed.\n *\n * @export\n */\n@Directive({\n    selector: '[uiVirtualScrollViewportResize], ui-virtual-scroll-viewport-resize',\n})\nexport class UiVirtualScrollViewportResizeDirective implements OnInit, OnDestroy {\n    private readonly _destroy$ = new Subject();\n    private readonly _total$ = new Subject();\n\n    /**\n     * The total item length.\n     */\n    @Input()\n    set total(value: number) {\n        if (this._viewport.getDataLength() === value) { return; }\n\n        this._total$.next(value);\n    }\n\n    /**\n     * @ignore\n     */\n    constructor(\n        @Self()\n        @Inject(CdkVirtualScrollViewport)\n        private readonly _viewport: CdkVirtualScrollViewport,\n        @Inject(DOCUMENT)\n        private readonly _document: any,\n    ) { }\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        merge(\n            fromEvent(this._document.defaultView!, 'resize')\n                .pipe(\n                    debounceTime(1000 / 60),\n                ),\n            this._total$.pipe(\n                delay(0),\n            ),\n        )\n            .pipe(\n                tap(() => this._viewport.checkViewportSize()),\n                takeUntil(this._destroy$),\n            )\n            .subscribe();\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiVirtualScrollViewportResizeModule.html":{"url":"modules/UiVirtualScrollViewportResizeModule.html","title":"module - UiVirtualScrollViewportResizeModule","body":"\n                   \n\n\n\n\n    Modules\n    UiVirtualScrollViewportResizeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiVirtualScrollViewportResizeModule\n\n\n\ncluster_UiVirtualScrollViewportResizeModule_declarations\n\n\n\ncluster_UiVirtualScrollViewportResizeModule_exports\n\n\n\n\nUiVirtualScrollViewportResizeDirective\n\nUiVirtualScrollViewportResizeDirective\n\n\n\nUiVirtualScrollViewportResizeModule\n\nUiVirtualScrollViewportResizeModule\n\nUiVirtualScrollViewportResizeModule -->\n\nUiVirtualScrollViewportResizeDirective->UiVirtualScrollViewportResizeModule\n\n\n\n\n\nUiVirtualScrollViewportResizeDirective \n\nUiVirtualScrollViewportResizeDirective \n\nUiVirtualScrollViewportResizeDirective  -->\n\nUiVirtualScrollViewportResizeModule->UiVirtualScrollViewportResizeDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular/directives/ui-virtual-scroll-viewport-resize/src/ui-virtual-scroll-viewport-resize.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UiVirtualScrollViewportResizeDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UiVirtualScrollViewportResizeDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiVirtualScrollViewportResizeDirective } from './ui-virtual-scroll-viewport-resize.directive';\n\n@NgModule({\n    declarations: [UiVirtualScrollViewportResizeDirective],\n    exports: [UiVirtualScrollViewportResizeDirective],\n})\nexport class UiVirtualScrollViewportResizeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VirtualScrollItem.html":{"url":"interfaces/VirtualScrollItem.html","title":"interface - VirtualScrollItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VirtualScrollItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular/directives/ui-virtual-scroll-range-loader/src/ui-virtual-scroll-range-loader.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Item with loading state to be used\nif lazily loading results to reduce events emitted\nand intervals emitted within events on rangeLoad Output\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         VirtualScrollItemStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VirtualScrollItemStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Subject } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    map,\n    startWith,\n    takeUntil,\n    tap,\n    withLatestFrom,\n} from 'rxjs/operators';\n\nimport { ListRange } from '@angular/cdk/collections';\nimport {\n    CdkVirtualForOf,\n    CdkVirtualScrollViewport,\n} from '@angular/cdk/scrolling';\nimport {\n    ContentChild,\n    Directive,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    Self,\n} from '@angular/core';\n\n/**\n * Used for marking the loading state of items\n * within a lazily loaded collection\n *\n * @export\n */\nexport enum VirtualScrollItemStatus {\n    /**\n     * Initial status of an item within the collection,\n     * a placeholder with no content\n     */\n    initial = 'initial',\n    /**\n     * Item marked as pending to be loaded, a request was sent out,\n     * but still no content, item data was not yet received\n     */\n    pending = 'pending',\n    /**\n     * Item with content, data of item has been loaded\n     */\n    loaded = 'loaded',\n}\n\n/**\n * Item with loading state to be used\n * if lazily loading results to reduce events emitted\n * and intervals emitted within events on `rangeLoad` Output\n *\n * @export\n */\nexport interface VirtualScrollItem {\n    loading?: VirtualScrollItemStatus;\n}\n\n/**\n * A directive that is designed to work alongside CdkVirtualScrollViewport\n * which can be used to lazy load in chunks depending on what is in view\n *\n * @export\n */\n@Directive({\n    selector: '[uiVirtualScrollRangeLoader], ui-virtual-scroll-range-loader',\n})\nexport class UiVirtualScrollRangeLoaderDirective implements OnInit, OnDestroy {\n\n    /**\n     * Used to extend the ListRange interval emmited by rangeLoad Output\n     * this will expand at both ends with the specified number,\n     * taking into account the status of the loading items\n     * available\n     *\n     */\n    @Input()\n    buffer = 10;\n\n    /**\n     * Flag used to indicate the direction of items\n     * set to `false` if virtual scroll events indexes need to be reversed\n     */\n    @Input()\n    isDown = true;\n\n    /**\n     * Output of `ListRange` events based on renderedRangeStream from\n     * CdkVirtualScrollViewport which takes into account\n     * direction of list (`isDown`), `buffer`\n     * and reduces interval to untouched indexes (items with `loading: \"initial\"`)\n     *\n     */\n    @Output()\n    rangeLoad = new EventEmitter();\n\n    @ContentChild(CdkVirtualForOf, {\n        static: true,\n    })\n    private readonly _cdkVirtualForOf!: CdkVirtualForOf;\n\n    private readonly _destroyed$ = new Subject();\n\n    /**\n     * @ignore\n     */\n    constructor(\n        @Self()\n        @Inject(CdkVirtualScrollViewport)\n        private readonly _viewport: CdkVirtualScrollViewport,\n    ) { }\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        this._viewport.renderedRangeStream\n            .pipe(\n                withLatestFrom(\n                    this._cdkVirtualForOf.dataStream.pipe(\n                        startWith([] as VirtualScrollItem[]),\n                    ),\n                ),\n                distinctUntilChanged(([list1], [list2]) => `${list1.start}${list1.end}` === `${list2.start}${list2.end}`),\n                debounceTime(100),\n                // filter early, in case of false emissions like { 0,0 }\n                filter(([{ start, end }]) => this._isValidRange({\n                    start,\n                    end,\n                })),\n                filter(this._filterTouchedRange),\n                map(([{ start, end }, items]) => ({\n                    ...this._adjustLoadingRange(start, end, this.buffer, items),\n                    items,\n                })),\n                // eslint-disable-next-line sonarjs/no-identical-functions\n                filter(({ start, end }) => this._isValidRange({\n                    start,\n                    end,\n                })),\n                map(({ start, end, items }) =>\n                    this.isDown ?\n                        {\n                            start,\n                            end,\n                        } :\n                        this._reverseIndex({\n                            start,\n                            end,\n                        }, items.length),\n                ),\n                filter(this._isValidRange),\n                tap(range => this.rangeLoad.emit(range)),\n            )\n            .pipe(takeUntil(this._destroyed$))\n            .subscribe();\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n\n    private _filterTouchedRange = (\n        [{ start, end }, items]: [ListRange, VirtualScrollItem[] | readonly VirtualScrollItem[]],\n    ) =>\n        items\n            .slice(start, end)\n            .some(({ loading }) => loading === VirtualScrollItemStatus.initial);\n\n    private _isValidRange = ({ start, end }: ListRange) => end >= 0 && start >= 0 && end - start >= 0;\n    private _reverseIndex({ start, end }: ListRange, count: number) {\n        return {\n            start: count - 1 - end,\n            end: count - 1 - start,\n        };\n    }\n\n    private _adjustLoadingRange(\n        start: number,\n        end: number,\n        buffer: number,\n        items: VirtualScrollItem[] | readonly VirtualScrollItem[]): ListRange {\n        (\n            { start, end } = this._addSafeBuffer(start, end, buffer, items)\n        );\n\n        let isTrimmedBefore;\n        let isTrimmedAfter;\n\n        (\n            { start, end, isTrimmedBefore, isTrimmedAfter } = this._trimInterval(start, end, items)\n        );\n\n        if (start > end) {\n            // kill the request\n            return {\n                start,\n                end: -1,\n            };\n        }\n\n        const isNotTrimmedAtBothEnds = !isTrimmedBefore || !isTrimmedAfter;\n        if (\n            end - start  end) {\n            // kill the request\n            end = -1;\n        }\n\n        return {\n            start,\n            end,\n        };\n    }\n\n    private _addSafeBuffer(start: number, end: number, buffer: number, items: VirtualScrollItem[] | readonly VirtualScrollItem[]) {\n        end = Math.min(end + buffer, items.length - 1);\n        start = Math.max(start - buffer, 0);\n        return {\n            start,\n            end,\n        };\n    }\n\n    private _trimInterval(start: number, end: number, items: VirtualScrollItem[] | readonly VirtualScrollItem[]) {\n        let isTrimmedBefore = false;\n        let isTrimmedAfter = false;\n        while (start = start &&\n            items[end].loading !== VirtualScrollItemStatus.initial) {\n            isTrimmedAfter = true;\n            end -= 1;\n        }\n        return {\n            start,\n            end,\n            isTrimmedBefore,\n            isTrimmedAfter,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nv13.13.0 (2022-11-23)\n\ngrid add overridable input that reset grid state and emits after (by default it clears search term, filters and sorting)\n\nv13.12.5 (2022-11-22)\n\ndateformat avoid using macrotasks using setTimeout generated a lot of macrotasks\ntest update test naming\nchore bump\n\nv13.12.4 (2022-11-22)\n\ndateformat call markForCheck only on initial assignment markForCheck is needed so that changes propagate to matTooltip\n\nv13.12.3 (2022-11-14)\n\ngrid expose resize stream\n\nv13.12.2 (2022-11-11)\n\nplayground set the minimum height of page\nplayground add example for expanded inline ui-suggest\nsuggest add support for expandInline\nplayground add example of lazy load for ui-suggest\nsuggest add support lazy mode\n\nv13.12.1 (2022-11-10)\n\ngrid search grid filter\ngrid add label to declare sortable columns\n\nv13.12.0 (2022-11-10)\n\nconsumer should provide localization for the message found in closeSnackbarShortcut\nsnackbar close snackbar using shortcut\nkeyboard-shortcut create directive\n\nv13.11.0 (2022-11-08)\n\ngrid add option for dynamic hiding footer\ndeps bump loader-utils from 2.0.2 to 2.0.3\nfix bump version\n\nv13.10.1 (2022-11-07)\n\ngrid remove logging\n\nv13.10.0 (2022-11-07)\n\ngrid add support for multiple selection suggest filter\ndeps bump follow-redirects from 1.14.7 to 1.15.2\ndeps bump trim-newlines and @commitlint/cli\ndeps bump minimist and commitizen\ndeps bump async from 2.6.3 to 2.6.4\ndeps bump moment from 2.29.1 to 2.29.4\ndeps bump terser and @angular-devkit/build-angular\ndeps bump ansi-regex\nchore bump minor version\n\nv13.9.0 (2022-11-01)\n\nsuggest add disabled flag to ISuggestValue\nsuggest add displayValueFactory input\nchore bump minor version\n\nv13.8.0 (2022-10-04)\n\ngrid multiple expanded rows\n\nv13.7.2 (2022-09-21)\n\ndateformat run detectChanges only if date input value changes\n\nv13.7.1 (2022-09-07)\n\ngrid add column input used for sorting\n\nv13.7.0 (2022-09-01)\n\nsuggest flag unsupported minChars & enableCustomValue combo\nsuggest same label name triggers the add option\nsuggest suggestion list size is too small\n\nv13.6.8 (2022-08-26)\n\ngrid set indeterminate to true if not all rows are selected\ngrid unselect header checkbox if selection manager has no value\n\nv13.6.7 (2022-08-18)\n\ndateformat trigger change detection on setting input\n\nv13.6.6 (2022-08-12)\n\ngrid hide expanded filters on row selection\ngrid hide custom filter btn on row selection\n\nv13.6.5 (2022-08-11)\n\ndateformat add injection token properties\ngrid hide expanded filters if grid has custom filter\n\nv13.6.4 (2022-08-09)\n\nchore bump patch version\n\nv13.6.3 (2022-08-09)\n\nsuggest do not clear the search input on selecting an item\n\nv13.6.2 (2022-08-08)\n\nsuggest remove extra space\n\nv13.6.1 (2022-08-04)\n\ngrid add column description icon\ngrid expose default filter values\ngrid add toggle columns divider\n\nv13.6.0 (2022-07-28)\n\nfix fix the return value of valueSummary func\nrefactor extract valueSummary func\nchore add unit tests\nsuggest add compact summary support\n\nv13.5.0 (2022-07-21)\n\ndeps add dom iterable in tsconfig\ngrid add tests for custom filter\nplayground add custom filter input\ngrid add input for custom filter value\nplayground convert filter value to string\n\nv13.4.1 (2022-06-22)\n\nsuggest hide no results when header items are available\n\nv13.4.0 (2022-06-09)\n\nsuggest implement custom header slot\n\nv13.3.3 (2022-05-13)\n\ngrid update tests for page index reset\ngrid do not reset page index for same search value\ngrid set page index in tests\n\nv13.3.2 (2022-05-12)\n\ngrid set first page when page index exists\n\nv13.3.1 (2022-05-11)\n\ngrid set proper import path\n\nv13.3.0 (2022-05-11)\n\ngrid add tests\ngrid add keyboard column resize\nsuggest add auto-accessible-label module\ngrid add test\ngrid reset page after search\ngrid update header elements rendering order\n\nv13.2.3 (2022-04-26)\n\ngrid update header elements rendering order\n\nv13.2.2 (2022-03-17)\n\ngrid change column icon and divider height\nsuggest results remove italics\n\nv13.2.1 (2022-03-04)\n\nchore karma bump\nsuggest add tests\nsuggest refocus post item selection\nsuggest on multiple always clear input\nsuggest push custom item only on single select\n\nv13.2.0 (2022-02-23)\n\nsuggest add input for removable chips\n\nv13.1.0 (2022-02-22)\n\ngrid add test cases for empty filter state\ngrid add filters empty state input\nsuggest add missing theme class\nsuggest add tooltip & ellipsis to chips\n\nv13.0.1 (2022-02-22)\n\nsuggest prevent chip remove on multiselect & readonly\nsuggest update tests\n\nv13.0.0 (2022-02-08)\n\nchore npm audit\nchore bump angular version\nsuggest persist drilldown selected value\n\nv13.0.0-rc.13 (2022-01-31)\n\nsuggest expose input to allow fetching while closed consumers may use this to reset/refetch items even if closed in order to trigger validations\n\nv13.0.0-rc.11 (2022-01-27)\n\nsuggest add multiple custom value support\nchore change playground port\n\nv13.0.0-rc.10 (2022-01-20)\n\nchore add playground scenario\ngrid drill down filter\nchore enable strictTemplates\nsuggest trim value for search calls\nchore ng update\nsuggest add support for drill-down\nchore disable flaky test\n\nv13.0.0-rc.9 (2022-01-19)\n\nsuggest do NOT select on space in multiple\nsuggest repair test\n\nv13.0.0-rc.8 (2022-01-17)\n\nsuggest repair placeholder rendering show defaultValue in matChips placeholder if any on empty\n\nv13.0.0-rc.7 (2022-01-14)\n\nsuggest update placeholder rendering logic\nsuggest adjust mat chip styles\n\nv13.0.0-rc.6 (2022-01-13)\n\nfix update import path\n\nv13.0.0-rc.5 (2022-01-13)\n\ntest update existing tests & add a11y suite\nsuggest add aria label attribute\nsuggest prevent autofocus on render\n\nv13.0.0-rc.4 (2022-01-12)\n\nfix moment import\n\nv13.0.0-rc.3 (2022-01-12)\n\nchore update peer deps\ntest update multi-select scenarios\nsuggest render multi-select suggest as chips\nfeat playground suggest page\nfeat run playground on port 4300\n\nv13.0.0-rc.2 (2022-01-12)\n\nfix adjust imports for moment\nchore update settings colors for peacock\n\nv13.0.0-rc.1 (2022-01-11)\n\nfix angular ivy bug\nchore update dependencies\nfeat snackbar support for extra css class\nbuild update publish tasks to work with npm v7\nsnackbar add component support\nbuild npm ci should work\nng-let improve typings\n\nv13.0.0-rc.0 (2021-12-07)\n\nfix update test setup\nfix theme build\nfix apply new linting rules\nfix update eslint rules\nfix update public api exports\nfix drop public modifier\nchore bump eslint plugins\nchore bump angular material\nchore upgrade angular core & cli\n\nv12.5.6 (2021-11-05)\n\ngrid expose resize stream\n\nv12.5.5 (2021-11-03)\n\nplayground add visibility columns state\ngrid emit toggle visibility columns\n\nv12.5.4 (2021-11-02)\n\nmatformfield-required error when label is not existing\n\nv12.5.3 (2021-11-01)\n\ngrid persist search icon\n\nv12.5.2 (2021-10-29)\n\ngrid align footer icons\ngrid position search-icon on the left\ngrid outline column icon\n\nv12.5.1 (2021-10-29)\n\nmatformfield-required mark intl as optional\n\nv12.5.0 (2021-10-27)\n\nmatformfield-required test the directive\nmatformfield-required create directive that adds tooltip\n\nv12.4.0 (2021-09-21)\n\nsuggest render a searchable info message\nsuggest add custom item template for value\nchore enable bracketPairColorization\n\nv12.3.0 (2021-09-17)\n\ngrid add tooltip for columns and filters\n\nv12.2.0 (2021-09-09)\n\nchore bump angular to 12.2.5\nchore add vscode theming colors\nsuggest range loader emit issues\ndeps bump tar from 4.4.8 to 4.4.15\n\nv12.1.0 (2021-07-15)\n\nchore bump angular to 12.1.2\ngrid disable selection by row data\n\nv12.0.0 (2021-07-13)\nv12.0.0-rc.3 (2021-06-18)\n\nchore drop public member\nBREAKING CHANGE grid place toggle columns between search and filters add divider between toggle and filters\ngrid adjust spacing in no results message\nchore bind typescript version to workspace\nchore fix lint issues\nchore auto format\nchore ng lint --fix\nchore migrate to eslint\nBREAKING CHANGE grid change default design, previous is now legacy\nchore bump dependencies\nchore npm audit fix\nchore ng update\nplayground update for collapseFiltersCount\ngrid expose collapseFiltersCount\ndateformat default options\ngrid 'eager' | 'onOpen'\n\nv12.0.0-rc.2 (2021-05-31)\n\na11y add basic a11y test cases\na11y setup testing for a11y\na11y add jasmine to project\n\nv12.0.0-rc.1 (2021-05-19)\n\nfix tmp fix for scroll viewport test\n\nv12.0.0-rc.0 (2021-05-14)\n\nchore bump rx to 7.0.1\nchore bump angular material to 12\nchore bump angular to 12\n\nv11.0.1 (2021-04-28)\n\nsnackbar correctly map icons to type & playground\nfix add fix changelog script if merge issues\nchore add autoamtic changelog & version bump & tag\ngrid add type=\"button\" to filter button\nchore add missing env refferences\nchore add .npmrc for publishing to github\ndeps bump ini from 1.3.5 to 1.3.8\n\nv11.0.0 (2021-04-13)\nv11.0.0-rc.7 (2021-04-08)\n\ngrid style updates for alternate design\ngrid expose data attribute for column property\nsuggest expose data attribute for each rendered element\n\nv11.0.0-rc.6 (2021-03-31)\n\ngrid fix hasValue stream\n\nv11.0.0-rc.5 (2021-03-30)\n\npassword-indicator  implement proper a11y support\na11y add mat-icon[tabindex] to auto-accessible-label directive\ntesting  allow multiple modifiers on key up & down\ndrag-and-drop-file add keyboard usability to drag & drop\ngrid add row headers for a11y\ngrid announce header actions on selection\n\nv11.0.0-rc.4 (2021-03-12)\n\nBREAKING CHANGE grid remove cdk experimental, add rowSize\ngrid update no content template\n\nv11.0.0-rc.3 (2021-03-10)\n\ngrid collapsible filters when disabled/not visible\ngrid render multi page selection above grid for alternate design\ngrid enable support for multiple main actions\ngrid column filter redesign\ngrid collapsible filters\ngrid add directives for custom no-data and loading states\ngrid apollo footer redesign\nsnackbar add action support to show method\nchore ng update\nchore fix formatting issues due to import sort order\n\nv11.0.0-rc.2 (2020-11-25)\n\nBREAKING CHANGE grid no longer uses cache for IE by default\n\nv11.0.0-rc.1 (2020-11-12)\n\nBREAKING CHANGE Upgrade to Angular 11\nsnackbar expose action button\n\nv10.0.0 (2020-11-12)\nv10.0.0-rc.3 (2020-11-05)\n\nng update to 10.2\nrxjs version bump\nchore update peerDependencies\nchore update import types\n\nv10.0.0-rc.2 (2020-10-28)\n\ngrid differentiate between user sort and programmatic sort events\ngrid a11y: announce only user sort events\ngrid a11y: expose translateable aria-label for checkboxes\ngrid added matTooltip for checkboxes\nsuggest a11y: fixes to title, specify role attributes for list\nsuggest a11y: announce current option on open\nsuggest announce \"no results\" msg if empty\n\nv10.0.0-rc.1 (2020-10-15)\n\ngrid fix multiple row selection with shift\n\nv10.0.0-rc.0 (2020-10-01)\n\nBREAKING CHANGE Upgrade to Angular 10\nextensions define recommended extensions.json\nvirtual-scroll-range-loader prevent range emit when raw is range is empty or touched\n\nv9.0.7 (2020-06-16)\n\ngrid fix a11y issue on toggle visibility column reset button\na11y add automatic aria-label support\n\nv9.0.6 (2020-05-14)\n\nsnackbar enable configurable plain-text only messages (to help with XSS issues)\n\nv9.0.5 (2020-04-07)\n\ndrag-and-drop-file: add multiple file types support\ngrid: fix default toggle disabled column\nsuggest: add support for minimum characters search\n\nv9.0.4 (2020-03-26)\n\nsecondformat fix localization issue\n\nv9.0.3 (2020-03-25)\n\ngrid fix scroll performance when using virtual viewport\n\nv9.0.2 (2020-03-16)\n\nsnackbar show snackbars with 0 delay (that don't auto-close)\n\nv9.0.1 (2020-02-26)\n\nupgrade to ng 9.0.3\n\nv9.0.0 (2020-02-12)\n\ngrid add support for toggle-able columns\nupgrade to ng 9\n\nv0.10.14 (2020-01-22)\n\nsnackbar add support for custom template instead of message\n\nv0.10.15 (2020-01-21)\n\nsuggest fix toolip and scrolling\nsuggest implement fetch strategies\npassword-toggle implement password toggle for inputs\npassword-indicator implement a complexity progress indicator\n\nv0.10.14 (2019-12-06)\n\ngrid add type=buttons to prevent submitting enclosing forms\nsnackbar add type=buttons to prevent submitting enclosing forms\n\nv0.10.13 (2019-10-25)\n\nsuggest fix loading state on toggle disabled\n\nv0.10.12 (2019-10-24)\n\nsuggest fix loading state on toggle disabled\n\nv0.10.11 (2019-10-24)\n\ntesting define keyCode and bind correct code in generator\n\nv0.10.10 (2019-10-17)\n\ngrid define inline header buttons\ngrid add ability to toggle filters visibility\n\nv0.10.9 (2019-10-03)\n\ndate-format add resolver support for timezone\n\nv0.10.8 (2019-09-03)\n\nui-suggest add support for custom item template and size\n\nv0.10.7 (2019-08-28)\n\ngrid react to ngIf-ed columns\ndrag-and-drop-file respect multiple=false flag\n\nv0.10.6 (2019-08-01)\n\nui-suggest set static spinner strokeWidth\n\nv0.10.5 (2019-07-31)\n\n*uiContentLoading is a new structural directive that  will will render a progress spinner while the input value is true else it will render the content within the container (similar to *ngIf)\nui-progress-button fix stroke width\nui-progress-button add fade animation to the button text\n\nv0.10.4 (2019-07-29)\n\n[progress-button] implement button augmentor directive, that enables loading state configuration via a progress bar\n[spinner-button] implement button augmentor directive, that enables loading state configuraiton via a spinner\n\nv0.10.3 (2019-07-17)\n\ncorrectly export pipe modules / classes (support AOT builds)\n\nv0.10.2 (2019-07-17)\n\nBREAKING CHANGE rename UiSnackbarIntlService to UiSnackbarIntl\n\nv0.10.1 (2019-07-17)\nComponents\n\nsnackbar\n\nServices\n\nsnackbar-service\n\nDirectives\n\nnl2br\n\nv0.10.0 (2019-06-13)\n\nBREAKING CHANGE components will no longer be importent directly @uipath/angular/components, they will now be imported from their corresponding folder, eg: @uipath/angular/components/{{NAME}}\nBREAKING CHANGE directives will no longer be importent directly @uipath/angular/directives, they will now be imported from their corresponding folder, eg: @uipath/angular/directives/{{NAME}}\n\nv0.9.6 (2019-06-06)\n\nNgLet move embedded view creation in ctor, this will allow ViewChild queries to be configured with static: true strategy\n\nv0.9.5 (2019-06-05)\n\nupgrade to angular@8\nUiGrid complete visible$ columns BehaviorSubject\nUiGridFilter call destroy hook in child classes\n\nv0.9.3-hotfix1 (2019-06-05)\n\nUiGrid correctly bind to the search maxlength attribute\n\nv0.9.3 (2019-06-02)\nFixes:\n\nUiGridModule remove barrel definitions for decorated classes (fixes AOT build issues).\n\nv0.9.2 (2019-06-01)\nFeatures:\n\nEventGenerator expose the cursor utility that injects a cursor image, to help visualize UTs.\n\nv0.9.1 (2019-06-01)\nFirst Official Release\nComponents\n\ngrid\nsuggest\n\nDirectives\n\nautofocus\nclick-outside\nclipboard\ndate-format\nsecond-format\ndrag-and-drop\nng-let\nscroll-into-view\nvirtual-scroll-range-loader\nvirtual-scroll-viewport-resize\n\na11y\n\nqueued-announcer\n\nTesting\n\nEventGenerator\nKey\nFakeFileList\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular/a11y/src/queued-announcer/queued-announcer.ts\n            \n            injectable\n            QueuedAnnouncer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular/a11y/src/ui-auto-accessible-label/ui-auto-accessible-label.directive.ts\n            \n            directive\n            UiAutoAccessibleLabelDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular/a11y/src/ui-auto-accessible-label/ui-auto-accessible-label.directive.ts\n            \n            variable\n            DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/a11y/src/ui-auto-accessible-label/ui-auto-accessible-label.directive.ts\n            \n            variable\n            MAT_TOOLTIP_MISSING_WARNING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/axe-helper.ts\n            \n            variable\n            _excludedSpecFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/axe-helper.ts\n            \n            variable\n            _focusedSpecFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/axe-helper.ts\n            \n            variable\n            _specFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/axe-helper.ts\n            \n            variable\n            a11y\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/axe-helper.ts\n            \n            variable\n            axe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/axe-helper.ts\n            \n            variable\n            customSpecOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/axe-helper.ts\n            \n            variable\n            setSpecFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/body/ui-grid-column.directive.ts\n            \n            directive\n            UiGridColumnDirective\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/body/ui-grid-expanded-row.directive.ts\n            \n            directive\n            UiGridExpandedRowDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/body/ui-grid-loading.directive.ts\n            \n            directive\n            UiGridLoadingDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/body/ui-grid-no-content.directive.ts\n            \n            directive\n            UiGridNoContentDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/body/ui-grid-row-action.directive.ts\n            \n            directive\n            UiGridRowActionDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/body/ui-grid-row-config.directive.ts\n            \n            directive\n            UiGridRowConfigDirective\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts\n            \n            component\n            UiGridCustomPaginatorComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/components/ui-grid-custom-paginator/ui-grid-custom-paginator.component.ts\n            \n            injectable\n            UiMatPaginatorIntl\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/components/ui-grid-search/ui-grid-search.component.ts\n            \n            component\n            UiGridSearchComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts\n            \n            component\n            UiGridToggleColumnsComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts\n            \n            variable\n            COMPONENT_SELECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts\n            \n            directive\n            UiGridDropdownFilterDirective\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/filters/ui-grid-dropdown-filter.directive.ts\n            \n            interface\n            IDropdownOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/filters/ui-grid-search-filter.directive.ts\n            \n            directive\n            UiGridSearchFilterDirective\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/footer/ui-grid-footer.directive.ts\n            \n            directive\n            UiGridFooterDirective\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/header/ui-grid-header-button.directive.ts\n            \n            directive\n            UiGridHeaderButtonDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/header/ui-grid-header.directive.ts\n            \n            directive\n            UiGridHeaderDirective\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/managers/visibility-manager.ts\n            \n            interface\n            IVisibleDiff\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/models/dataModel.ts\n            \n            interface\n            GridOptions\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/models/dataModel.ts\n            \n            interface\n            IGridDataEntry\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/models/filterModel.ts\n            \n            interface\n            IFilterModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/models/selectionDiff.ts\n            \n            interface\n            ISelectionDiff\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/models/sortModel.ts\n            \n            interface\n            ISortModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/models/visibleModel.ts\n            \n            interface\n            IVisibleModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/ui-grid.component.ts\n            \n            component\n            UiGridComponent\n            \n                77 %\n                (49/63)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/ui-grid.component.ts\n            \n            variable\n            DEFAULT_VIRTUAL_SCROLL_ITEM_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/ui-grid.component.ts\n            \n            variable\n            FOCUSABLE_ELEMENTS_QUERY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/ui-grid.component.ts\n            \n            variable\n            UI_GRID_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-grid/src/ui-grid.intl.ts\n            \n            injectable\n            UiGridIntl\n            \n                96 %\n                (30/31)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            ANIMATION_TIMING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            INVALID_RULE_IN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            INVALID_RULE_OUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            PROGRESS_ANIMATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            PROGRESS_IN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            PROGRESS_OUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            RULE_ITEM_ANIMATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            RULE_LIST_ANIMATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            RULE_LIST_IN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n            \n            variable\n            RULE_LIST_OUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts\n            \n            component\n            UiPasswordIndicatorComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.intl.ts\n            \n            injectable\n            UiPasswordComplexityIntl\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.validator.ts\n            \n            interface\n            IRegexLike\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.validator.ts\n            \n            variable\n            complexityValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.validator.ts\n            \n            variable\n            resolveFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-indicator/src/ui-password-indicator.validator.ts\n            \n            variable\n            VALIDATION_RULE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-toggle/src/ui-password-toggle.component.ts\n            \n            component\n            UiPasswordToggleComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-password-toggle/src/ui-password-toggle.intl.ts\n            \n            injectable\n            UiPasswordToggleIntl\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n            \n            component\n            UiSnackBarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n            \n            class\n            UiMatSnackBarConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n            \n            injectable\n            UiSnackBarService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n            \n            interface\n            ISnackBarAlert\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n            \n            interface\n            ISnackBarOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n            \n            variable\n            ICON_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n            \n            variable\n            panelClass\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n            \n            variable\n            UI_MAT_SNACK_BAR_DEFAULT_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n            \n            variable\n            UI_MAT_SNACK_BAR_PAYLOAD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.intl.ts\n            \n            injectable\n            UiSnackbarIntl\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.module.ts\n            \n            variable\n            DEFAULT_DURATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.module.ts\n            \n            variable\n            DEFAULT_HORIZONTAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-snackbar/src/ui-snackbar.module.ts\n            \n            variable\n            DEFAULT_VERTICAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-suggest/src/models/suggestValue.ts\n            \n            interface\n            ISuggestValue\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-suggest/src/models/suggestValueData.ts\n            \n            interface\n            ISuggestValueData\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-suggest/src/models/suggestValues.ts\n            \n            interface\n            ISuggestValues\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-suggest/src/ui-suggest.animations.ts\n            \n            variable\n            UI_SUGGEST_ANIMATIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-suggest/src/ui-suggest.component.ts\n            \n            variable\n            DEFAULT_SUGGEST_DEBOUNCE_TIME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-suggest/src/ui-suggest.component.ts\n            \n            variable\n            DEFAULT_SUGGEST_DRILLDOWN_CHARACTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-suggest/src/ui-suggest.component.ts\n            \n            variable\n            MAT_CHIP_INPUT_SELECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-suggest/src/ui-suggest.intl.ts\n            \n            injectable\n            UiSuggestIntl\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-suggest/src/ui-suggest.mat-form-field.ts\n            \n            directive\n            UiSuggestMatFormFieldDirective\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-tree-select/src/models/tree.models.ts\n            \n            interface\n            IBaseNode\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-tree-select/src/models/tree.models.ts\n            \n            interface\n            IFlatNodeObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-tree-select/src/models/tree.models.ts\n            \n            interface\n            ITreeNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-tree-select/src/ui-tree-item/ui-tree-item.component.ts\n            \n            component\n            UiTreeItemComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-tree-select/src/ui-tree-select.component.ts\n            \n            component\n            UiTreeSelectComponent\n            \n                25 %\n                (5/20)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-tree-select/src/utils/tree.utils.ts\n            \n            class\n            TreeUtils\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/angular/components/ui-tree-select/src/utils/tree.utils.ts\n            \n            variable\n            TREE_ACTION_DEFAULTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/directives/internal/src/ui-format.ts\n            \n            directive\n            UiFormatDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular/directives/internal/src/ui-loader-button.ts\n            \n            directive\n            UiLoaderButtonDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular/directives/keyboard-shortcut/src/keyboard-shortcut.directive.ts\n            \n            directive\n            KeyboardShortcutDirective\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-autofocus/src/ui-autofocus.directive.ts\n            \n            directive\n            UiAutofocusDirective\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-click-outside/src/ui-click-outside.directive.ts\n            \n            directive\n            UiClickOutsideDirective\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-click-outside/src/ui-click-outside.directive.ts\n            \n            injectable\n            UiClickOutsideService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-clipboard/src/ui-clipboard.directive.ts\n            \n            directive\n            UiClipboardDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-content-loader/src/internal/ui-content-spinner.component.ts\n            \n            component\n            UiContentSpinnerComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-content-loader/src/ui-content-loader.directive.ts\n            \n            directive\n            UiContentLoaderDirective\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts\n            \n            directive\n            UiDateFormatDirective\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts\n            \n            interface\n            IDateFormatOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts\n            \n            variable\n            resolveTimezone\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts\n            \n            variable\n            UI_DATEFORMAT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-drag-and-drop-file/src/ui-drag-and-drop-file.directive.ts\n            \n            directive\n            UiDragAndDropFileDirective\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.intl.ts\n            \n            injectable\n            UiMatFormFieldRequiredIntl\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.ts\n            \n            directive\n            UiMatFormFieldRequiredDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.ts\n            \n            variable\n            MATFORMFIELD_LABEL_SELECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-ng-let/src/ui-ng-let.directive.ts\n            \n            directive\n            UiNgLetDirective\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-progress-button/src/internal/ui-button-progress-bar.component.ts\n            \n            component\n            UiButtonProgressBarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts\n            \n            directive\n            UiProgressButtonDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-scroll-into-view/src/ui-scroll-into-view.directive.ts\n            \n            directive\n            UiScrollIntoViewDirective\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts\n            \n            component\n            UiSecondFormatDirective\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts\n            \n            interface\n            ISecondFormatOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts\n            \n            variable\n            UI_SECONDFORMAT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-spinner-button/src/internal/ui-button-progress-spinner.component.ts\n            \n            component\n            UiButtonProgressSpinnerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-spinner-button/src/ui-spinner-button.directive.ts\n            \n            directive\n            UiSpinnerButtonDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-virtual-scroll-range-loader/src/ui-virtual-scroll-range-loader.directive.ts\n            \n            directive\n            UiVirtualScrollRangeLoaderDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-virtual-scroll-range-loader/src/ui-virtual-scroll-range-loader.directive.ts\n            \n            interface\n            VirtualScrollItem\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/angular/directives/ui-virtual-scroll-viewport-resize/src/ui-virtual-scroll-viewport-resize.directive.ts\n            \n            directive\n            UiVirtualScrollViewportResizeDirective\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/pipes/src/nl2br/nl2br.pipe.ts\n            \n            pipe\n            UiNl2BrPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/pipes/src/pipe.module.ts\n            \n            variable\n            PIPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/test.theme.ts\n            \n            variable\n            JASMINE_STYLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular/testing/src/utilities/event-generator.ts\n            \n            class\n            EventGenerator\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/angular/testing/src/utilities/events/drop-event.ts\n            \n            interface\n            IDropEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/testing/src/utilities/fake-file-list.ts\n            \n            class\n            FakeFileList\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/angular/testing/src/utilities/key.ts\n            \n            class\n            Key\n            \n                100 %\n                (65/65)\n            \n        \n        \n            \n                \n                projects/angular/testing/src/utilities/key.ts\n            \n            interface\n            IKey\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/angular/testing/src/utilities/key.ts\n            \n            interface\n            IKeyModifier\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/angular/utilities/src/browser/extract-cookies.ts\n            \n            function\n            extractCookies\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/utilities/src/browser/has-support-for-prefers-color-scheme.ts\n            \n            function\n            hasSupportForPrefersColorScheme\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/utilities/src/browser/is-browser-platform.ts\n            \n            function\n            isBrowserPlatform\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/utilities/src/browser/is-edge.ts\n            \n            function\n            isEdge\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/utilities/src/browser/is-internet-explorer.ts\n            \n            function\n            isInternetExplorer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/utilities/src/rxjs/async-of.ts\n            \n            function\n            asyncOf\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/utilities/src/rxjs/concat-join.ts\n            \n            function\n            concatJoin\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/utilities/src/rxjs/repeat-stream.ts\n            \n            function\n            repeatStream\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular/utilities/src/string/identifier.ts\n            \n            function\n            identifier\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 14.2.12\n        \n            @angular/cdk : 14.2.7\n        \n            @angular/common : 14.2.12\n        \n            @angular/compiler : 14.2.12\n        \n            @angular/core : 14.2.12\n        \n            @angular/forms : 14.2.12\n        \n            @angular/material : ^14.2.7\n        \n            @angular/platform-browser : 14.2.12\n        \n            @angular/platform-browser-dynamic : 14.2.12\n        \n            @angular/router : 14.2.12\n        \n            clipboard : 2.0.8\n        \n            lodash-es : 4.17.21\n        \n            moment : 2.29.4\n        \n            moment-timezone : 0.5.39\n        \n            object-hash : 2.2.0\n        \n            rxjs : ^7.5.7\n        \n            scroll-into-view-if-needed : 2.2.28\n        \n            tslib : ^2.3.1\n        \n            uuid : ^9.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ButtonProgressClass   (projects/.../ui-progress-button.directive.ts)\n                        \n                        \n                            SnackBarType   (projects/.../ui-snackbar.component.ts)\n                        \n                        \n                            SpinnerButtonClass   (projects/.../ui-spinner-button.directive.ts)\n                        \n                        \n                            VirtualScrollItemStatus   (projects/.../ui-virtual-scroll-range-loader.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular/directives/ui-progress-button/src/ui-progress-button.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        ButtonProgressClass\n                    \n                \n                        \n                            \n                                 Base\n                            \n                        \n                        \n                            \n                                Value : ui-button-progress\n                            \n                        \n            \n        \n\n    projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n    \n        \n            \n                \n                    \n                        \n                        SnackBarType\n                    \n                \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    projects/angular/directives/ui-spinner-button/src/ui-spinner-button.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        SpinnerButtonClass\n                    \n                \n                        \n                            \n                                 Base\n                            \n                        \n                        \n                            \n                                Value : ui-spinner-button\n                            \n                        \n                        \n                            \n                                 Loading\n                            \n                        \n                        \n                            \n                                Value : ui-spinner-button-loading\n                            \n                        \n            \n        \n\n    projects/angular/directives/ui-virtual-scroll-range-loader/src/ui-virtual-scroll-range-loader.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        VirtualScrollItemStatus\n                    \n                \n                    \n                        \n                            Used for marking the loading state of items\nwithin a lazily loaded collection\n\n                        \n                    \n                        \n                            \n                                 initial\n                            \n                        \n                        \n                            \n                                Value : initial\n                            \n                        \n                        \n                            \n                                 pending\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 loaded\n                            \n                        \n                        \n                            \n                                Value : loaded\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            asyncOf   (projects/.../async-of.ts)\n                        \n                        \n                            concatJoin   (projects/.../concat-join.ts)\n                        \n                        \n                            extractCookies   (projects/.../extract-cookies.ts)\n                        \n                        \n                            hasSupportForPrefersColorScheme   (projects/.../has-support-for-prefers-color-scheme.ts)\n                        \n                        \n                            identifier   (projects/.../identifier.ts)\n                        \n                        \n                            isBrowserPlatform   (projects/.../is-browser-platform.ts)\n                        \n                        \n                            isEdge   (projects/.../is-edge.ts)\n                        \n                        \n                            isInternetExplorer   (projects/.../is-internet-explorer.ts)\n                        \n                        \n                            repeatStream   (projects/.../repeat-stream.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular/utilities/src/rxjs/async-of.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        asyncOf\n                        \n                    \n                \n            \n            \n                \nasyncOf(obj: T, delayMs: number)\n                \n            \n\n\n\n\n            \n                \n                    Static operator to avoid breaking the stream when using catchError.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Object that will be asynchronously returned.\n\n                                    \n                                \n                                \n                                    delayMs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The delayed stream.\n\n                    \n                \n            \n        \n    \n    projects/angular/utilities/src/rxjs/concat-join.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        concatJoin\n                        \n                    \n                \n            \n            \n                \nconcatJoin(...inputs: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Captures the first emitted value from the provided stream sequence and returns an array with the first emitted value from each.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputs\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input streams.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An array with the emitted values.\n\n                    \n                \n            \n        \n    \n    projects/angular/utilities/src/browser/extract-cookies.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractCookies\n                        \n                    \n                \n            \n            \n                \nextractCookies()\n                \n            \n\n\n\n\n            \n                \n                    Reads the current application cookies.\n\n\n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        A map with all the cookie KV pairs.\n\n                    \n                \n            \n        \n    \n    projects/angular/utilities/src/browser/has-support-for-prefers-color-scheme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hasSupportForPrefersColorScheme\n                        \n                    \n                \n            \n            \n                \nhasSupportForPrefersColorScheme()\n                \n            \n\n\n\n\n            \n                \n                    Determines if the browsers can read the OS theme preference.\n\n\n                    \n                    \n                \n            \n        \n    \n    projects/angular/utilities/src/string/identifier.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        identifier\n                        \n                    \n                \n            \n            \n                \nidentifier(length: number)\n                \n            \n\n\n\n\n            \n                \n                    Generates a random string identifier.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        16\n                                    \n\n                                    \n                                        The desired identifier length.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The generated string identifier.\n\n                    \n                \n            \n        \n    \n    projects/angular/utilities/src/browser/is-browser-platform.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isBrowserPlatform\n                        \n                    \n                \n            \n            \n                \nisBrowserPlatform()\n                \n            \n\n\n\n\n            \n                \n                    Determines if the current platform is a browser.\n\n\n                \n            \n        \n    \n    projects/angular/utilities/src/browser/is-edge.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isEdge\n                        \n                    \n                \n            \n            \n                \nisEdge()\n                \n            \n\n\n\n\n            \n                \n                    Determines if the current agent is Edge.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Returns true if the current browser is Edge.\n\n                    \n                \n            \n        \n    \n    projects/angular/utilities/src/browser/is-internet-explorer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isInternetExplorer\n                        \n                    \n                \n            \n            \n                \nisInternetExplorer()\n                \n            \n\n\n\n\n            \n                \n                    Determines if the current agent is Internet Explorer.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Returns true if the current browser is Internet Explorer.\n\n                    \n                \n            \n        \n    \n    projects/angular/utilities/src/rxjs/repeat-stream.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repeatStream\n                        \n                    \n                \n            \n            \n                \nrepeatStream(stream: StreamFactory, interval: number)\n                \n            \n\n\n\n\n            \n                \n                    Repeats the requested stream indefinitely.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    stream\n                                    \n                                                StreamFactory\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The stream factory.\n\n                                    \n                                \n                                \n                                    interval\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        5000\n                                    \n\n                                    \n                                        The interval at which to repeat the stream.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\nAngular Components Library\nA great set of reusable @angular components, directives and testing utilities.\nOne of our main goals is to allow easy integration with the great collection of components already provided by the @angular/material team and to build everything with the following in mind:\n\n🤘 a11y\n🚀 performance\n💖 look and feel\n\n\n\n\n\n\nBrowser Support\n\n\n\nIE / Edge\nFirefox\nChrome\nSafari\n\n\n\n\nIE11, Edge\nlast 2 versions\nlast 2 versions\nlast 2 versions\n\n\n\nInstallation\nnpm i @uipath/angular\nDocumentation\nVisit our docs page here. Thanks go to the @compodoc team! 👌\nContributing\nCommit Messages\nWe initially started off by using a custom commit message convention, now that we've gone OS, we realize it will be much easier for everyone if we adhere to the conventional-commit standard.\nThe project comes preconfigured with commitlint and husky hooks in order to automate checks.\nAnother advantage of conventional-commits is that it will allow us to later on integrate semantic-release with ease.\nConflict Resolution\nWe all know that once you open a PR, it sometimes goes through a rigorous code review process. Sometimes, due to this delay, we end up with a PR that has conflicts.\nIn this scenarios, we're usually used to either merge or rebase.\nWe personally prefer that branches get rebased, and usually stay away from merge commits as they mostly end up polluting the history needlessly. At this point, most of you are probabily thinking: Yeah, but it's not a good practice to rebase if multiple people are working on the same branch!.\nTrue, it's not recommended to rebase when multiple people are active on the same branch, but in this scenario git offers a very elegant solution: fixup commits. By using fixup commits, the branch can later go through an interactive rebase once the review process is done and the PR is approved.\nFor example: after you make your changes and stage them you can run a git commit --fixup HEAD~ to add the changes in the last but one commit. Before the merge, you can then simply git rebase -i  --autosquash and every change will be squashed in the correct commit.\nEnvironment setup\nBefore contributing you will need to add the environment variable GH_NPM_REGISTRY_TOKEN with a dummy (empty) value. We are distributing the packages both publicly and internally and unfortunately npmrc uses an ini file format which doesn't allows us to provide a fallback automatically.\nWhy?\nQ: Why all the hassle, does it really matter?\nA: We've seen too many branches where merge commits get introduced without a good reason, too many branches that have almost the same number merge commits as commits so we want to enforce a git usage guidline that promotes responsibility. 🐱‍👤\nQ: But I want to integrate a branch, not yet merged and implement a new feature.\nA: In this scenario, you have the master branch, and the feature branch that you depend upon. What we do in this case, is create a local branch where we merge the required feature branch into master and start our branch from there. Once the feature branch we depend upon, gets merged into master, we rebase over master. Easy peasy! 🤓\nQ: But what if I just want to add a feature?\nA: We think that in software, it's not just about the feature, it's also about the fact that others will later on need to support that feature or modify it, having a good historical track helps everyone better understand the evolution of the codebase.\nComing Up (most likely v1)\n\nGetting Started / Contribution Guidlines\nEnhanced Component Demo's\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 UiPath Inc.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        KeyboardShortcutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiAutoAccessibleLabelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiAutofocusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiClickOutsideModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiClipboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiContentLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiDateFormatModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiDragAndDropModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiGridCustomPaginatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiGridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiGridSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiGridToggleColumnsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiMatFormFieldRequiredModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiNgLetModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiPasswordIndicatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiPasswordToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiProgressButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiScrollIntoViewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiSecondFormatModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiSnackBarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiSpinnerButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiSuggestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiVirtualScrollRangeLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiVirtualScrollViewportResizeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_KeyboardShortcutModule\n\n\n\ncluster_KeyboardShortcutModule_declarations\n\n\n\ncluster_KeyboardShortcutModule_exports\n\n\n\ncluster_UiAutoAccessibleLabelModule\n\n\n\ncluster_UiAutoAccessibleLabelModule_declarations\n\n\n\ncluster_UiAutoAccessibleLabelModule_exports\n\n\n\ncluster_UiAutofocusModule\n\n\n\ncluster_UiAutofocusModule_declarations\n\n\n\ncluster_UiAutofocusModule_exports\n\n\n\ncluster_UiClickOutsideModule\n\n\n\ncluster_UiClickOutsideModule_declarations\n\n\n\ncluster_UiClickOutsideModule_exports\n\n\n\ncluster_UiClipboardModule\n\n\n\ncluster_UiClipboardModule_declarations\n\n\n\ncluster_UiClipboardModule_exports\n\n\n\ncluster_UiContentLoaderModule\n\n\n\ncluster_UiContentLoaderModule_declarations\n\n\n\ncluster_UiContentLoaderModule_exports\n\n\n\ncluster_UiDateFormatModule\n\n\n\ncluster_UiDateFormatModule_declarations\n\n\n\ncluster_UiDateFormatModule_exports\n\n\n\ncluster_UiDragAndDropModule\n\n\n\ncluster_UiDragAndDropModule_declarations\n\n\n\ncluster_UiDragAndDropModule_exports\n\n\n\ncluster_UiGridCustomPaginatorModule\n\n\n\ncluster_UiGridCustomPaginatorModule_declarations\n\n\n\ncluster_UiGridCustomPaginatorModule_exports\n\n\n\ncluster_UiGridModule\n\n\n\ncluster_UiGridModule_declarations\n\n\n\ncluster_UiGridModule_imports\n\n\n\ncluster_UiGridModule_exports\n\n\n\ncluster_UiGridSearchModule\n\n\n\ncluster_UiGridSearchModule_declarations\n\n\n\ncluster_UiGridSearchModule_exports\n\n\n\ncluster_UiGridToggleColumnsModule\n\n\n\ncluster_UiGridToggleColumnsModule_declarations\n\n\n\ncluster_UiGridToggleColumnsModule_exports\n\n\n\ncluster_UiMatFormFieldRequiredModule\n\n\n\ncluster_UiMatFormFieldRequiredModule_declarations\n\n\n\ncluster_UiMatFormFieldRequiredModule_exports\n\n\n\ncluster_UiNgLetModule\n\n\n\ncluster_UiNgLetModule_declarations\n\n\n\ncluster_UiNgLetModule_exports\n\n\n\ncluster_UiPasswordIndicatorModule\n\n\n\ncluster_UiPasswordIndicatorModule_declarations\n\n\n\ncluster_UiPasswordIndicatorModule_exports\n\n\n\ncluster_UiPasswordToggleModule\n\n\n\ncluster_UiPasswordToggleModule_declarations\n\n\n\ncluster_UiPasswordToggleModule_exports\n\n\n\ncluster_UiPipeModule\n\n\n\ncluster_UiPipeModule_declarations\n\n\n\ncluster_UiPipeModule_exports\n\n\n\ncluster_UiProgressButtonModule\n\n\n\ncluster_UiProgressButtonModule_declarations\n\n\n\ncluster_UiProgressButtonModule_exports\n\n\n\ncluster_UiScrollIntoViewModule\n\n\n\ncluster_UiScrollIntoViewModule_declarations\n\n\n\ncluster_UiScrollIntoViewModule_exports\n\n\n\ncluster_UiSecondFormatModule\n\n\n\ncluster_UiSecondFormatModule_declarations\n\n\n\ncluster_UiSecondFormatModule_exports\n\n\n\ncluster_UiSnackBarModule\n\n\n\ncluster_UiSnackBarModule_declarations\n\n\n\ncluster_UiSpinnerButtonModule\n\n\n\ncluster_UiSpinnerButtonModule_declarations\n\n\n\ncluster_UiSpinnerButtonModule_exports\n\n\n\ncluster_UiSuggestModule\n\n\n\ncluster_UiSuggestModule_imports\n\n\n\ncluster_UiVirtualScrollRangeLoaderModule\n\n\n\ncluster_UiVirtualScrollRangeLoaderModule_declarations\n\n\n\ncluster_UiVirtualScrollRangeLoaderModule_exports\n\n\n\ncluster_UiVirtualScrollViewportResizeModule\n\n\n\ncluster_UiVirtualScrollViewportResizeModule_declarations\n\n\n\ncluster_UiVirtualScrollViewportResizeModule_exports\n\n\n\n\nKeyboardShortcutDirective\n\nKeyboardShortcutDirective\n\n\n\nKeyboardShortcutModule\n\nKeyboardShortcutModule\n\nKeyboardShortcutModule -->\n\nKeyboardShortcutDirective->KeyboardShortcutModule\n\n\n\n\n\nKeyboardShortcutDirective \n\nKeyboardShortcutDirective \n\nKeyboardShortcutDirective  -->\n\nKeyboardShortcutModule->KeyboardShortcutDirective \n\n\n\n\n\nUiSnackBarModule\n\nUiSnackBarModule\n\nUiSnackBarModule -->\n\nKeyboardShortcutModule->UiSnackBarModule\n\n\n\n\n\nUiAutoAccessibleLabelDirective\n\nUiAutoAccessibleLabelDirective\n\n\n\nUiAutoAccessibleLabelModule\n\nUiAutoAccessibleLabelModule\n\nUiAutoAccessibleLabelModule -->\n\nUiAutoAccessibleLabelDirective->UiAutoAccessibleLabelModule\n\n\n\n\n\nUiAutoAccessibleLabelDirective \n\nUiAutoAccessibleLabelDirective \n\nUiAutoAccessibleLabelDirective  -->\n\nUiAutoAccessibleLabelModule->UiAutoAccessibleLabelDirective \n\n\n\n\n\nUiGridModule\n\nUiGridModule\n\nUiGridModule -->\n\nUiAutoAccessibleLabelModule->UiGridModule\n\n\n\n\n\nUiGridToggleColumnsModule\n\nUiGridToggleColumnsModule\n\nUiGridToggleColumnsModule -->\n\nUiAutoAccessibleLabelModule->UiGridToggleColumnsModule\n\n\n\n\n\nUiSuggestModule\n\nUiSuggestModule\n\nUiSuggestModule -->\n\nUiAutoAccessibleLabelModule->UiSuggestModule\n\n\n\n\n\nUiPasswordToggleModule\n\nUiPasswordToggleModule\n\nUiPasswordToggleModule -->\n\nUiAutoAccessibleLabelModule->UiPasswordToggleModule\n\n\n\n\n\nUiAutofocusDirective\n\nUiAutofocusDirective\n\n\n\nUiAutofocusModule\n\nUiAutofocusModule\n\nUiAutofocusModule -->\n\nUiAutofocusDirective->UiAutofocusModule\n\n\n\n\n\nUiAutofocusDirective \n\nUiAutofocusDirective \n\nUiAutofocusDirective  -->\n\nUiAutofocusModule->UiAutofocusDirective \n\n\n\nUiSuggestModule -->\n\nUiAutofocusModule->UiSuggestModule\n\n\n\n\n\nUiClickOutsideDirective\n\nUiClickOutsideDirective\n\n\n\nUiClickOutsideModule\n\nUiClickOutsideModule\n\nUiClickOutsideModule -->\n\nUiClickOutsideDirective->UiClickOutsideModule\n\n\n\n\n\nUiClickOutsideDirective \n\nUiClickOutsideDirective \n\nUiClickOutsideDirective  -->\n\nUiClickOutsideModule->UiClickOutsideDirective \n\n\n\nUiSuggestModule -->\n\nUiClickOutsideModule->UiSuggestModule\n\n\n\n\n\nUiClipboardDirective\n\nUiClipboardDirective\n\n\n\nUiClipboardModule\n\nUiClipboardModule\n\nUiClipboardModule -->\n\nUiClipboardDirective->UiClipboardModule\n\n\n\n\n\nUiClipboardDirective \n\nUiClipboardDirective \n\nUiClipboardDirective  -->\n\nUiClipboardModule->UiClipboardDirective \n\n\n\n\n\nUiContentLoaderDirective\n\nUiContentLoaderDirective\n\n\n\nUiContentLoaderModule\n\nUiContentLoaderModule\n\nUiContentLoaderModule -->\n\nUiContentLoaderDirective->UiContentLoaderModule\n\n\n\n\n\nUiContentSpinnerComponent\n\nUiContentSpinnerComponent\n\nUiContentLoaderModule -->\n\nUiContentSpinnerComponent->UiContentLoaderModule\n\n\n\n\n\nUiContentLoaderDirective \n\nUiContentLoaderDirective \n\nUiContentLoaderDirective  -->\n\nUiContentLoaderModule->UiContentLoaderDirective \n\n\n\n\n\nUiDateFormatDirective\n\nUiDateFormatDirective\n\n\n\nUiDateFormatModule\n\nUiDateFormatModule\n\nUiDateFormatModule -->\n\nUiDateFormatDirective->UiDateFormatModule\n\n\n\n\n\nUiDateFormatDirective \n\nUiDateFormatDirective \n\nUiDateFormatDirective  -->\n\nUiDateFormatModule->UiDateFormatDirective \n\n\n\n\n\nUiDragAndDropFileDirective\n\nUiDragAndDropFileDirective\n\n\n\nUiDragAndDropModule\n\nUiDragAndDropModule\n\nUiDragAndDropModule -->\n\nUiDragAndDropFileDirective->UiDragAndDropModule\n\n\n\n\n\nUiDragAndDropFileDirective \n\nUiDragAndDropFileDirective \n\nUiDragAndDropFileDirective  -->\n\nUiDragAndDropModule->UiDragAndDropFileDirective \n\n\n\n\n\nUiGridCustomPaginatorComponent\n\nUiGridCustomPaginatorComponent\n\n\n\nUiGridCustomPaginatorModule\n\nUiGridCustomPaginatorModule\n\nUiGridCustomPaginatorModule -->\n\nUiGridCustomPaginatorComponent->UiGridCustomPaginatorModule\n\n\n\n\n\nUiGridCustomPaginatorComponent \n\nUiGridCustomPaginatorComponent \n\nUiGridCustomPaginatorComponent  -->\n\nUiGridCustomPaginatorModule->UiGridCustomPaginatorComponent \n\n\n\nUiGridModule -->\n\nUiGridCustomPaginatorModule->UiGridModule\n\n\n\n\n\nUiGridColumnDirective\n\nUiGridColumnDirective\n\nUiGridModule -->\n\nUiGridColumnDirective->UiGridModule\n\n\n\n\n\nUiGridComponent\n\nUiGridComponent\n\nUiGridModule -->\n\nUiGridComponent->UiGridModule\n\n\n\n\n\nUiGridDropdownFilterDirective\n\nUiGridDropdownFilterDirective\n\nUiGridModule -->\n\nUiGridDropdownFilterDirective->UiGridModule\n\n\n\n\n\nUiGridExpandedRowDirective\n\nUiGridExpandedRowDirective\n\nUiGridModule -->\n\nUiGridExpandedRowDirective->UiGridModule\n\n\n\n\n\nUiGridFooterDirective\n\nUiGridFooterDirective\n\nUiGridModule -->\n\nUiGridFooterDirective->UiGridModule\n\n\n\n\n\nUiGridHeaderButtonDirective\n\nUiGridHeaderButtonDirective\n\nUiGridModule -->\n\nUiGridHeaderButtonDirective->UiGridModule\n\n\n\n\n\nUiGridHeaderDirective\n\nUiGridHeaderDirective\n\nUiGridModule -->\n\nUiGridHeaderDirective->UiGridModule\n\n\n\n\n\nUiGridLoadingDirective\n\nUiGridLoadingDirective\n\nUiGridModule -->\n\nUiGridLoadingDirective->UiGridModule\n\n\n\n\n\nUiGridNoContentDirective\n\nUiGridNoContentDirective\n\nUiGridModule -->\n\nUiGridNoContentDirective->UiGridModule\n\n\n\n\n\nUiGridRowActionDirective\n\nUiGridRowActionDirective\n\nUiGridModule -->\n\nUiGridRowActionDirective->UiGridModule\n\n\n\n\n\nUiGridRowConfigDirective\n\nUiGridRowConfigDirective\n\nUiGridModule -->\n\nUiGridRowConfigDirective->UiGridModule\n\n\n\n\n\nUiGridSearchFilterDirective\n\nUiGridSearchFilterDirective\n\nUiGridModule -->\n\nUiGridSearchFilterDirective->UiGridModule\n\n\n\n\n\nUiGridColumnDirective \n\nUiGridColumnDirective \n\nUiGridColumnDirective  -->\n\nUiGridModule->UiGridColumnDirective \n\n\n\n\n\nUiGridComponent \n\nUiGridComponent \n\nUiGridComponent  -->\n\nUiGridModule->UiGridComponent \n\n\n\n\n\nUiGridDropdownFilterDirective \n\nUiGridDropdownFilterDirective \n\nUiGridDropdownFilterDirective  -->\n\nUiGridModule->UiGridDropdownFilterDirective \n\n\n\n\n\nUiGridExpandedRowDirective \n\nUiGridExpandedRowDirective \n\nUiGridExpandedRowDirective  -->\n\nUiGridModule->UiGridExpandedRowDirective \n\n\n\n\n\nUiGridFooterDirective \n\nUiGridFooterDirective \n\nUiGridFooterDirective  -->\n\nUiGridModule->UiGridFooterDirective \n\n\n\n\n\nUiGridHeaderButtonDirective \n\nUiGridHeaderButtonDirective \n\nUiGridHeaderButtonDirective  -->\n\nUiGridModule->UiGridHeaderButtonDirective \n\n\n\n\n\nUiGridHeaderDirective \n\nUiGridHeaderDirective \n\nUiGridHeaderDirective  -->\n\nUiGridModule->UiGridHeaderDirective \n\n\n\n\n\nUiGridLoadingDirective \n\nUiGridLoadingDirective \n\nUiGridLoadingDirective  -->\n\nUiGridModule->UiGridLoadingDirective \n\n\n\n\n\nUiGridNoContentDirective \n\nUiGridNoContentDirective \n\nUiGridNoContentDirective  -->\n\nUiGridModule->UiGridNoContentDirective \n\n\n\n\n\nUiGridRowActionDirective \n\nUiGridRowActionDirective \n\nUiGridRowActionDirective  -->\n\nUiGridModule->UiGridRowActionDirective \n\n\n\n\n\nUiGridRowConfigDirective \n\nUiGridRowConfigDirective \n\nUiGridRowConfigDirective  -->\n\nUiGridModule->UiGridRowConfigDirective \n\n\n\n\n\nUiGridSearchFilterDirective \n\nUiGridSearchFilterDirective \n\nUiGridSearchFilterDirective  -->\n\nUiGridModule->UiGridSearchFilterDirective \n\n\n\n\n\nUiGridSearchModule\n\nUiGridSearchModule\n\nUiGridModule -->\n\nUiGridSearchModule->UiGridModule\n\n\n\n\n\nUiGridSearchComponent \n\nUiGridSearchComponent \n\nUiGridSearchComponent  -->\n\nUiGridSearchModule->UiGridSearchComponent \n\n\n\nUiGridModule -->\n\nUiGridToggleColumnsModule->UiGridModule\n\n\n\n\n\nUiGridToggleColumnsComponent \n\nUiGridToggleColumnsComponent \n\nUiGridToggleColumnsComponent  -->\n\nUiGridToggleColumnsModule->UiGridToggleColumnsComponent \n\n\n\n\n\nUiNgLetModule\n\nUiNgLetModule\n\nUiGridModule -->\n\nUiNgLetModule->UiGridModule\n\n\n\nUiSuggestModule -->\n\nUiNgLetModule->UiSuggestModule\n\n\n\n\n\nUiNgLetDirective \n\nUiNgLetDirective \n\nUiNgLetDirective  -->\n\nUiNgLetModule->UiNgLetDirective \n\n\n\n\n\nUiPasswordIndicatorModule\n\nUiPasswordIndicatorModule\n\nUiPasswordIndicatorModule -->\n\nUiNgLetModule->UiPasswordIndicatorModule\n\n\n\nUiPasswordToggleModule -->\n\nUiNgLetModule->UiPasswordToggleModule\n\n\n\nUiGridModule -->\n\nUiSuggestModule->UiGridModule\n\n\n\n\n\nUiVirtualScrollViewportResizeModule\n\nUiVirtualScrollViewportResizeModule\n\nUiGridModule -->\n\nUiVirtualScrollViewportResizeModule->UiGridModule\n\n\n\n\n\nUiVirtualScrollViewportResizeDirective \n\nUiVirtualScrollViewportResizeDirective \n\nUiVirtualScrollViewportResizeDirective  -->\n\nUiVirtualScrollViewportResizeModule->UiVirtualScrollViewportResizeDirective \n\n\n\n\n\nUiGridSearchComponent\n\nUiGridSearchComponent\n\nUiGridSearchModule -->\n\nUiGridSearchComponent->UiGridSearchModule\n\n\n\n\n\nUiGridToggleColumnsComponent\n\nUiGridToggleColumnsComponent\n\nUiGridToggleColumnsModule -->\n\nUiGridToggleColumnsComponent->UiGridToggleColumnsModule\n\n\n\n\n\nUiMatFormFieldRequiredDirective\n\nUiMatFormFieldRequiredDirective\n\n\n\nUiMatFormFieldRequiredModule\n\nUiMatFormFieldRequiredModule\n\nUiMatFormFieldRequiredModule -->\n\nUiMatFormFieldRequiredDirective->UiMatFormFieldRequiredModule\n\n\n\n\n\nUiMatFormFieldRequiredDirective \n\nUiMatFormFieldRequiredDirective \n\nUiMatFormFieldRequiredDirective  -->\n\nUiMatFormFieldRequiredModule->UiMatFormFieldRequiredDirective \n\n\n\n\n\nUiNgLetDirective\n\nUiNgLetDirective\n\nUiNgLetModule -->\n\nUiNgLetDirective->UiNgLetModule\n\n\n\n\n\nUiPasswordIndicatorComponent\n\nUiPasswordIndicatorComponent\n\nUiPasswordIndicatorModule -->\n\nUiPasswordIndicatorComponent->UiPasswordIndicatorModule\n\n\n\n\n\nUiPasswordIndicatorComponent \n\nUiPasswordIndicatorComponent \n\nUiPasswordIndicatorComponent  -->\n\nUiPasswordIndicatorModule->UiPasswordIndicatorComponent \n\n\n\n\n\nUiPasswordToggleComponent\n\nUiPasswordToggleComponent\n\nUiPasswordToggleModule -->\n\nUiPasswordToggleComponent->UiPasswordToggleModule\n\n\n\n\n\nUiPasswordToggleComponent \n\nUiPasswordToggleComponent \n\nUiPasswordToggleComponent  -->\n\nUiPasswordToggleModule->UiPasswordToggleComponent \n\n\n\n\n\nUiNl2BrPipe\n\nUiNl2BrPipe\n\n\n\nUiPipeModule\n\nUiPipeModule\n\nUiPipeModule -->\n\nUiNl2BrPipe->UiPipeModule\n\n\n\n\n\nUiNl2BrPipe \n\nUiNl2BrPipe \n\nUiNl2BrPipe  -->\n\nUiPipeModule->UiNl2BrPipe \n\n\n\n\n\nUiButtonProgressBarComponent\n\nUiButtonProgressBarComponent\n\n\n\nUiProgressButtonModule\n\nUiProgressButtonModule\n\nUiProgressButtonModule -->\n\nUiButtonProgressBarComponent->UiProgressButtonModule\n\n\n\n\n\nUiProgressButtonDirective\n\nUiProgressButtonDirective\n\nUiProgressButtonModule -->\n\nUiProgressButtonDirective->UiProgressButtonModule\n\n\n\n\n\nUiProgressButtonDirective \n\nUiProgressButtonDirective \n\nUiProgressButtonDirective  -->\n\nUiProgressButtonModule->UiProgressButtonDirective \n\n\n\n\n\nUiScrollIntoViewDirective\n\nUiScrollIntoViewDirective\n\n\n\nUiScrollIntoViewModule\n\nUiScrollIntoViewModule\n\nUiScrollIntoViewModule -->\n\nUiScrollIntoViewDirective->UiScrollIntoViewModule\n\n\n\n\n\nUiScrollIntoViewDirective \n\nUiScrollIntoViewDirective \n\nUiScrollIntoViewDirective  -->\n\nUiScrollIntoViewModule->UiScrollIntoViewDirective \n\n\n\n\n\nUiSecondFormatDirective\n\nUiSecondFormatDirective\n\n\n\nUiSecondFormatModule\n\nUiSecondFormatModule\n\nUiSecondFormatModule -->\n\nUiSecondFormatDirective->UiSecondFormatModule\n\n\n\n\n\nUiSecondFormatDirective \n\nUiSecondFormatDirective \n\nUiSecondFormatDirective  -->\n\nUiSecondFormatModule->UiSecondFormatDirective \n\n\n\n\n\nUiSnackBarComponent\n\nUiSnackBarComponent\n\nUiSnackBarModule -->\n\nUiSnackBarComponent->UiSnackBarModule\n\n\n\n\n\nUiButtonProgressSpinnerComponent\n\nUiButtonProgressSpinnerComponent\n\n\n\nUiSpinnerButtonModule\n\nUiSpinnerButtonModule\n\nUiSpinnerButtonModule -->\n\nUiButtonProgressSpinnerComponent->UiSpinnerButtonModule\n\n\n\n\n\nUiSpinnerButtonDirective\n\nUiSpinnerButtonDirective\n\nUiSpinnerButtonModule -->\n\nUiSpinnerButtonDirective->UiSpinnerButtonModule\n\n\n\n\n\nUiSpinnerButtonDirective \n\nUiSpinnerButtonDirective \n\nUiSpinnerButtonDirective  -->\n\nUiSpinnerButtonModule->UiSpinnerButtonDirective \n\n\n\n\n\nUiVirtualScrollRangeLoaderModule\n\nUiVirtualScrollRangeLoaderModule\n\nUiSuggestModule -->\n\nUiVirtualScrollRangeLoaderModule->UiSuggestModule\n\n\n\n\n\nUiVirtualScrollRangeLoaderDirective \n\nUiVirtualScrollRangeLoaderDirective \n\nUiVirtualScrollRangeLoaderDirective  -->\n\nUiVirtualScrollRangeLoaderModule->UiVirtualScrollRangeLoaderDirective \n\n\n\n\n\nUiVirtualScrollRangeLoaderDirective\n\nUiVirtualScrollRangeLoaderDirective\n\nUiVirtualScrollRangeLoaderModule -->\n\nUiVirtualScrollRangeLoaderDirective->UiVirtualScrollRangeLoaderModule\n\n\n\n\n\nUiVirtualScrollViewportResizeDirective\n\nUiVirtualScrollViewportResizeDirective\n\nUiVirtualScrollViewportResizeModule -->\n\nUiVirtualScrollViewportResizeDirective->UiVirtualScrollViewportResizeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        25 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    29 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    23 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Boundary   (projects/.../ui-scroll-into-view.directive.ts)\n                        \n                        \n                            DisplayType   (projects/.../ui-dateformat.directive.ts)\n                        \n                        \n                            IPasswordRuleSet   (projects/.../ui-password-indicator.validator.ts)\n                        \n                        \n                            IPasswordValidationFn   (projects/.../ui-password-indicator.validator.ts)\n                        \n                        \n                            IRuleValidationState   (projects/.../ui-password-indicator.validator.ts)\n                        \n                        \n                            KeyOrKeyName   (projects/.../event-generator.ts)\n                        \n                        \n                            ObservedValueOf   (projects/.../observed-value-of.ts)\n                        \n                        \n                            PageChangeEvent   (projects/.../page-change-event.ts)\n                        \n                        \n                            RulesAndStates   (projects/.../ui-password-indicator.component.ts)\n                        \n                        \n                            SnackbarAction   (projects/.../ui-snackbar.component.ts)\n                        \n                        \n                            StreamFactory   (projects/.../repeat-stream.ts)\n                        \n                        \n                            StringOrNumberKeyOf   (projects/.../data-manager.ts)\n                        \n                        \n                            SuggestDirection   (projects/.../suggestDirection.ts)\n                        \n                        \n                            SuggestDisplayPriority   (projects/.../suggestDisplayPriority.ts)\n                        \n                        \n                            TimezoneResolver   (projects/.../ui-dateformat.directive.ts)\n                        \n                        \n                            TreeActionOptions   (projects/.../tree.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular/directives/ui-scroll-into-view/src/ui-scroll-into-view.directive.ts\n    \n    \n        \n            \n                \n                    \n                    Boundary\n                \n            \n            \n                \n                        \"parent\" | Element\n\n                \n            \n        \n    \n    projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts\n    \n    \n        \n            \n                \n                    \n                    DisplayType\n                \n            \n            \n                \n                    The date format display type options.\n\n                \n            \n            \n                \n                        \"absolute\" | \"relative\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TimezoneResolver\n                \n            \n            \n                \n                    Timezone resolver type.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/angular/components/ui-password-indicator/src/ui-password-indicator.validator.ts\n    \n    \n        \n            \n                \n                    \n                    IPasswordRuleSet\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IPasswordValidationFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IRuleValidationState\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    projects/angular/testing/src/utilities/event-generator.ts\n    \n    \n        \n            \n                \n                    \n                    KeyOrKeyName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular/utilities/src/rxjs/internal/observed-value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ObservedValueOf\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular/components/ui-grid/src/events/page-change-event.ts\n    \n    \n        \n            \n                \n                    \n                    PageChangeEvent\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular/components/ui-password-indicator/src/ui-password-indicator.component.ts\n    \n    \n        \n            \n                \n                    \n                    RulesAndStates\n                \n            \n            \n                \n                            [string[], IRuleValidationState]\n\n                \n            \n        \n    \n    projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n    \n    \n        \n            \n                \n                    \n                    SnackbarAction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/angular/utilities/src/rxjs/repeat-stream.ts\n    \n    \n        \n            \n                \n                    \n                    StreamFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/angular/components/ui-grid/src/managers/data-manager.ts\n    \n    \n        \n            \n                \n                    \n                    StringOrNumberKeyOf\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular/components/ui-suggest/src/models/suggestDirection.ts\n    \n    \n        \n            \n                \n                    \n                    SuggestDirection\n                \n            \n            \n                \n                    Dropdown direction type definition.\n\n                \n            \n            \n                \n                        \"up\" | \"down\"\n\n                \n            \n        \n    \n    projects/angular/components/ui-suggest/src/models/suggestDisplayPriority.ts\n    \n    \n        \n            \n                \n                    \n                    SuggestDisplayPriority\n                \n            \n            \n                \n                    Dropdown display priority type definition.\n\n                \n            \n            \n                \n                        \"default\" | \"selected\"\n\n                \n            \n        \n    \n    projects/angular/components/ui-tree-select/src/utils/tree.utils.ts\n    \n    \n        \n            \n                \n                    \n                    TreeActionOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _excludedSpecFn   (projects/.../axe-helper.ts)\n                        \n                        \n                            _focusedSpecFn   (projects/.../axe-helper.ts)\n                        \n                        \n                            _specFn   (projects/.../axe-helper.ts)\n                        \n                        \n                            a11y   (projects/.../axe-helper.ts)\n                        \n                        \n                            ANIMATION_TIMING   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            axe   (projects/.../axe-helper.ts)\n                        \n                        \n                            complexityValidator   (projects/.../ui-password-indicator.validator.ts)\n                        \n                        \n                            COMPONENT_SELECTOR   (projects/.../ui-grid-toggle-columns.component.ts)\n                        \n                        \n                            customSpecOptions   (projects/.../axe-helper.ts)\n                        \n                        \n                            DEFAULT_DURATION   (projects/.../ui-snackbar.module.ts)\n                        \n                        \n                            DEFAULT_HORIZONTAL   (projects/.../ui-snackbar.module.ts)\n                        \n                        \n                            DEFAULT_SUGGEST_DEBOUNCE_TIME   (projects/.../ui-suggest.component.ts)\n                        \n                        \n                            DEFAULT_SUGGEST_DRILLDOWN_CHARACTER   (projects/.../ui-suggest.component.ts)\n                        \n                        \n                            DEFAULT_VERTICAL   (projects/.../ui-snackbar.module.ts)\n                        \n                        \n                            DEFAULT_VIRTUAL_SCROLL_ITEM_SIZE   (projects/.../ui-grid.component.ts)\n                        \n                        \n                            DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE   (projects/.../ui-auto-accessible-label.directive.ts)\n                        \n                        \n                            FOCUSABLE_ELEMENTS_QUERY   (projects/.../ui-grid.component.ts)\n                        \n                        \n                            ICON_MAP   (projects/.../ui-snackbar.component.ts)\n                        \n                        \n                            INVALID_RULE_IN   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            INVALID_RULE_OUT   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            JASMINE_STYLES   (projects/.../test.theme.ts)\n                        \n                        \n                            MAT_CHIP_INPUT_SELECTOR   (projects/.../ui-suggest.component.ts)\n                        \n                        \n                            MAT_TOOLTIP_MISSING_WARNING   (projects/.../ui-auto-accessible-label.directive.ts)\n                        \n                        \n                            MATFORMFIELD_LABEL_SELECTOR   (projects/.../ui-matformfield-required.directive.ts)\n                        \n                        \n                            panelClass   (projects/.../ui-snackbar.component.ts)\n                        \n                        \n                            PIPES   (projects/.../pipe.module.ts)\n                        \n                        \n                            PROGRESS_ANIMATION   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            PROGRESS_IN   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            PROGRESS_OUT   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            resolveFn   (projects/.../ui-password-indicator.validator.ts)\n                        \n                        \n                            resolveTimezone   (projects/.../ui-dateformat.directive.ts)\n                        \n                        \n                            RULE_ITEM_ANIMATION   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            RULE_LIST_ANIMATION   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            RULE_LIST_IN   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            RULE_LIST_OUT   (projects/.../ui-password-indicator.animations.ts)\n                        \n                        \n                            setSpecFn   (projects/.../axe-helper.ts)\n                        \n                        \n                            TREE_ACTION_DEFAULTS   (projects/.../tree.utils.ts)\n                        \n                        \n                            UI_DATEFORMAT_OPTIONS   (projects/.../ui-dateformat.directive.ts)\n                        \n                        \n                            UI_GRID_OPTIONS   (projects/.../ui-grid.component.ts)\n                        \n                        \n                            UI_MAT_SNACK_BAR_DEFAULT_OPTIONS   (projects/.../ui-snackbar.component.ts)\n                        \n                        \n                            UI_MAT_SNACK_BAR_PAYLOAD   (projects/.../ui-snackbar.component.ts)\n                        \n                        \n                            UI_SECONDFORMAT_OPTIONS   (projects/.../ui-secondformat.directive.ts)\n                        \n                        \n                            UI_SUGGEST_ANIMATIONS   (projects/.../ui-suggest.animations.ts)\n                        \n                        \n                            VALIDATION_RULE_NAME   (projects/.../ui-password-indicator.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular/axe-helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _excludedSpecFn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => { }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _focusedSpecFn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => { }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _specFn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => { }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        a11y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    fit: function (...args: Parameters) {\n        _focusedSpecFn?.call(null, ...args);\n    },\n    xit: function (...args: Parameters) {\n        _excludedSpecFn?.call(null, ...args);\n    },\n    it: function (...args: Parameters) {\n        _specFn?.call(null, ...args);\n    },\n    suite: function (cb: (customSpecOptions: RunOptions) => void) {\n        cb(customSpecOptions);\n    },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        axe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : jasmineAxe.configureAxe({\n    globalOptions: {\n        standards: {\n            ariaRoles: {\n                combobox: {\n                    type: 'widget',\n                    requiredOwned: [],\n                    requiredAttrs: ['aria-expanded'],\n                    allowedAttrs: [\n                        'aria-controls',\n                        'aria-autocomplete',\n                        'aria-readonly',\n                        'aria-required',\n                        'aria-activedescendant',\n                        'aria-orientation',\n                    ],\n                },\n            },\n        },\n    },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customSpecOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RunOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    rules: {\n        'color-contrast': { enabled: false },\n    },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSpecFn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (_it: typeof it, _fit: typeof fit, _xit: typeof xit) => {\n    _specFn = _it.bind(null);\n    _focusedSpecFn = _fit.bind(null);\n    _excludedSpecFn = _xit.bind(null);\n}\n                    \n                \n\n\n        \n    \n\n    projects/angular/components/ui-password-indicator/src/ui-password-indicator.animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ANIMATION_TIMING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '300ms cubic-bezier(0.55, 0, 0.55, 0.2)'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INVALID_RULE_IN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    width: '*',\n    opacity: 1,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INVALID_RULE_OUT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    width: 0,\n    opacity: 0,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROGRESS_ANIMATION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger(\n    'progressAnimation',\n    inAndOut(PROGRESS_IN, PROGRESS_OUT, ANIMATION_TIMING),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROGRESS_IN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    opacity: 1,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROGRESS_OUT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    opacity: 0,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RULE_ITEM_ANIMATION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger(\n    'ruleAnimation',\n    inAndOut(INVALID_RULE_IN, INVALID_RULE_OUT, ANIMATION_TIMING),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RULE_LIST_ANIMATION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger(\n    'ruleListAnimation',\n    inAndOut(RULE_LIST_IN, RULE_LIST_OUT, ANIMATION_TIMING),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RULE_LIST_IN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    opacity: 1,\n    transform: 'translateY(0)',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RULE_LIST_OUT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    opacity: 0,\n    transform: 'translateY(-25%)',\n}\n                    \n                \n\n\n        \n    \n\n    projects/angular/components/ui-password-indicator/src/ui-password-indicator.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        complexityValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (rules: IPasswordRuleSet, required: boolean) =>\n    (control: AbstractControl) => {\n        const value: string = control.value;\n\n        if (\n            !required &&\n            (value == null || value === '')\n        ) { return null; }\n\n        const ruleKeys = Object.keys(rules);\n\n        const validityMap = ruleKeys\n            .reduce(\n                (ruleStateMap, ruleKey) => {\n                    const validator = rules[ruleKey];\n                    if (\n                        value == null ||\n                        !resolveFn(validator)(value)\n                    ) {\n                        ruleStateMap[ruleKey] = true;\n                    }\n\n                    return ruleStateMap;\n                },\n                {} as IRuleValidationState,\n            );\n\n        return !Object.keys(validityMap).length ?\n            null :\n            {\n                [VALIDATION_RULE_NAME]: validityMap,\n            };\n    }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveFn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (obj: IRegexLike | IPasswordValidationFn) => {\n    const isRegexLike = typeof obj === 'object' && !!obj.test;\n\n    if (isRegexLike) { return (obj as IRegexLike).test.bind(obj); }\n\n    if (typeof obj === 'function') { return obj; }\n\n    throw Error('The validation member must be a Function or a Regex!');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VALIDATION_RULE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'complexity'\n                    \n                \n\n\n        \n    \n\n    projects/angular/components/ui-grid/src/components/ui-grid-toggle-columns/ui-grid-toggle-columns.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMPONENT_SELECTOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ui-grid-toggle-columns'\n                    \n                \n\n\n        \n    \n\n    projects/angular/components/ui-snackbar/src/ui-snackbar.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_DURATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_HORIZONTAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'center'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_VERTICAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'top'\n                    \n                \n\n\n        \n    \n\n    projects/angular/components/ui-suggest/src/ui-suggest.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SUGGEST_DEBOUNCE_TIME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 300\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SUGGEST_DRILLDOWN_CHARACTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MAT_CHIP_INPUT_SELECTOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.mat-chip-list input'\n                    \n                \n\n\n        \n    \n\n    projects/angular/components/ui-grid/src/ui-grid.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_VIRTUAL_SCROLL_ITEM_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 48\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FOCUSABLE_ELEMENTS_QUERY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'a, button:not([hidden]), input:not([hidden]), textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UI_GRID_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('UiGrid DataManager options.')\n                    \n                \n\n\n        \n    \n\n    projects/angular/a11y/src/ui-auto-accessible-label/ui-auto-accessible-label.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'disable-auto-accessible-label'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MAT_TOOLTIP_MISSING_WARNING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n[A11Y]: icon button doesn't have a MatTooltip.\n\nAn icon button should have a tooltip to clarify it's purpose. The tooltip's content is shown on mouse and keyboard hover and, for assistive technology users, it is used as the button's label.\nYou can disable this directive using the boolean ${DISABLE_AUTO_ACCESSIBLE_LABEL_ATTRIBUTE} attribute in case you need more control over the button's accessible label.\n`.trim()\n                    \n                \n\n\n        \n    \n\n    projects/angular/components/ui-snackbar/src/ui-snackbar.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ICON_MAP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [SnackBarType.Info, 'info'],\n    [SnackBarType.Success, 'check_circle'],\n    [SnackBarType.Warning, 'warning'],\n    [SnackBarType.Error, 'error'],\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        panelClass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (type: SnackBarType) =>\n    `ui-snackbar-${type}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UI_MAT_SNACK_BAR_DEFAULT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UiMatSnackBarConfig')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UI_MAT_SNACK_BAR_PAYLOAD\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UiSnackBarService Payload')\n                    \n                \n\n\n        \n    \n\n    projects/angular/test.theme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JASMINE_STYLES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n    html, body {\n        background-color: #222;\n        color: #aaa;\n    }\n\n    .jasmine_html-reporter {\n        background-color: transparent!important;\n    }\n\n    .jasmine-stack-trace,\n    .jasmine-bar.jasmine-menu,\n    .jasmine-spec-list-menu {\n        border: none!important;\n        background-color: #333!important;\n        color: #efefef!important;\n    }\n\n    .jasmine-result-message {\n        color: #efefef!important;\n    }\n\n    li.jasmine-passed a,\n    li.jasmine-passed:before {\n        color: #66bb6a!important;\n    }\n\n    .jasmine-spec-detail.jasmine-failed,\n    .jasmine-overall-result.jasmine-failed {\n        border-top: 2px solid #222!important;\n        border-bottom: 2px solid #222!important;\n        background-color: #ca3a11!important;\n    }\n\n    .jasmine-bar.jasmine-skipped {\n        background-color: #333!important;\n    }\n\n    .jasmine-bar.jasmine-incomplete {\n        background-color: #666!important;\n    }\n\n    .jamine-passed {\n        background-color: #250;\n    }\n\n    .jasmine-failed {\n        background-color: #900;\n    }\n\n    .jasmine-symbol-summary li.jasmine-failed {\n        background-color: transparent!important;\n    }\n\n    ::-webkit-scrollbar {\n        width: 8px;\n    }\n\n    ::-webkit-scrollbar-track {\n        background: rgba(10, 10, 10, .3);\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background: rgba(10, 10, 10, .6);\n    }\n\n    ::-webkit-scrollbar:hover {\n        background: rgba(10, 10, 10, .44);\n    }\n`\n                    \n                \n\n\n        \n    \n\n    projects/angular/directives/ui-matformfield-required/src/ui-matformfield-required.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MATFORMFIELD_LABEL_SELECTOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.mat-form-field-label-wrapper label'\n                    \n                \n\n\n        \n    \n\n    projects/angular/pipes/src/pipe.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PIPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    UiNl2BrPipe,\n]\n                    \n                \n\n\n        \n    \n\n    projects/angular/directives/ui-dateformat/src/ui-dateformat.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolveTimezone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: IDateFormatOptions) => {\n    const type = typeof options.timezone;\n\n    switch (type) {\n        case 'string':\n            return (options.timezone as string);\n        case 'function':\n            return (options.timezone as TimezoneResolver)();\n        default:\n            return '';\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UI_DATEFORMAT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UiDateFormat options.')\n                    \n                \n\n            \n                \n                    ui-dateformat injection token for the options.\n\n                \n            \n\n        \n    \n\n    projects/angular/components/ui-tree-select/src/utils/tree.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TREE_ACTION_DEFAULTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TreeActionOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    emitEvent: true,\n}\n                    \n                \n\n\n        \n    \n\n    projects/angular/directives/ui-secondformat/src/ui-secondformat.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_SECONDFORMAT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('UiSecondFormat options.')\n                    \n                \n\n            \n                \n                    ui-secondformat injection token for the options.\n\n                \n            \n\n        \n    \n\n    projects/angular/components/ui-suggest/src/ui-suggest.animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_SUGGEST_ANIMATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    transformMenuList: trigger('displayState', [\n        state('closed', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('closed => open', group([\n            animate('100ms linear', style({\n                opacity: 1,\n            })),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n                transform: 'scale(1)',\n            })),\n        ])),\n        transition('* => closed', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n}\n                    \n                \n\n            \n                \n                    Open / Close animation definitions for UiSuggest.\nThese animations should mainly be kept in sync with the mat-menu animations.\nReference: https://github.com/angular/components/blob/master/src/material/menu/menu-animations.ts\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
